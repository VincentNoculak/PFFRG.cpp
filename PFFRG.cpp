//This code contains a FRG implementation for the XXZ model on a triangular lattice in a magnetic field. Seed fields are applied independently on three sublattices, which are therefore symmetry inequivalent.
//The code does not assume any continuous global spin rotation symmetries, nor does it assume time-reversal symmetry.
#include <stdio.h>
#include <math.h>
#include <iostream>
#include <fstream>
#include <gsl/gsl_errno.h>
#include <gsl/gsl_matrix.h>
#include <gsl/gsl_odeiv2.h>
#include <complex>
#include <array>
#include <stdlib.h>
#include <iomanip>
#include <algorithm>
#include <list>
#include<vector>
#include <chrono>

using namespace std;
const double pi = 3.14159265358979323846;

////// Frequency grid specifications
//We compute the self-energy and two-particle vertex on frequency grids with different numbers of frequencies
const int N = 38; //Number of positive transfer frequency grid entries for the two-particle vertex
const int Ng = 1000; //Number of positive self-energy frequency grid entries

double wp_vec[N + 1]; //Positive transfer frequency values, with wp_vec[0] = 0.0
double wg_vec[Ng + 1]; //Positive self-energy frequency values, with wg_vec[0] = 0.0

double wInt_vec[2 * N]; //Frequencies (positive and negative) for the trapezoital-rule frequency integration of Katanin terms
double wgInt_vec[2 * Ng]; //Frequencies (positive and negative) for the trapezoital-rule frequency integration in the computation of the magnetization

int M = 6;
const int NChifreqs = 2 * M*N;
double *wIntChi_vec = new double[NChifreqs]; //Frequencies (positive and negative) for the trapezoital-rule frequency integration in the computation of spin correlations
double *wIntChi_vecP = new double[M*N]; //Positive frequencies

//Constants that determine the limits of the frequency distributions
const double amin = -2.5; const double amax = +2.5;

////// Lambda and Runge-Kutta specifications
//Warning: If the maximum value of the cutoff Lambda or frequency omega gets changed, one may has to add a special case to the Katanin integration (if there are less than two frequency grid points above the maximum Lambda value).
double Lam = 160; //Cutoff value
double minLam = 0.02; //Minimum cutoff value
double LamResolution = 0.98; //Starting relative cutoff jump distance
const double precision = 1e-4; //Error tolerance of the Runge-Kutta method
const double precisionAbs = precision; //Absolute error tolerance
const double precisionRel = precision; //Relative error tolerance
const double maxStepGrowth = 0.1; //Maximum relative cutoff jump distance (the applied Runge-Kutta method has an adaptive jump distance)


////// Model parameters
const double J1 = 1; //Heisenberg Interaction
const double aniso = 0.5; //Anisotropy factor for the XXZ model
const double delta = 0.04; //Seed field size

const int L = 5; //Maximum correlation distance, given in units of nearest-neighbor distances
const int Nsl = 3; //Number of sublattices
const int Nsl2 = Nsl * Nsl;


string datafilename = "TriangularLattice"; //Name of files in which observables are saved


////// preparations for vertex dimensions: dims = the dimensions of G_vec

//Self-energy and two-particle vertex are saved in a single 1d array.
//Vertex array dimensions
const int accDims[] = { 17 * Nsl*(2 * L + 1)*(2 * L + 1)*(N + 1)*(N + 1)*(2 * N + 1), Nsl*(2 * L + 1)*(2 * L + 1)*(N + 1)*(N + 1)*(2 * N + 1), (2 * L + 1)*(2 * L + 1)*(N + 1)*(N + 1)*(2 * N + 1), (2 * L + 1)*(N + 1)*(N + 1)*(2 * N + 1), (N + 1)*(N + 1)*(2 * N + 1), (N + 1)*(2 * N + 1), (2 * N + 1) };
//Dimensions for the propagator bubble (pair) array
const int PrBubbleDim[] = { 5 * 16 * (2 * N + 1),16 * (2 * N + 1),(2 * N + 1) };
//Dimensions of the array that stores vertices that are called in the RPA channel
const int RPAsize[] = { 2 * 16 * Nsl*(2 * L + 1)*(2 * L + 1),16 * Nsl*(2 * L + 1)*(2 * L + 1),Nsl*(2 * L + 1)*(2 * L + 1),(2 * L + 1)*(2 * L + 1),(2 * L + 1) };
const int totaldim = accDims[0];

double *G_vec = new double[totaldim]; //Vertex array
double *PropagatorBubble = new double[PrBubbleDim[0]]; //Propagator bubble array
//double *DG_TwoLoop_S = new double[totaldim];
//double *DG_TwoLoop_T = new double[totaldim];
//double *DG_TwoLoop_U = new double[totaldim];

////// basic helper functions

void printDoubleArray(const double array[], int length) {
    for (int i = 0; i < length; ++i) cout << array[i] << " ";
    cout << "\n";
}

void writeVerticesInFile() {
    std::ofstream out("vertices.data", std::ios_base::binary);
    out.write((char*)G_vec, sizeof(double)*totaldim);
    return;
}

void readVerticesFromFile() {
    std::ifstream in("vertices.data", std::ios_base::binary);
    if (!in.read((char*)G_vec, sizeof(double)*totaldim))
    {
        // generate new values as needed...
    }
    return;
}

inline int sign(double x) { if (x >= 0.) return +1; else return -1; }

inline double dsign(double x) { if (x >= 0.) return +1.0; else return -1.0; }


//The following methods give weights in the Katanin frequency integration. Note that we make use of a sharp frequency cutoff which restricts the integration boundaries.
inline double getTrapzWeight(const double x_vec[], int length, int m, int shift = 0) {
    //Given a sorted x_vec, get the weigth for trapz integration of entry m
    if (m == shift) {
        return (x_vec[1] - x_vec[0]) / 2.;
    }
    else if (m == length - 1) {
        return (x_vec[length - 1] - x_vec[length - 2]) / 2.;
    }
    else {
        return (x_vec[m + 1] - x_vec[m - 1]) / 2.;
    }
}

inline double getTrapzWeightKat1(const double x_vec[], int length, double wupborder, int m) {
    //Given a sorted x_vec, get the weigth for trapz integration of entry m
    if (m == length - 1) {
        if (length != 1) {
            return 0.5*(x_vec[length - 1] - x_vec[length - 2] + (2 - (wupborder - x_vec[length - 1]) / (x_vec[length] - x_vec[length - 1]))*(wupborder - x_vec[length - 1]));
        }
        return 0.5*((2 - (wupborder - x_vec[length - 1]) / (x_vec[length] - x_vec[length - 1]))*(wupborder - x_vec[length - 1]));
    }
    else if (m == 0) {
        return (x_vec[1] - x_vec[0]) / 2.;
    }

    else if (m == length) {
        return 0.5*(wupborder - x_vec[length - 1])*(wupborder - x_vec[length - 1]) / (x_vec[length] - x_vec[length - 1]);
    }
    else {
        return (x_vec[m + 1] - x_vec[m - 1]) / 2.;
    }
}

inline double getTrapzWeightKat1pol(const double x_vec[], int length, double wupborder, int m) {
    //Given a sorted x_vec, get the weigth for trapz integration of entry m
    if (m == length - 1) {
        if (length != 1) {
            return (2 * wupborder - x_vec[length - 2] - x_vec[length - 1]) / 2.;
        }
        return (wupborder - x_vec[length - 1]);
    }
    else if (m == 0) {
        return (x_vec[1] - x_vec[0]) / 2.;
    }
    else {
        return (x_vec[m + 1] - x_vec[m - 1]) / 2.;
    }
}

inline double getTrapzWeightKat3(const double x_vec[], int length, int m, int shift = 0) {
    //Given a sorted x_vec, get the weigth for trapz integration of entry m
    if (m == shift) {
        return (x_vec[1] - x_vec[0]) / 2.;
    }
    else if (m == length - 1) {
        return (x_vec[length - 1] - x_vec[length - 2]) / 2.;
    }
    else {
        return (x_vec[m + 1] - x_vec[m - 1]) / 2.;
    }
}

////// functions for linear w-interpolation
struct pairWeight {
    // pair of freqs
    int p[2]; 	// indices
    double w[2];// weights
    int s[2]; 	// signs
};

//Closest frequency just above absolute of "value" in wp_vec
inline int GetClosest(double value) {
    //N+1 because we want to round up half of N
    int jumpDistance = (N + 1) / 2;
    int position = jumpDistance;

    while (position < N + 1) {
        jumpDistance = (jumpDistance + 1) / 2;
        if (value <= wp_vec[position]) {
            if (value > wp_vec[position - 1]) {
                return position;
            }
            position -= jumpDistance;
            continue;
        }
        position += jumpDistance;
    }
    return N;
}

// Finds pairWeight for a given frequency w with linear interpolation
pairWeight findPw(double w) {
    pairWeight pw;
    int closest = 1;
    double Delta;

    // If w=0:
    if (w == 0.) {
        pw.p[0] = +1;
        pw.p[1] = +1;
        pw.w[0] = 0.5;
        pw.w[1] = 0.5;
        pw.s[0] = +1;
        pw.s[1] = -1;
        return pw;
    }

    closest = GetClosest(abs(w));

    // If abs(w) < wp_vec[1]
    if (closest == 1) {
        pw.p[0] = +1;
        pw.p[1] = +1;
        pw.w[0] = (abs(w) + wp_vec[1]) / (2 * wp_vec[1]);
        pw.w[1] = 1 - pw.w[0];
        pw.s[0] = sign(w);
        pw.s[1] = -sign(w);
        return pw;
    }

    // If w hits any entry of w_vec exactly or if it lies outside w_vec range
    if (abs(wp_vec[closest] - abs(w)) < 1e-10 or (closest == N and abs(w) > wp_vec[N])) {
        pw.p[0] = closest;
        pw.p[1] = closest;
        pw.w[0] = 0.5;
        pw.w[1] = 0.5;
        pw.s[0] = sign(w);
        pw.s[1] = sign(w);
        return pw;
    }

    // Standard case: w between two discrete freqs
    else {
        pw.p[0] = closest - 1;
        pw.p[1] = closest;
        Delta = wp_vec[pw.p[1]] - wp_vec[pw.p[0]];
        pw.w[0] = (wp_vec[pw.p[1]] - abs(w)) / Delta;
        pw.w[1] = (abs(w) - wp_vec[pw.p[0]]) / Delta;
        pw.s[0] = sign(w);
        pw.s[1] = sign(w);
        return pw;
    }
}

// Closest frequency just abovev the absolute of "value" in wg_vec
inline int GetClosestg(double value) {
    // N+1 because we want to round up half of N
    int jumpDistance = (Ng + 1) / 2;
    int position = jumpDistance;

    while (position < Ng + 1) {
        jumpDistance = (jumpDistance + 1) / 2;
        if (value <= wg_vec[position]) {
            if (value > wg_vec[position - 1]) {
                return position;
            }
            position -= jumpDistance;
            continue;
        }
        position += jumpDistance;
    }
    return Ng;
}

// Finds pairWeight for a given frequency w with linear interpolation
pairWeight findPwg(double w) {
    pairWeight pw;
    int closest = 1;
    double Delta;

    // If w=0:
    if (w == 0.) {
        pw.p[0] = +1;
        pw.p[1] = +1;
        pw.w[0] = 0.5;
        pw.w[1] = 0.5;
        pw.s[0] = +1;
        pw.s[1] = -1;
        return pw;
    }

    // Find element index 'closest' just above abs(w)
    closest = GetClosestg(abs(w));

    // If abs(w) < wp_vec[1]
    if (closest == 1) {
        pw.p[0] = +1;
        pw.p[1] = +1;
        pw.w[0] = (abs(w) + wg_vec[1]) / (2 * wg_vec[1]);
        pw.w[1] = 1 - pw.w[0];
        pw.s[0] = sign(w);
        pw.s[1] = -sign(w);
        return pw;
    }

    // If w hits any entry of w_vec exactly or if it lies outside the range of w_vec
    if ((closest == Ng and abs(w) > wg_vec[Ng])) {
        pw.p[0] = closest;
        pw.p[1] = closest;
        pw.w[0] = 0.5;
        pw.w[1] = 0.5;
        pw.s[0] = sign(w);
        pw.s[1] = sign(w);
        return pw;
    }

    // Standard case: w is located between two discrete freqs
    else {
        pw.p[0] = closest - 1;
        pw.p[1] = closest;
        Delta = wg_vec[pw.p[1]] - wg_vec[pw.p[0]];
        pw.w[0] = (wg_vec[pw.p[1]] - abs(w)) / Delta;
        pw.w[1] = (abs(w) - wg_vec[pw.p[0]]) / Delta;
        pw.s[0] = sign(w);
        pw.s[1] = sign(w);
        return pw;
    }
}

////// geometric functions for the lattice
// Data structure to save a lattice vector \bm{v} = a1*\bm{a}_{1} + a2*\bm{a}_{2} that starts on sublattice i.
//\bm{a}_{1}=(1,sqrt(3))/2
//\bm{a}_{2}=(1,0)
struct Rvec {
    int i; // Sublattice
    int a1;
    int a2;
};

void printR(Rvec R) {
    cout << "(" << R.i << "," << R.a1 << "," << R.a2 << ")\n";
}

//Zero-vectors on different sublattices
Rvec R0i0 = { 0,0,0 };
Rvec R0i1 = { 1,0,0 };
Rvec R0i2 = { 1,0,0 };

//Different lattice vector arrays
//O: All lattice vectors below a specified distance, Oi0: All lattice vectors from sublattice 0
//Oreduced: Lattice vectors inequivalent by a C3 in-plane rotation symmetry
//Omaxreduced: Lattice vectors inequivalent by a C3 in-plane and C2 out-of-plane rotation symmetry
//Omaxreducedi0: Omaxreduced vectors which start on sublattice 0
list<Rvec> O, Oi0, Oi1, Oi2, Oreduced, Omaxreduced, Omaxreducedi0;
Rvec* Oi0Array;
Rvec* Oi1Array;
Rvec* Oi2Array;

//Is R a vector of smaller or equal distance as L?
inline bool inO(Rvec R) {
    if (sqrt((0.5*R.a1 + R.a2)*(0.5*R.a1 + R.a2) + 0.75*R.a1*R.a1) <= L + 0.01) { return true; }
    return false;
}


//Subdivide vectors across 3 sectors that are equivalent by in-plane C3 lattice symmetry
inline int whichSector(Rvec R)
{
    if (R.a1 >= 0) {
        if (R.a1 + R.a2 > 0) {
            return 0;
        }
        else {
            return 1;
        }
    }
    else {
        if (R.a2 >= 0) {
            return 2;
        }
        else {
            return 1;
        }
    }
}

//Subdivide sector "0" (see previous method) into two sectors that are equivalent by out-of-plane C2 lattice symmetry
inline bool inCorrectSubSector(Rvec R)
{
    if (R.a2 > 0) {
        return true;
    }
    return false;
}

//Find out which sublattice a vector points to
inline int getRfSublattice(Rvec R) {
    int c1 = R.a1 - R.a2;
    int c2 = R.a1 + 2 * R.a2;

    if (abs(c1) % 3 == 0 && abs(c2) % 3 == 0) {
        return R.i;
    }
    else if (abs(c1 - 1) % 3 == 0 && abs(c2 - 1) % 3 == 0) {
        return (R.i + 1) % 3;
    }
    else {
        return (R.i + 2) % 3;
    }
}

Rvec invertVector(Rvec R) {
    return { getRfSublattice(R),-R.a1,-R.a2 };
}

////// basic functions to write/read on G_vec //////////////////////////
// Access the two-particle vertex $\Gamma^{mu mu2}_{R}(s,t,u)$ via the next three methods by specifying components mu and mu2 of its spin structure, a lattice vector R, and transfer frequency indices ns, nt and nu (specifying the frequency in wp_vec)
//Argument "kind" still has to be removed. It's a leftover from an earlier version. Currently it is always set to kind=1 such that enough space is present to save the self-energy at the beginning of the array G_vec .
inline void addG(double x, double G_vec[], int kind, int mu, int mu2, Rvec R, int ns, int nt, int nu) {

    G_vec[(4 * mu + mu2 + kind)*accDims[1] + R.i*accDims[2] + (R.a1 + L)*accDims[3] + (R.a2 + L)*accDims[4] + nt * accDims[5] + ns * accDims[6] + nu + N] += x;
}

inline void setG(double x, double G_vec[], int kind, int mu, int mu2, Rvec R, int ns, int nt, int nu) {

    G_vec[(4 * mu + mu2 + kind)*accDims[1] + R.i*accDims[2] + (R.a1 + L)*accDims[3] + (R.a2 + L)*accDims[4] + nt * accDims[5] + ns * accDims[6] + nu + N] = x;
}

inline double getG(const double G_vec[], int kind, int mu, int mu2, Rvec R, int ns, int nt, int nu) {
    // Apply vertex frequency symmetries if required
    if (nt < 0) {
        return getG(G_vec, kind, mu2, mu, invertVector(R), ns, -nt, -nu);
    }

    if (ns < 0) {
        if ((mu == 0 && mu2 != 0) || (mu != 0 && mu2 == 0)) {
            return -getG(G_vec, kind, mu, mu2, R, -ns, nt, -nu);
        }
        else
        {
            return getG(G_vec, kind, mu, mu2, R, -ns, nt, -nu);
        }
    }

    return G_vec[(4 * mu + mu2 + kind)*accDims[1] + R.i*accDims[2] + (R.a1 + L)*accDims[3] + (R.a2 + L)*accDims[4] + nt * accDims[5] + ns * accDims[6] + nu + N];
}

//Access the self-energy $\gamma^{mu}(omega)_{i}$ via the next three methods by speciying the component mu of its spin structure, sublattice i, and positive frequency index nomega
inline void setSE(double x, double G_vec[], int mu, int nomega, int i) {
    G_vec[(Ng + 1) * Nsl * mu + nomega * Nsl + i] = x;
}

inline void addSE(double x, double G_vec[], int mu, int nomega, int i) {
    G_vec[(Ng + 1) * Nsl * mu + nomega * Nsl + i] += x;
}

inline double getSE(const double G_vec[], int mu, int nomega, int i) {
    return G_vec[(Ng + 1) * Nsl * mu + nomega * Nsl + i];
}

//Access propagator bubbles via the next two methods
//Explanation of the "type" argument: 1 Type for the Katanin terms and 4 types for the non-Katanin terms, which correspond to different frequency arguments within each channel
/*inline void setBubble(double x, int type, int mu, int mu2, int nw) {
    PropagatorBubble[type*PrBubbleDim[1] + (4 * mu + mu2)*PrBubbleDim[2] + nw + N] = x;
}

inline double getBubble(int type, int mu, int mu2, int nw) {
    return PropagatorBubble[type*PrBubbleDim[1] + (4 * mu + mu2)*PrBubbleDim[2] + nw + N];
}*/


// Applies lattice symmetries to fill out empty two-particle vertex array entries at the end of each Lambda step
// Note that the method applies lattice symmetries and only the s<-->u vertex frequency symmetry. The remaining vertex symmetries are applied in the methods that access vertex functions.
void setInSymmetries(double DG_vec[], int channel = 0) {

    //Apply the u <--> s symmetry
#pragma omp parallel for collapse(2)
    for (int nt = 1; nt <= N; ++nt) {
        for (int nu = 1; nu <= N; ++nu) {
            for (int ns = nu + 1; ns <= N; ++ns) {
                list<Rvec>::iterator it;
                for (it = Omaxreduced.begin(); it != Omaxreduced.end(); ++it) {
                    Rvec R = *it;
                    setG(-getG(DG_vec, 1, 0, 0, R, nu, nt, ns), DG_vec, 1, 0, 0, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 0, 1, R, nu, nt, ns), DG_vec, 1, 0, 1, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 0, 2, R, nu, nt, ns), DG_vec, 1, 0, 2, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 0, 3, R, nu, nt, ns), DG_vec, 1, 0, 3, R, ns, nt, nu);
                    setG(-getG(DG_vec, 1, 1, 0, R, nu, nt, ns), DG_vec, 1, 1, 0, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 1, 1, R, nu, nt, ns), DG_vec, 1, 1, 1, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 1, 2, R, nu, nt, ns), DG_vec, 1, 1, 2, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 1, 3, R, nu, nt, ns), DG_vec, 1, 1, 3, R, ns, nt, nu);
                    setG(-getG(DG_vec, 1, 2, 0, R, nu, nt, ns), DG_vec, 1, 2, 0, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 2, 1, R, nu, nt, ns), DG_vec, 1, 2, 1, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 2, 2, R, nu, nt, ns), DG_vec, 1, 2, 2, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 2, 3, R, nu, nt, ns), DG_vec, 1, 2, 3, R, ns, nt, nu);
                    setG(-getG(DG_vec, 1, 3, 0, R, nu, nt, ns), DG_vec, 1, 3, 0, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 3, 1, R, nu, nt, ns), DG_vec, 1, 3, 1, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 3, 2, R, nu, nt, ns), DG_vec, 1, 3, 2, R, ns, nt, nu);
                    setG(+getG(DG_vec, 1, 3, 3, R, nu, nt, ns), DG_vec, 1, 3, 3, R, ns, nt, nu);

                    setG(-getG(DG_vec, 1, 0, 0, R, nu, nt, -ns), DG_vec, 1, 0, 0, R, ns, nt, -nu);
                    setG(-getG(DG_vec, 1, 0, 1, R, nu, nt, -ns), DG_vec, 1, 0, 1, R, ns, nt, -nu);
                    setG(-getG(DG_vec, 1, 0, 2, R, nu, nt, -ns), DG_vec, 1, 0, 2, R, ns, nt, -nu);
                    setG(-getG(DG_vec, 1, 0, 3, R, nu, nt, -ns), DG_vec, 1, 0, 3, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 1, 0, R, nu, nt, -ns), DG_vec, 1, 1, 0, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 1, 1, R, nu, nt, -ns), DG_vec, 1, 1, 1, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 1, 2, R, nu, nt, -ns), DG_vec, 1, 1, 2, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 1, 3, R, nu, nt, -ns), DG_vec, 1, 1, 3, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 2, 0, R, nu, nt, -ns), DG_vec, 1, 2, 0, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 2, 1, R, nu, nt, -ns), DG_vec, 1, 2, 1, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 2, 2, R, nu, nt, -ns), DG_vec, 1, 2, 2, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 2, 3, R, nu, nt, -ns), DG_vec, 1, 2, 3, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 3, 0, R, nu, nt, -ns), DG_vec, 1, 3, 0, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 3, 1, R, nu, nt, -ns), DG_vec, 1, 3, 1, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 3, 2, R, nu, nt, -ns), DG_vec, 1, 3, 2, R, ns, nt, -nu);
                    setG(+getG(DG_vec, 1, 3, 3, R, nu, nt, -ns), DG_vec, 1, 3, 3, R, ns, nt, -nu);
                }
            }
        }
    }

    //Apply lattice symmetries
    Rvec R;
    list<Rvec>::iterator it3;
    for (it3 = Omaxreduced.begin(); it3 != Omaxreduced.end(); ++it3) {
        R = *it3;
#pragma omp parallel for collapse(2)
        for (int nt = 1; nt <= N; ++nt) {
            for (int ns = 1; ns <= N; ++ns) {
                for (int nu = -N; nu <= N; ++nu) {
                    if (nu == 0) { continue; }
                    //C2 out-of-plane rotation
                    setG(getG(DG_vec, 1, 0, 0, R, ns, nt, nu), DG_vec, 1, 0, 0, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 1, R, ns, nt, nu), DG_vec, 1, 0, 1, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 2, R, ns, nt, nu), DG_vec, 1, 0, 2, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 3, R, ns, nt, nu), DG_vec, 1, 0, 3, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 0, R, ns, nt, nu), DG_vec, 1, 1, 0, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 1, R, ns, nt, nu), DG_vec, 1, 1, 1, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 2, R, ns, nt, nu), DG_vec, 1, 1, 2, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 3, R, ns, nt, nu), DG_vec, 1, 1, 3, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 0, R, ns, nt, nu), DG_vec, 1, 2, 0, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 1, R, ns, nt, nu), DG_vec, 1, 2, 1, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 2, R, ns, nt, nu), DG_vec, 1, 2, 2, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 3, R, ns, nt, nu), DG_vec, 1, 2, 3, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 0, R, ns, nt, nu), DG_vec, 1, 3, 0, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 1, R, ns, nt, nu), DG_vec, 1, 3, 1, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 2, R, ns, nt, nu), DG_vec, 1, 3, 2, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 3, R, ns, nt, nu), DG_vec, 1, 3, 3, { R.i,R.a1 + R.a2,-R.a2 }, ns, nt, nu);

                }
            }
        }
    }

    list<Rvec>::iterator it2;
    for (it2 = Oreduced.begin(); it2 != Oreduced.end(); ++it2) {
        R = *it2;
#pragma omp parallel for collapse(2)
        for (int nt = 1; nt <= N; ++nt) {
            for (int ns = 1; ns <= N; ++ns) {
                for (int nu = -N; nu <= N; ++nu) {
                    if (nu == 0) { continue; }
                    //C3 in-plane rotation
                    setG(getG(DG_vec, 1, 0, 0, R, ns, nt, nu), DG_vec, 1, 0, 0, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 1, R, ns, nt, nu), DG_vec, 1, 0, 1, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 2, R, ns, nt, nu), DG_vec, 1, 0, 2, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 3, R, ns, nt, nu), DG_vec, 1, 0, 3, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 0, R, ns, nt, nu), DG_vec, 1, 1, 0, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 1, R, ns, nt, nu), DG_vec, 1, 1, 1, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 2, R, ns, nt, nu), DG_vec, 1, 1, 2, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 3, R, ns, nt, nu), DG_vec, 1, 1, 3, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 0, R, ns, nt, nu), DG_vec, 1, 2, 0, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 1, R, ns, nt, nu), DG_vec, 1, 2, 1, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 2, R, ns, nt, nu), DG_vec, 1, 2, 2, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 3, R, ns, nt, nu), DG_vec, 1, 2, 3, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 0, R, ns, nt, nu), DG_vec, 1, 3, 0, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 1, R, ns, nt, nu), DG_vec, 1, 3, 1, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 2, R, ns, nt, nu), DG_vec, 1, 3, 2, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 3, R, ns, nt, nu), DG_vec, 1, 3, 3, { R.i,R.a2,-R.a1 - R.a2 }, ns, nt, nu);

                    setG(getG(DG_vec, 1, 0, 0, R, ns, nt, nu), DG_vec, 1, 0, 0, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 1, R, ns, nt, nu), DG_vec, 1, 0, 1, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 2, R, ns, nt, nu), DG_vec, 1, 0, 2, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 0, 3, R, ns, nt, nu), DG_vec, 1, 0, 3, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 0, R, ns, nt, nu), DG_vec, 1, 1, 0, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 1, R, ns, nt, nu), DG_vec, 1, 1, 1, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 2, R, ns, nt, nu), DG_vec, 1, 1, 2, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 1, 3, R, ns, nt, nu), DG_vec, 1, 1, 3, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 0, R, ns, nt, nu), DG_vec, 1, 2, 0, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 1, R, ns, nt, nu), DG_vec, 1, 2, 1, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 2, R, ns, nt, nu), DG_vec, 1, 2, 2, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 2, 3, R, ns, nt, nu), DG_vec, 1, 2, 3, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 0, R, ns, nt, nu), DG_vec, 1, 3, 0, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 1, R, ns, nt, nu), DG_vec, 1, 3, 1, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 2, R, ns, nt, nu), DG_vec, 1, 3, 2, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);
                    setG(getG(DG_vec, 1, 3, 3, R, ns, nt, nu), DG_vec, 1, 3, 3, { R.i,-R.a1 - R.a2,R.a1 }, ns, nt, nu);

                }
            }
        }
    }


    // Delete vertex components that should vanish based on symmetry arguments
    for (int mu = 0; mu < 4; mu++) {
#pragma omp parallel for collapse(2)
        for (int ns = 1; ns <= N; ++ns) {
            for (int nt = 1; nt <= N; ++nt) {
                list<Rvec>::iterator it;
                for (it = O.begin(); it != O.end(); ++it) {
                    Rvec R = *it;
                    setG(0., DG_vec, 1, mu, 0, R, ns, nt, ns);
                    setG(0., DG_vec, 1, 0, mu, R, ns, nt, -ns);
                }
            }
        }
    }

}

////// Get linearly interpolated self-energy with frequency argument w on sublattice i//////////////////////////////
double getIntpolGamma(const double G_vec[], double w, int i) {
    pairWeight pw = findPwg(w);
    return pw.s[0] * pw.w[0] * getSE(G_vec, 0, pw.p[0], i) + pw.s[1] * pw.w[1] * getSE(G_vec, 0, pw.p[1], i);
}
double getIntpolGammaz(const double G_vec[], int mu, double w, int i) {
    pairWeight pw = findPwg(w);
    return pw.w[0] * getSE(G_vec, mu, pw.p[0], i) + pw.w[1] * getSE(G_vec, mu, pw.p[1], i);
}


////// Get linearly interpolated two-particle vertex
inline double getIntpolG(const double G_vec[], int kind, int mu, int mu2, Rvec R, int nX, pairWeight pw_1, pairWeight pw_2) {
    return    +pw_1.w[0] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, nX, pw_1.s[0] * pw_1.p[0], pw_2.s[0] * pw_2.p[0])
            + pw_1.w[0] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, nX, pw_1.s[0] * pw_1.p[0], pw_2.s[1] * pw_2.p[1])
            + pw_1.w[1] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, nX, pw_1.s[1] * pw_1.p[1], pw_2.s[0] * pw_2.p[0])
            + pw_1.w[1] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, nX, pw_1.s[1] * pw_1.p[1], pw_2.s[1] * pw_2.p[1]);
}

inline double getIntpolG(const double G_vec[], int kind, int mu, int mu2, Rvec R, pairWeight pw_1, int nX, pairWeight pw_2) {
    return    +pw_1.w[0] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, pw_1.s[0] * pw_1.p[0], nX, pw_2.s[0] * pw_2.p[0])
            + pw_1.w[0] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, pw_1.s[0] * pw_1.p[0], nX, pw_2.s[1] * pw_2.p[1])
            + pw_1.w[1] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, pw_1.s[1] * pw_1.p[1], nX, pw_2.s[0] * pw_2.p[0])
            + pw_1.w[1] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, pw_1.s[1] * pw_1.p[1], nX, pw_2.s[1] * pw_2.p[1]);
}

inline double getIntpolG(const double G_vec[], int kind, int mu, int mu2, Rvec R, pairWeight pw_1, pairWeight pw_2, int nX) {
    return    +pw_1.w[0] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, pw_1.s[0] * pw_1.p[0], pw_2.s[0] * pw_2.p[0], nX)
            + pw_1.w[0] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, pw_1.s[0] * pw_1.p[0], pw_2.s[1] * pw_2.p[1], nX)
            + pw_1.w[1] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, pw_1.s[1] * pw_1.p[1], pw_2.s[0] * pw_2.p[0], nX)
            + pw_1.w[1] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, pw_1.s[1] * pw_1.p[1], pw_2.s[1] * pw_2.p[1], nX);
}

inline double getIntpolG(const double G_vec[], int kind, int mu, int mu2, Rvec R, pairWeight pw_1, pairWeight pw_2, pairWeight pw_3) {
    return    +pw_3.w[0] * pw_1.w[0] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, pw_1.s[0] * pw_1.p[0], pw_2.s[0] * pw_2.p[0], pw_3.s[0] * pw_3.p[0])
            + pw_3.w[0] * pw_1.w[0] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, pw_1.s[0] * pw_1.p[0], pw_2.s[1] * pw_2.p[1], pw_3.s[0] * pw_3.p[0])
            + pw_3.w[0] * pw_1.w[1] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, pw_1.s[1] * pw_1.p[1], pw_2.s[0] * pw_2.p[0], pw_3.s[0] * pw_3.p[0])
            + pw_3.w[0] * pw_1.w[1] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, pw_1.s[1] * pw_1.p[1], pw_2.s[1] * pw_2.p[1], pw_3.s[0] * pw_3.p[0])
            + pw_3.w[1] * pw_1.w[0] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, pw_1.s[0] * pw_1.p[0], pw_2.s[0] * pw_2.p[0], pw_3.s[1] * pw_3.p[1])
            + pw_3.w[1] * pw_1.w[0] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, pw_1.s[0] * pw_1.p[0], pw_2.s[1] * pw_2.p[1], pw_3.s[1] * pw_3.p[1])
            + pw_3.w[1] * pw_1.w[1] * pw_2.w[0] * getG(G_vec, kind, mu, mu2, R, pw_1.s[1] * pw_1.p[1], pw_2.s[0] * pw_2.p[0], pw_3.s[1] * pw_3.p[1])
            + pw_3.w[1] * pw_1.w[1] * pw_2.w[1] * getG(G_vec, kind, mu, mu2, R, pw_1.s[1] * pw_1.p[1], pw_2.s[1] * pw_2.p[1], pw_3.s[1] * pw_3.p[1]);
}

////// flow of self-energy gamma

//Get full propagator for component 0
inline double getg0(double w, int i, const double G_vec[]) {
    return (w + getIntpolGamma(G_vec, w, i)) / (((w + getIntpolGamma(G_vec, w, i))*(w + getIntpolGamma(G_vec, w, i))) + (getIntpolGammaz(G_vec, 1, w, i)*getIntpolGammaz(G_vec, 1, w, i))
                                                + (getIntpolGammaz(G_vec, 2, w, i)*getIntpolGammaz(G_vec, 2, w, i))
                                                + (getIntpolGammaz(G_vec, 3, w, i)*getIntpolGammaz(G_vec, 3, w, i)));
}
//Get full propagator for components mu=1, 2, 3(x, y, z)
inline double getgz(int mu, double w, int i, const double G_vec[]) {
    return -getIntpolGammaz(G_vec, mu, w, i) / (((w + getIntpolGamma(G_vec, w, i))*(w + getIntpolGamma(G_vec, w, i))) + (getIntpolGammaz(G_vec, 1, w, i)*getIntpolGammaz(G_vec, 1, w, i))
                                                + (getIntpolGammaz(G_vec, 2, w, i)*getIntpolGammaz(G_vec, 2, w, i))
                                                + (getIntpolGammaz(G_vec, 3, w, i)*getIntpolGammaz(G_vec, 3, w, i)));
}
//Get full propagator for component mu, frequency w, and sublattice i
inline double getg(int mu, double w, int i, const double G_vec[]) {
    if (mu == 0) {
        return getg0(w, i, G_vec);
    }
    return getgz(mu, w, i, G_vec);
}

//Compute the right-hand side of the self-energy flow equation for specified self-energy arguments given by a frequency index n and a sublattice i
void SEFlow(int n, double Lam, int i, const double G_vec[], double DG_vec[])
{
    double w = wg_vec[n];

    pairWeight pw_wpLam = findPw(w + Lam);
    pairWeight pw_wmLam = findPw(w - Lam);
    double jsum00 = 0., jsum0x = 0., jsum0y = 0., jsum0z = 0.,
            jsumx0 = 0., jsumxx = 0., jsumxy = 0., jsumxz = 0.,
            jsumy0 = 0., jsumyx = 0., jsumyy = 0., jsumyz = 0.,
            jsumz0 = 0., jsumzx = 0., jsumzy = 0., jsumzz = 0.;

    double g0[3] = { getg0(Lam,0,G_vec),getg0(Lam,1,G_vec),getg0(Lam,2,G_vec) };
    double gx[3] = { getgz(1,Lam,0,G_vec),getgz(1,Lam,1,G_vec),getgz(1,Lam,2,G_vec) };
    double gy[3] = { getgz(2,Lam,0,G_vec),getgz(2,Lam,1,G_vec),getgz(2,Lam,2,G_vec)  };
    double gz[3] = { getgz(3,Lam,0,G_vec),getgz(3,Lam,1,G_vec),getgz(3,Lam,2,G_vec)  };

    Rvec R;
    list<Rvec>::iterator it;
    list<Rvec> Otemp;
    if (i == 0) { Otemp = Oi0; }
    else if (i == 1) { Otemp = Oi1; }
    else { {Otemp = Oi2; } }

    //Perform the site summation of the Hartree term
    for (it = Otemp.begin(); it != Otemp.end(); ++it) {
        R = *it;
        int sub = getRfSublattice(R);
        // Sign of the second summand on each line may change as a symmetry of the propagator is applied
        jsum00 += (getIntpolG(G_vec, 1, 0, 0, R, pw_wpLam, 1, pw_wmLam) - getIntpolG(G_vec, 1, 0, 0, R, pw_wmLam, 1, pw_wpLam))*g0[sub];
        jsumx0 += (getIntpolG(G_vec, 1, 1, 0, R, pw_wpLam, 1, pw_wmLam) - getIntpolG(G_vec, 1, 1, 0, R, pw_wmLam, 1, pw_wpLam))*g0[sub];
        jsumy0 += (getIntpolG(G_vec, 1, 2, 0, R, pw_wpLam, 1, pw_wmLam) - getIntpolG(G_vec, 1, 2, 0, R, pw_wmLam, 1, pw_wpLam))*g0[sub];
        jsumz0 += (getIntpolG(G_vec, 1, 3, 0, R, pw_wpLam, 1, pw_wmLam) - getIntpolG(G_vec, 1, 3, 0, R, pw_wmLam, 1, pw_wpLam))*g0[sub];

        jsum0x += (getIntpolG(G_vec, 1, 0, 1, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 0, 1, R, pw_wmLam, 1, pw_wpLam))*gx[sub];
        jsum0y += (getIntpolG(G_vec, 1, 0, 2, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 0, 2, R, pw_wmLam, 1, pw_wpLam))*gy[sub];
        jsum0z += (getIntpolG(G_vec, 1, 0, 3, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 0, 3, R, pw_wmLam, 1, pw_wpLam))*gz[sub];
        jsumxx += (getIntpolG(G_vec, 1, 1, 1, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 1, 1, R, pw_wmLam, 1, pw_wpLam))*gx[sub];

        jsumxy += (getIntpolG(G_vec, 1, 1, 2, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 1, 2, R, pw_wmLam, 1, pw_wpLam))*gy[sub];
        jsumxz += (getIntpolG(G_vec, 1, 1, 3, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 1, 3, R, pw_wmLam, 1, pw_wpLam))*gz[sub];
        jsumyx += (getIntpolG(G_vec, 1, 2, 1, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 2, 1, R, pw_wmLam, 1, pw_wpLam))*gx[sub];
        jsumyy += (getIntpolG(G_vec, 1, 2, 2, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 2, 2, R, pw_wmLam, 1, pw_wpLam))*gy[sub];

        jsumyz += (getIntpolG(G_vec, 1, 2, 3, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 2, 3, R, pw_wmLam, 1, pw_wpLam))*gz[sub];
        jsumzx += (getIntpolG(G_vec, 1, 3, 1, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 3, 1, R, pw_wmLam, 1, pw_wpLam))*gx[sub];
        jsumzy += (getIntpolG(G_vec, 1, 3, 2, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 3, 2, R, pw_wmLam, 1, pw_wpLam))*gy[sub];
        jsumzz += (getIntpolG(G_vec, 1, 3, 3, R, pw_wpLam, 1, pw_wmLam) + getIntpolG(G_vec, 1, 3, 3, R, pw_wmLam, 1, pw_wpLam))*gz[sub];
    }

    Rvec R0 = { i,0,0 };


    double G00p = getIntpolG(G_vec, 1, 0, 0, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 0, 0, R0, pw_wmLam, pw_wpLam, 1);
    double G01p = getIntpolG(G_vec, 1, 0, 1, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 0, 1, R0, pw_wmLam, pw_wpLam, 1);
    double G02p = getIntpolG(G_vec, 1, 0, 2, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 0, 2, R0, pw_wmLam, pw_wpLam, 1);
    double G03p = getIntpolG(G_vec, 1, 0, 3, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 0, 3, R0, pw_wmLam, pw_wpLam, 1);
    double G10p = getIntpolG(G_vec, 1, 1, 0, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 1, 0, R0, pw_wmLam, pw_wpLam, 1);
    double G11p = getIntpolG(G_vec, 1, 1, 1, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 1, 1, R0, pw_wmLam, pw_wpLam, 1);
    double G12p = getIntpolG(G_vec, 1, 1, 2, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 1, 2, R0, pw_wmLam, pw_wpLam, 1);
    double G13p = getIntpolG(G_vec, 1, 1, 3, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 1, 3, R0, pw_wmLam, pw_wpLam, 1);
    double G20p = getIntpolG(G_vec, 1, 2, 0, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 2, 0, R0, pw_wmLam, pw_wpLam, 1);
    double G21p = getIntpolG(G_vec, 1, 2, 1, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 2, 1, R0, pw_wmLam, pw_wpLam, 1);
    double G22p = getIntpolG(G_vec, 1, 2, 2, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 2, 2, R0, pw_wmLam, pw_wpLam, 1);
    double G23p = getIntpolG(G_vec, 1, 2, 3, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 2, 3, R0, pw_wmLam, pw_wpLam, 1);
    double G30p = getIntpolG(G_vec, 1, 3, 0, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 3, 0, R0, pw_wmLam, pw_wpLam, 1);
    double G31p = getIntpolG(G_vec, 1, 3, 1, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 3, 1, R0, pw_wmLam, pw_wpLam, 1);
    double G32p = getIntpolG(G_vec, 1, 3, 2, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 3, 2, R0, pw_wmLam, pw_wpLam, 1);
    double G33p = getIntpolG(G_vec, 1, 3, 3, R0, pw_wpLam, pw_wmLam, 1) + getIntpolG(G_vec, 1, 3, 3, R0, pw_wmLam, pw_wpLam, 1);

    double G00m = getIntpolG(G_vec, 1, 0, 0, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 0, 0, R0, pw_wmLam, pw_wpLam, 1);
    double G01m = getIntpolG(G_vec, 1, 0, 1, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 0, 1, R0, pw_wmLam, pw_wpLam, 1);
    double G02m = getIntpolG(G_vec, 1, 0, 2, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 0, 2, R0, pw_wmLam, pw_wpLam, 1);
    double G03m = getIntpolG(G_vec, 1, 0, 3, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 0, 3, R0, pw_wmLam, pw_wpLam, 1);
    double G10m = getIntpolG(G_vec, 1, 1, 0, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 1, 0, R0, pw_wmLam, pw_wpLam, 1);
    double G11m = getIntpolG(G_vec, 1, 1, 1, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 1, 1, R0, pw_wmLam, pw_wpLam, 1);
    double G12m = getIntpolG(G_vec, 1, 1, 2, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 1, 2, R0, pw_wmLam, pw_wpLam, 1);
    double G13m = getIntpolG(G_vec, 1, 1, 3, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 1, 3, R0, pw_wmLam, pw_wpLam, 1);
    double G20m = getIntpolG(G_vec, 1, 2, 0, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 2, 0, R0, pw_wmLam, pw_wpLam, 1);
    double G21m = getIntpolG(G_vec, 1, 2, 1, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 2, 1, R0, pw_wmLam, pw_wpLam, 1);
    double G22m = getIntpolG(G_vec, 1, 2, 2, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 2, 2, R0, pw_wmLam, pw_wpLam, 1);
    double G23m = getIntpolG(G_vec, 1, 2, 3, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 2, 3, R0, pw_wmLam, pw_wpLam, 1);
    double G30m = getIntpolG(G_vec, 1, 3, 0, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 3, 0, R0, pw_wmLam, pw_wpLam, 1);
    double G31m = getIntpolG(G_vec, 1, 3, 1, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 3, 1, R0, pw_wmLam, pw_wpLam, 1);
    double G32m = getIntpolG(G_vec, 1, 3, 2, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 3, 2, R0, pw_wmLam, pw_wpLam, 1);
    double G33m = getIntpolG(G_vec, 1, 3, 3, R0, pw_wpLam, pw_wmLam, 1) - getIntpolG(G_vec, 1, 3, 3, R0, pw_wmLam, pw_wpLam, 1);

    // Complete the right-hand side of the flow equation.
    double result0 = 1 / (2 * pi)*(
                (G00m + G11m + G22m + G33m)*g0[i]
                + (-G10p - G01p + G23p - G32p)*gx[i]
                + (-G20p - G02p + G31p - G13p)*gy[i]
                + (-G30p - G03p + G12p - G21p)*gz[i]
                - 2 * (jsum00 - jsum0x - jsum0y - jsum0z));
    double resultz = 1 / (2 * pi)*(
                (G30m + G03m + G12m - G21m)*g0[i]
                + (G20p - G02p + G31p + G13p)*gx[i]
                + (G01p - G10p + G32p + G23p)*gy[i]
                + (G00p - G11p - G22p + G33p)*gz[i]
                - 2 * (+jsumz0 + jsumzx + jsumzy + jsumzz));

    double resultx = 1 / (2 * pi)*(
                (G10m + G01m + G23m - G32m)*g0[i]
                + (G00p + G11p - G22p - G33p)*gx[i]
                + (G30p - G03p + G12p + G21p)*gy[i]
                + (G02p - G20p + G13p + G31p)*gz[i]
                - 2 * (+jsumx0 + jsumxx + jsumxy + jsumxz));

    double resulty = 1 / (2 * pi)*(
                (G20m + G02m + G31m - G13m)*g0[i]
                + (G03p - G30p + G21p + G12p)*gx[i]
                + (G00p - G11p + G22p - G33p)*gy[i]
                + (G10p - G01p + G23p + G32p)*gz[i]
                - 2 * (+jsumy0 + jsumyx + jsumyy + jsumyz));

    setSE(result0, DG_vec, 0, n, i);
    setSE(resultx, DG_vec, 1, n, i);
    setSE(resulty, DG_vec, 2, n, i);
    setSE(resultz, DG_vec, 3, n, i);
}

//Compute the right-hand site of the self-energy flow equation for every symmetry-inequivalent self-energy argument (i.e., for positive frequency arguments).
void getDgamma(double DG_vec[], double Lam, const double G_vec[]) {
#pragma omp parallel for
    for (int n = 1; n <= Ng; ++n) {
        SEFlow(n, Lam, 0, G_vec, DG_vec);
        SEFlow(n, Lam, 1, G_vec, DG_vec);
        SEFlow(n, Lam, 2, G_vec, DG_vec);
    }
}


////// Two-particle vertex flow equation s, t, and u channels
//Compute s-channel terms for specified frequency and site arguments of the vertex function
void sChannel(double DG_vec[], int ns, int nt, int nu, double wpr, double Pt[], Rvec R, const double G_vec[]) {
    double s = wp_vec[ns], t = wp_vec[nt], u = dsign(nu)*wp_vec[abs(nu)];
    double w1p = 0.5*(s + t + u), w2p = 0.5*(s - t - u), w1 = 0.5*(s - t + u), w2 = 0.5*(s + t - u);
    pairWeight pw_1a = findPw(-w2p - wpr), pw_1b = findPw(w1p + wpr), pw_2a = findPw(+w2 + wpr), pw_2b = findPw(w1 + wpr);

    double Pt00 = Pt[0];
    double Pt01 = Pt[4 * 0 + 1];
    double Pt02 = Pt[4 * 0 + 2];
    double Pt03 = Pt[4 * 0 + 3];
    double Pt10 = Pt[4 * 1 + 0];
    double Pt11 = Pt[4 * 1 + 1];
    double Pt12 = Pt[4 * 1 + 2];
    double Pt13 = Pt[4 * 1 + 3];
    double Pt20 = Pt[4 * 2 + 0];
    double Pt21 = Pt[4 * 2 + 1];
    double Pt22 = Pt[4 * 2 + 2];
    double Pt23 = Pt[4 * 2 + 3];
    double Pt30 = Pt[4 * 3 + 0];
    double Pt31 = Pt[4 * 3 + 1];
    double Pt32 = Pt[4 * 3 + 2];
    double Pt33 = Pt[4 * 3 + 3];


    double Ch1A1_00 = getIntpolG(G_vec, 1, 0, 0, R, ns, pw_1a, pw_1b);
    double Ch1A1_01 = getIntpolG(G_vec, 1, 0, 1, R, ns, pw_1a, pw_1b);
    double Ch1A1_02 = getIntpolG(G_vec, 1, 0, 2, R, ns, pw_1a, pw_1b);
    double Ch1A1_03 = getIntpolG(G_vec, 1, 0, 3, R, ns, pw_1a, pw_1b);
    double Ch1A1_10 = getIntpolG(G_vec, 1, 1, 0, R, ns, pw_1a, pw_1b);
    double Ch1A1_11 = getIntpolG(G_vec, 1, 1, 1, R, ns, pw_1a, pw_1b);
    double Ch1A1_12 = getIntpolG(G_vec, 1, 1, 2, R, ns, pw_1a, pw_1b);
    double Ch1A1_13 = getIntpolG(G_vec, 1, 1, 3, R, ns, pw_1a, pw_1b);
    double Ch1A1_20 = getIntpolG(G_vec, 1, 2, 0, R, ns, pw_1a, pw_1b);
    double Ch1A1_21 = getIntpolG(G_vec, 1, 2, 1, R, ns, pw_1a, pw_1b);
    double Ch1A1_22 = getIntpolG(G_vec, 1, 2, 2, R, ns, pw_1a, pw_1b);
    double Ch1A1_23 = getIntpolG(G_vec, 1, 2, 3, R, ns, pw_1a, pw_1b);
    double Ch1A1_30 = getIntpolG(G_vec, 1, 3, 0, R, ns, pw_1a, pw_1b);
    double Ch1A1_31 = getIntpolG(G_vec, 1, 3, 1, R, ns, pw_1a, pw_1b);
    double Ch1A1_32 = getIntpolG(G_vec, 1, 3, 2, R, ns, pw_1a, pw_1b);
    double Ch1A1_33 = getIntpolG(G_vec, 1, 3, 3, R, ns, pw_1a, pw_1b);

    double Ch1A2_00 = getIntpolG(G_vec, 1, 0, 0, R, ns, pw_2a, pw_2b);
    double Ch1A2_01 = getIntpolG(G_vec, 1, 0, 1, R, ns, pw_2a, pw_2b);
    double Ch1A2_02 = getIntpolG(G_vec, 1, 0, 2, R, ns, pw_2a, pw_2b);
    double Ch1A2_03 = getIntpolG(G_vec, 1, 0, 3, R, ns, pw_2a, pw_2b);
    double Ch1A2_10 = getIntpolG(G_vec, 1, 1, 0, R, ns, pw_2a, pw_2b);
    double Ch1A2_11 = getIntpolG(G_vec, 1, 1, 1, R, ns, pw_2a, pw_2b);
    double Ch1A2_12 = getIntpolG(G_vec, 1, 1, 2, R, ns, pw_2a, pw_2b);
    double Ch1A2_13 = getIntpolG(G_vec, 1, 1, 3, R, ns, pw_2a, pw_2b);
    double Ch1A2_20 = getIntpolG(G_vec, 1, 2, 0, R, ns, pw_2a, pw_2b);
    double Ch1A2_21 = getIntpolG(G_vec, 1, 2, 1, R, ns, pw_2a, pw_2b);
    double Ch1A2_22 = getIntpolG(G_vec, 1, 2, 2, R, ns, pw_2a, pw_2b);
    double Ch1A2_23 = getIntpolG(G_vec, 1, 2, 3, R, ns, pw_2a, pw_2b);
    double Ch1A2_30 = getIntpolG(G_vec, 1, 3, 0, R, ns, pw_2a, pw_2b);
    double Ch1A2_31 = getIntpolG(G_vec, 1, 3, 1, R, ns, pw_2a, pw_2b);
    double Ch1A2_32 = getIntpolG(G_vec, 1, 3, 2, R, ns, pw_2a, pw_2b);
    double Ch1A2_33 = getIntpolG(G_vec, 1, 3, 3, R, ns, pw_2a, pw_2b);



    addG((+(-Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 - Ch1A1_11 * Ch1A2_11 - Ch1A1_12 * Ch1A2_12 - Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 - Ch1A1_21 * Ch1A2_21 - Ch1A1_22 * Ch1A2_22 - Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 - Ch1A1_31 * Ch1A2_31 - Ch1A1_32 * Ch1A2_32 - Ch1A1_33 * Ch1A2_33)*Pt00 + (+Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 + Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 + Ch1A1_10 * Ch1A2_11 + Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 + Ch1A1_13 * Ch1A2_12 + Ch1A1_20 * Ch1A2_21 + Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 + Ch1A1_23 * Ch1A2_22 + Ch1A1_30 * Ch1A2_31 + Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 + Ch1A1_33 * Ch1A2_32)*Pt01 + (+Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 + Ch1A1_03 * Ch1A2_01 + Ch1A1_10 * Ch1A2_12 + Ch1A1_11 * Ch1A2_13 + Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 + Ch1A1_20 * Ch1A2_22 + Ch1A1_21 * Ch1A2_23 + Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 + Ch1A1_30 * Ch1A2_32 + Ch1A1_31 * Ch1A2_33 + Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt02 + (+Ch1A1_00 * Ch1A2_03 + Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 + Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 + Ch1A1_12 * Ch1A2_11 + Ch1A1_13 * Ch1A2_10 + Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 + Ch1A1_22 * Ch1A2_21 + Ch1A1_23 * Ch1A2_20 + Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 + Ch1A1_32 * Ch1A2_31 + Ch1A1_33 * Ch1A2_30)*Pt03 + (+Ch1A1_00 * Ch1A2_10 + Ch1A1_01 * Ch1A2_11 + Ch1A1_02 * Ch1A2_12 + Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 + Ch1A1_11 * Ch1A2_01 + Ch1A1_12 * Ch1A2_02 + Ch1A1_13 * Ch1A2_03 + Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 + Ch1A1_31 * Ch1A2_21 + Ch1A1_32 * Ch1A2_22 + Ch1A1_33 * Ch1A2_23)*Pt10 + (+Ch1A1_00 * Ch1A2_11 - Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 - Ch1A1_03 * Ch1A2_12 - Ch1A1_10 * Ch1A2_01 + Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 - Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 - Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 - Ch1A1_30 * Ch1A2_21 - Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 - Ch1A1_33 * Ch1A2_22)*Pt11 + (+Ch1A1_00 * Ch1A2_12 - Ch1A1_01 * Ch1A2_13 - Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 - Ch1A1_10 * Ch1A2_02 - Ch1A1_11 * Ch1A2_03 + Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 - Ch1A1_23 * Ch1A2_31 - Ch1A1_30 * Ch1A2_22 - Ch1A1_31 * Ch1A2_23 - Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt12 + (+Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 - Ch1A1_02 * Ch1A2_11 - Ch1A1_03 * Ch1A2_10 - Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 - Ch1A1_12 * Ch1A2_01 + Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 - Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 - Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 - Ch1A1_32 * Ch1A2_21 - Ch1A1_33 * Ch1A2_20)*Pt13 + (+Ch1A1_00 * Ch1A2_20 + Ch1A1_01 * Ch1A2_21 + Ch1A1_02 * Ch1A2_22 + Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 + Ch1A1_11 * Ch1A2_31 + Ch1A1_12 * Ch1A2_32 + Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 + Ch1A1_21 * Ch1A2_01 + Ch1A1_22 * Ch1A2_02 + Ch1A1_23 * Ch1A2_03 + Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt20 + (+Ch1A1_00 * Ch1A2_21 - Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 - Ch1A1_03 * Ch1A2_22 - Ch1A1_10 * Ch1A2_31 - Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 - Ch1A1_13 * Ch1A2_32 - Ch1A1_20 * Ch1A2_01 + Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 - Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 - Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt21 + (+Ch1A1_00 * Ch1A2_22 - Ch1A1_01 * Ch1A2_23 - Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 - Ch1A1_10 * Ch1A2_32 - Ch1A1_11 * Ch1A2_33 - Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 - Ch1A1_20 * Ch1A2_02 - Ch1A1_21 * Ch1A2_03 + Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 - Ch1A1_33 * Ch1A2_11)*Pt22 + (+Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 - Ch1A1_02 * Ch1A2_21 - Ch1A1_03 * Ch1A2_20 - Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 - Ch1A1_12 * Ch1A2_31 - Ch1A1_13 * Ch1A2_30 - Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 - Ch1A1_22 * Ch1A2_01 + Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 - Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt23 + (+Ch1A1_00 * Ch1A2_30 + Ch1A1_01 * Ch1A2_31 + Ch1A1_02 * Ch1A2_32 + Ch1A1_03 * Ch1A2_33 + Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 + Ch1A1_21 * Ch1A2_11 + Ch1A1_22 * Ch1A2_12 + Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 + Ch1A1_31 * Ch1A2_01 + Ch1A1_32 * Ch1A2_02 + Ch1A1_33 * Ch1A2_03)*Pt30 + (+Ch1A1_00 * Ch1A2_31 - Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 - Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 - Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 - Ch1A1_20 * Ch1A2_11 - Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 - Ch1A1_23 * Ch1A2_12 - Ch1A1_30 * Ch1A2_01 + Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 - Ch1A1_33 * Ch1A2_02)*Pt31 + (+Ch1A1_00 * Ch1A2_32 - Ch1A1_01 * Ch1A2_33 - Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 - Ch1A1_13 * Ch1A2_21 - Ch1A1_20 * Ch1A2_12 - Ch1A1_21 * Ch1A2_13 - Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 - Ch1A1_30 * Ch1A2_02 - Ch1A1_31 * Ch1A2_03 + Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt32 + (+Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 - Ch1A1_02 * Ch1A2_31 - Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 - Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 - Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 - Ch1A1_22 * Ch1A2_11 - Ch1A1_23 * Ch1A2_10 - Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 - Ch1A1_32 * Ch1A2_01 + Ch1A1_33 * Ch1A2_00)*Pt33) / (2 * pi), DG_vec, 1, 0, 0, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_01 - Ch1A1_01 * Ch1A2_00 + Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 + Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 + Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 + Ch1A1_33 * Ch1A2_32)*Pt00 + (-Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 - Ch1A1_02 * Ch1A2_02 - Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 - Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 - Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 - Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt01 + (+Ch1A1_00 * Ch1A2_03 + Ch1A1_01 * Ch1A2_02 + Ch1A1_02 * Ch1A2_01 - Ch1A1_03 * Ch1A2_00 + Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 + Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 + Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt02 + (-Ch1A1_00 * Ch1A2_02 + Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 + Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 + Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 + Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 + Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt03 + (-Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 - Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 - Ch1A1_13 * Ch1A2_02 - Ch1A1_20 * Ch1A2_31 - Ch1A1_21 * Ch1A2_30 - Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 - Ch1A1_33 * Ch1A2_22)*Pt10 + (+Ch1A1_00 * Ch1A2_10 + Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 + Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 + Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 + Ch1A1_22 * Ch1A2_32 + Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 + Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt11 + (+Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 - Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 - Ch1A1_21 * Ch1A2_32 - Ch1A1_22 * Ch1A2_31 - Ch1A1_23 * Ch1A2_30 - Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt12 + (-Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 - Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 + Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 - Ch1A1_20 * Ch1A2_32 - Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 - Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 - Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt13 + (-Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 - Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 - Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 - Ch1A1_23 * Ch1A2_02 - Ch1A1_30 * Ch1A2_11 - Ch1A1_31 * Ch1A2_10 - Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt20 + (+Ch1A1_00 * Ch1A2_20 + Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 + Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 + Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 + Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 + Ch1A1_32 * Ch1A2_12 + Ch1A1_33 * Ch1A2_13)*Pt21 + (+Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 - Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 - Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 - Ch1A1_31 * Ch1A2_12 - Ch1A1_32 * Ch1A2_11 - Ch1A1_33 * Ch1A2_10)*Pt22 + (-Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 - Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 - Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 + Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 - Ch1A1_30 * Ch1A2_12 - Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 - Ch1A1_33 * Ch1A2_11)*Pt23 + (-Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 - Ch1A1_03 * Ch1A2_32 - Ch1A1_10 * Ch1A2_21 - Ch1A1_11 * Ch1A2_20 - Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 - Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 - Ch1A1_33 * Ch1A2_02)*Pt30 + (+Ch1A1_00 * Ch1A2_30 + Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 + Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 + Ch1A1_12 * Ch1A2_22 + Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 + Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 + Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt31 + (+Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 - Ch1A1_11 * Ch1A2_22 - Ch1A1_12 * Ch1A2_21 - Ch1A1_13 * Ch1A2_20 - Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 - Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt32 + (-Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 - Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 - Ch1A1_10 * Ch1A2_22 - Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 - Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 - Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 + Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt33) / (2 * pi), DG_vec, 1, 0, 1, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 - Ch1A1_02 * Ch1A2_00 + Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 + Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 + Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 + Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt00 + (-Ch1A1_00 * Ch1A2_03 + Ch1A1_01 * Ch1A2_02 + Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 + Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 + Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 + Ch1A1_33 * Ch1A2_30)*Pt01 + (-Ch1A1_00 * Ch1A2_00 - Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 - Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 - Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 - Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 - Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt02 + (+Ch1A1_00 * Ch1A2_01 - Ch1A1_01 * Ch1A2_00 + Ch1A1_02 * Ch1A2_03 + Ch1A1_03 * Ch1A2_02 + Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 + Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 + Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt03 + (-Ch1A1_00 * Ch1A2_12 - Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 - Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 - Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 - Ch1A1_22 * Ch1A2_30 - Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 - Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt10 + (-Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 - Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 + Ch1A1_13 * Ch1A2_00 - Ch1A1_20 * Ch1A2_33 - Ch1A1_21 * Ch1A2_32 - Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 - Ch1A1_33 * Ch1A2_20)*Pt11 + (+Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 + Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 + Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 + Ch1A1_20 * Ch1A2_30 + Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 + Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 + Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt12 + (+Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 - Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 - Ch1A1_21 * Ch1A2_30 - Ch1A1_22 * Ch1A2_33 - Ch1A1_23 * Ch1A2_32 - Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt13 + (-Ch1A1_00 * Ch1A2_22 - Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 - Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 - Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 - Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 - Ch1A1_32 * Ch1A2_10 - Ch1A1_33 * Ch1A2_11)*Pt20 + (-Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 - Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 - Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 + Ch1A1_23 * Ch1A2_00 - Ch1A1_30 * Ch1A2_13 - Ch1A1_31 * Ch1A2_12 - Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt21 + (+Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 + Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 + Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 + Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 + Ch1A1_30 * Ch1A2_10 + Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 + Ch1A1_33 * Ch1A2_13)*Pt22 + (+Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 - Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 - Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 - Ch1A1_31 * Ch1A2_10 - Ch1A1_32 * Ch1A2_13 - Ch1A1_33 * Ch1A2_12)*Pt23 + (-Ch1A1_00 * Ch1A2_32 - Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 - Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 - Ch1A1_12 * Ch1A2_20 - Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 - Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 - Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt30 + (-Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 - Ch1A1_03 * Ch1A2_30 - Ch1A1_10 * Ch1A2_23 - Ch1A1_11 * Ch1A2_22 - Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 - Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 + Ch1A1_33 * Ch1A2_00)*Pt31 + (+Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 + Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 + Ch1A1_10 * Ch1A2_20 + Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 + Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 + Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 + Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt32 + (+Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 - Ch1A1_11 * Ch1A2_20 - Ch1A1_12 * Ch1A2_23 - Ch1A1_13 * Ch1A2_22 - Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 - Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt33) / (2 * pi), DG_vec, 1, 0, 2, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_03 + Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 - Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 + Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 + Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 + Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt00 + (+Ch1A1_00 * Ch1A2_02 + Ch1A1_01 * Ch1A2_03 - Ch1A1_02 * Ch1A2_00 + Ch1A1_03 * Ch1A2_01 + Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 + Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 + Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt01 + (-Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 + Ch1A1_02 * Ch1A2_03 + Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 + Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 + Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 + Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt02 + (-Ch1A1_00 * Ch1A2_00 - Ch1A1_01 * Ch1A2_01 - Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 - Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 - Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 - Ch1A1_33 * Ch1A2_33)*Pt03 + (-Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 - Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 - Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 - Ch1A1_20 * Ch1A2_33 - Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 - Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 - Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt10 + (+Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 - Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 - Ch1A1_21 * Ch1A2_33 - Ch1A1_22 * Ch1A2_30 - Ch1A1_23 * Ch1A2_31 - Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt11 + (-Ch1A1_00 * Ch1A2_11 - Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 + Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 - Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 - Ch1A1_22 * Ch1A2_33 - Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 - Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt12 + (+Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 + Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 + Ch1A1_13 * Ch1A2_03 + Ch1A1_20 * Ch1A2_30 + Ch1A1_21 * Ch1A2_31 + Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 + Ch1A1_33 * Ch1A2_23)*Pt13 + (-Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 - Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 - Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 - Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 - Ch1A1_30 * Ch1A2_13 - Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 - Ch1A1_33 * Ch1A2_10)*Pt20 + (+Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 - Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 - Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 - Ch1A1_31 * Ch1A2_13 - Ch1A1_32 * Ch1A2_10 - Ch1A1_33 * Ch1A2_11)*Pt21 + (-Ch1A1_00 * Ch1A2_21 - Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 - Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 + Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 - Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 - Ch1A1_32 * Ch1A2_13 - Ch1A1_33 * Ch1A2_12)*Pt22 + (+Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 + Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 + Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 + Ch1A1_23 * Ch1A2_03 + Ch1A1_30 * Ch1A2_10 + Ch1A1_31 * Ch1A2_11 + Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt23 + (-Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 - Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 - Ch1A1_10 * Ch1A2_23 - Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 - Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 - Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 - Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt30 + (+Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 - Ch1A1_11 * Ch1A2_23 - Ch1A1_12 * Ch1A2_20 - Ch1A1_13 * Ch1A2_21 - Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 - Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt31 + (-Ch1A1_00 * Ch1A2_31 - Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 - Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 - Ch1A1_12 * Ch1A2_23 - Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 - Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 + Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt32 + (+Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 + Ch1A1_03 * Ch1A2_33 + Ch1A1_10 * Ch1A2_20 + Ch1A1_11 * Ch1A2_21 + Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 + Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 + Ch1A1_33 * Ch1A2_03)*Pt33) / (2 * pi), DG_vec, 1, 0, 3, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 - Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 + Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 + Ch1A1_31 * Ch1A2_21 + Ch1A1_32 * Ch1A2_22 + Ch1A1_33 * Ch1A2_23)*Pt00 + (-Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 - Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 - Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 - Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 - Ch1A1_30 * Ch1A2_21 - Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 - Ch1A1_33 * Ch1A2_22)*Pt01 + (-Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 - Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 - Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 - Ch1A1_23 * Ch1A2_31 - Ch1A1_30 * Ch1A2_22 - Ch1A1_31 * Ch1A2_23 - Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt02 + (-Ch1A1_00 * Ch1A2_13 - Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 - Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 - Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 - Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 - Ch1A1_32 * Ch1A2_21 - Ch1A1_33 * Ch1A2_20)*Pt03 + (-Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 - Ch1A1_11 * Ch1A2_11 - Ch1A1_12 * Ch1A2_12 - Ch1A1_13 * Ch1A2_13 - Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 - Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt10 + (+Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 + Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 + Ch1A1_10 * Ch1A2_11 + Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 + Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 + Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 + Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt11 + (+Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 + Ch1A1_03 * Ch1A2_01 + Ch1A1_10 * Ch1A2_12 + Ch1A1_11 * Ch1A2_13 + Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 + Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 + Ch1A1_33 * Ch1A2_31)*Pt12 + (+Ch1A1_00 * Ch1A2_03 + Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 + Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 + Ch1A1_12 * Ch1A2_11 + Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 + Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 + Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt13 + (+Ch1A1_00 * Ch1A2_30 + Ch1A1_01 * Ch1A2_31 + Ch1A1_02 * Ch1A2_32 + Ch1A1_03 * Ch1A2_33 + Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 + Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 - Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt20 + (+Ch1A1_00 * Ch1A2_31 - Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 - Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 - Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 - Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 - Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt21 + (+Ch1A1_00 * Ch1A2_32 - Ch1A1_01 * Ch1A2_33 - Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 - Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 - Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 - Ch1A1_33 * Ch1A2_01)*Pt22 + (+Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 - Ch1A1_02 * Ch1A2_31 - Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 - Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 - Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 - Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt23 + (-Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 + Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 + Ch1A1_21 * Ch1A2_01 + Ch1A1_22 * Ch1A2_02 + Ch1A1_23 * Ch1A2_03 + Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt30 + (-Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 - Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 - Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 - Ch1A1_20 * Ch1A2_01 + Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 - Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 - Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt31 + (-Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 - Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 - Ch1A1_13 * Ch1A2_31 - Ch1A1_20 * Ch1A2_02 - Ch1A1_21 * Ch1A2_03 + Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 - Ch1A1_33 * Ch1A2_11)*Pt32 + (-Ch1A1_00 * Ch1A2_23 - Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 - Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 - Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 - Ch1A1_22 * Ch1A2_01 + Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 - Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt33) / (2 * pi), DG_vec, 1, 1, 0, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 - Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 - Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 - Ch1A1_23 * Ch1A2_32 - Ch1A1_30 * Ch1A2_21 - Ch1A1_31 * Ch1A2_20 - Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt00 + (+Ch1A1_00 * Ch1A2_10 + Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 + Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 + Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 + Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 + Ch1A1_32 * Ch1A2_22 + Ch1A1_33 * Ch1A2_23)*Pt01 + (+Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 - Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 - Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 - Ch1A1_31 * Ch1A2_22 - Ch1A1_32 * Ch1A2_21 - Ch1A1_33 * Ch1A2_20)*Pt02 + (-Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 - Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 + Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 - Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 - Ch1A1_30 * Ch1A2_22 - Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 - Ch1A1_33 * Ch1A2_21)*Pt03 + (+Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 + Ch1A1_03 * Ch1A2_02 + Ch1A1_10 * Ch1A2_11 + Ch1A1_11 * Ch1A2_10 + Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 + Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 + Ch1A1_33 * Ch1A2_32)*Pt10 + (+Ch1A1_00 * Ch1A2_00 - Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 - Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 - Ch1A1_12 * Ch1A2_12 - Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 - Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 - Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt11 + (-Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 + Ch1A1_11 * Ch1A2_12 + Ch1A1_12 * Ch1A2_11 + Ch1A1_13 * Ch1A2_10 + Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 + Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt12 + (+Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 - Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 + Ch1A1_10 * Ch1A2_12 + Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 + Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 + Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 + Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt13 + (+Ch1A1_00 * Ch1A2_31 - Ch1A1_01 * Ch1A2_30 - Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 - Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 - Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 - Ch1A1_33 * Ch1A2_02)*Pt20 + (-Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 + Ch1A1_02 * Ch1A2_32 + Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 + Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 + Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 + Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt21 + (-Ch1A1_00 * Ch1A2_33 - Ch1A1_01 * Ch1A2_32 - Ch1A1_02 * Ch1A2_31 - Ch1A1_03 * Ch1A2_30 - Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 - Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 - Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt22 + (+Ch1A1_00 * Ch1A2_32 - Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 - Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 - Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 - Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 + Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt23 + (-Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 - Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 - Ch1A1_13 * Ch1A2_32 - Ch1A1_20 * Ch1A2_01 + Ch1A1_21 * Ch1A2_00 - Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 - Ch1A1_33 * Ch1A2_12)*Pt30 + (+Ch1A1_00 * Ch1A2_20 + Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 + Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 - Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 + Ch1A1_22 * Ch1A2_02 + Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 + Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt31 + (+Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 - Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 - Ch1A1_21 * Ch1A2_02 - Ch1A1_22 * Ch1A2_01 + Ch1A1_23 * Ch1A2_00 - Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt32 + (-Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 - Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 - Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 - Ch1A1_20 * Ch1A2_02 - Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 - Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 - Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt33) / (2 * pi), DG_vec, 1, 1, 1, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_12 - Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 - Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 - Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 - Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 - Ch1A1_32 * Ch1A2_20 - Ch1A1_33 * Ch1A2_21)*Pt00 + (-Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 - Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 + Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 - Ch1A1_23 * Ch1A2_30 - Ch1A1_30 * Ch1A2_23 - Ch1A1_31 * Ch1A2_22 - Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt01 + (+Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 + Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 + Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 + Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 + Ch1A1_30 * Ch1A2_20 + Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 + Ch1A1_33 * Ch1A2_23)*Pt02 + (+Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 - Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 - Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 - Ch1A1_31 * Ch1A2_20 - Ch1A1_32 * Ch1A2_23 - Ch1A1_33 * Ch1A2_22)*Pt03 + (+Ch1A1_00 * Ch1A2_02 + Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 + Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 + Ch1A1_12 * Ch1A2_10 + Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 + Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 + Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt10 + (+Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 - Ch1A1_03 * Ch1A2_00 + Ch1A1_10 * Ch1A2_13 + Ch1A1_11 * Ch1A2_12 + Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 + Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 + Ch1A1_33 * Ch1A2_30)*Pt11 + (+Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 - Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 - Ch1A1_10 * Ch1A2_10 - Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 - Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 - Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 - Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt12 + (-Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 + Ch1A1_11 * Ch1A2_10 + Ch1A1_12 * Ch1A2_13 + Ch1A1_13 * Ch1A2_12 + Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 + Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt13 + (+Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 - Ch1A1_02 * Ch1A2_30 - Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 - Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 - Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 - Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt20 + (+Ch1A1_00 * Ch1A2_33 - Ch1A1_01 * Ch1A2_32 - Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 - Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 - Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 + Ch1A1_33 * Ch1A2_00)*Pt21 + (-Ch1A1_00 * Ch1A2_30 + Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 + Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 + Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 + Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 + Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt22 + (-Ch1A1_00 * Ch1A2_31 - Ch1A1_01 * Ch1A2_30 - Ch1A1_02 * Ch1A2_33 - Ch1A1_03 * Ch1A2_32 - Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 - Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 - Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt23 + (-Ch1A1_00 * Ch1A2_22 - Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 - Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 - Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 + Ch1A1_22 * Ch1A2_00 - Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 - Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt30 + (-Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 - Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 - Ch1A1_13 * Ch1A2_30 - Ch1A1_20 * Ch1A2_03 - Ch1A1_21 * Ch1A2_02 - Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 - Ch1A1_33 * Ch1A2_10)*Pt31 + (+Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 + Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 + Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 - Ch1A1_20 * Ch1A2_00 + Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 + Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 + Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt32 + (+Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 - Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 + Ch1A1_21 * Ch1A2_00 - Ch1A1_22 * Ch1A2_03 - Ch1A1_23 * Ch1A2_02 - Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt33) / (2 * pi), DG_vec, 1, 1, 2, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 - Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 - Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 - Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 - Ch1A1_30 * Ch1A2_23 - Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 - Ch1A1_33 * Ch1A2_20)*Pt00 + (+Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 - Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 - Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 - Ch1A1_31 * Ch1A2_23 - Ch1A1_32 * Ch1A2_20 - Ch1A1_33 * Ch1A2_21)*Pt01 + (-Ch1A1_00 * Ch1A2_11 - Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 + Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 - Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 - Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 - Ch1A1_32 * Ch1A2_23 - Ch1A1_33 * Ch1A2_22)*Pt02 + (+Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 + Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 + Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 + Ch1A1_23 * Ch1A2_33 + Ch1A1_30 * Ch1A2_20 + Ch1A1_31 * Ch1A2_21 + Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt03 + (+Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 + Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 + Ch1A1_10 * Ch1A2_13 + Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 + Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 + Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 + Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt10 + (-Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 + Ch1A1_11 * Ch1A2_13 + Ch1A1_12 * Ch1A2_10 + Ch1A1_13 * Ch1A2_11 + Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 + Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt11 + (+Ch1A1_00 * Ch1A2_01 - Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 + Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 + Ch1A1_12 * Ch1A2_13 + Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 + Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 + Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt12 + (+Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 - Ch1A1_03 * Ch1A2_03 - Ch1A1_10 * Ch1A2_10 - Ch1A1_11 * Ch1A2_11 - Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 - Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 - Ch1A1_33 * Ch1A2_33)*Pt13 + (+Ch1A1_00 * Ch1A2_33 - Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 - Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 - Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 - Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 - Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt20 + (-Ch1A1_00 * Ch1A2_32 - Ch1A1_01 * Ch1A2_33 - Ch1A1_02 * Ch1A2_30 - Ch1A1_03 * Ch1A2_31 - Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 - Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 - Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt21 + (+Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 - Ch1A1_02 * Ch1A2_33 - Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 - Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 - Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 + Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt22 + (-Ch1A1_00 * Ch1A2_30 + Ch1A1_01 * Ch1A2_31 + Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 + Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 + Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 + Ch1A1_33 * Ch1A2_03)*Pt23 + (-Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 - Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 - Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 - Ch1A1_20 * Ch1A2_03 - Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 + Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 - Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt30 + (+Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 - Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 - Ch1A1_21 * Ch1A2_03 + Ch1A1_22 * Ch1A2_00 - Ch1A1_23 * Ch1A2_01 - Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt31 + (-Ch1A1_00 * Ch1A2_21 - Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 - Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 - Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 - Ch1A1_22 * Ch1A2_03 - Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 - Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt32 + (+Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 + Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 + Ch1A1_13 * Ch1A2_33 - Ch1A1_20 * Ch1A2_00 + Ch1A1_21 * Ch1A2_01 + Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 + Ch1A1_33 * Ch1A2_13)*Pt33) / (2 * pi), DG_vec, 1, 1, 3, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 + Ch1A1_11 * Ch1A2_31 + Ch1A1_12 * Ch1A2_32 + Ch1A1_13 * Ch1A2_33 - Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 + Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt00 + (-Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 - Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 - Ch1A1_10 * Ch1A2_31 - Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 - Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 - Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 - Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt01 + (-Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 - Ch1A1_03 * Ch1A2_21 - Ch1A1_10 * Ch1A2_32 - Ch1A1_11 * Ch1A2_33 - Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 - Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 - Ch1A1_33 * Ch1A2_11)*Pt02 + (-Ch1A1_00 * Ch1A2_23 - Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 - Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 - Ch1A1_12 * Ch1A2_31 - Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 - Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 - Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt03 + (-Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 + Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 + Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 + Ch1A1_31 * Ch1A2_01 + Ch1A1_32 * Ch1A2_02 + Ch1A1_33 * Ch1A2_03)*Pt10 + (-Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 - Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 - Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 - Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 - Ch1A1_30 * Ch1A2_01 + Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 - Ch1A1_33 * Ch1A2_02)*Pt11 + (-Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 - Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 - Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 - Ch1A1_23 * Ch1A2_11 - Ch1A1_30 * Ch1A2_02 - Ch1A1_31 * Ch1A2_03 + Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt12 + (-Ch1A1_00 * Ch1A2_33 - Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 - Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 - Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 - Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 - Ch1A1_32 * Ch1A2_01 + Ch1A1_33 * Ch1A2_00)*Pt13 + (-Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 - Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 - Ch1A1_21 * Ch1A2_21 - Ch1A1_22 * Ch1A2_22 - Ch1A1_23 * Ch1A2_23 - Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt20 + (+Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 + Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 + Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 + Ch1A1_20 * Ch1A2_21 + Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 + Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 + Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt21 + (+Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 + Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 + Ch1A1_13 * Ch1A2_11 + Ch1A1_20 * Ch1A2_22 + Ch1A1_21 * Ch1A2_23 + Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 + Ch1A1_33 * Ch1A2_31)*Pt22 + (+Ch1A1_00 * Ch1A2_03 + Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 + Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 + Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 + Ch1A1_22 * Ch1A2_21 + Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 + Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt23 + (+Ch1A1_00 * Ch1A2_10 + Ch1A1_01 * Ch1A2_11 + Ch1A1_02 * Ch1A2_12 + Ch1A1_03 * Ch1A2_13 - Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 + Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 + Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt30 + (+Ch1A1_00 * Ch1A2_11 - Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 - Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 - Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 - Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 - Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt31 + (+Ch1A1_00 * Ch1A2_12 - Ch1A1_01 * Ch1A2_13 - Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 - Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 - Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 - Ch1A1_33 * Ch1A2_21)*Pt32 + (+Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 - Ch1A1_02 * Ch1A2_11 - Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 - Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 - Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 - Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt33) / (2 * pi), DG_vec, 1, 2, 0, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 - Ch1A1_03 * Ch1A2_22 - Ch1A1_10 * Ch1A2_31 - Ch1A1_11 * Ch1A2_30 - Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 - Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 - Ch1A1_33 * Ch1A2_12)*Pt00 + (+Ch1A1_00 * Ch1A2_20 + Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 + Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 + Ch1A1_12 * Ch1A2_32 + Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 + Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 + Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt01 + (+Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 - Ch1A1_11 * Ch1A2_32 - Ch1A1_12 * Ch1A2_31 - Ch1A1_13 * Ch1A2_30 - Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 - Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt02 + (-Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 - Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 - Ch1A1_10 * Ch1A2_32 - Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 - Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 + Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 - Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt03 + (-Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 - Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 - Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 - Ch1A1_23 * Ch1A2_12 - Ch1A1_30 * Ch1A2_01 + Ch1A1_31 * Ch1A2_00 - Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt10 + (+Ch1A1_00 * Ch1A2_30 + Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 + Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 + Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 - Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 + Ch1A1_32 * Ch1A2_02 + Ch1A1_33 * Ch1A2_03)*Pt11 + (+Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 - Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 - Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 - Ch1A1_31 * Ch1A2_02 - Ch1A1_32 * Ch1A2_01 + Ch1A1_33 * Ch1A2_00)*Pt12 + (-Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 - Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 - Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 - Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 - Ch1A1_30 * Ch1A2_02 - Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 - Ch1A1_33 * Ch1A2_01)*Pt13 + (+Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 + Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 + Ch1A1_13 * Ch1A2_12 + Ch1A1_20 * Ch1A2_21 + Ch1A1_21 * Ch1A2_20 + Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 + Ch1A1_33 * Ch1A2_32)*Pt20 + (+Ch1A1_00 * Ch1A2_00 - Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 - Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 - Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 - Ch1A1_22 * Ch1A2_22 - Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 - Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt21 + (-Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 + Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 + Ch1A1_21 * Ch1A2_22 + Ch1A1_22 * Ch1A2_21 + Ch1A1_23 * Ch1A2_20 + Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt22 + (+Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 - Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 + Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 + Ch1A1_20 * Ch1A2_22 + Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 + Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 + Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt23 + (+Ch1A1_00 * Ch1A2_11 - Ch1A1_01 * Ch1A2_10 - Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 - Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 - Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 - Ch1A1_33 * Ch1A2_22)*Pt30 + (-Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 + Ch1A1_02 * Ch1A2_12 + Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 + Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 + Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 + Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt31 + (-Ch1A1_00 * Ch1A2_13 - Ch1A1_01 * Ch1A2_12 - Ch1A1_02 * Ch1A2_11 - Ch1A1_03 * Ch1A2_10 - Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 - Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 - Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt32 + (+Ch1A1_00 * Ch1A2_12 - Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 - Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 + Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 - Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 - Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt33) / (2 * pi), DG_vec, 1, 2, 1, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_22 - Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 - Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 - Ch1A1_12 * Ch1A2_30 - Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 - Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 - Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt00 + (-Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 - Ch1A1_03 * Ch1A2_20 - Ch1A1_10 * Ch1A2_33 - Ch1A1_11 * Ch1A2_32 - Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 + Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 - Ch1A1_33 * Ch1A2_10)*Pt01 + (+Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 + Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 + Ch1A1_10 * Ch1A2_30 + Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 + Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 + Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 + Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt02 + (+Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 - Ch1A1_11 * Ch1A2_30 - Ch1A1_12 * Ch1A2_33 - Ch1A1_13 * Ch1A2_32 - Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 - Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt03 + (-Ch1A1_00 * Ch1A2_32 - Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 - Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 - Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 - Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 + Ch1A1_32 * Ch1A2_00 - Ch1A1_33 * Ch1A2_01)*Pt10 + (-Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 - Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 - Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 - Ch1A1_23 * Ch1A2_10 - Ch1A1_30 * Ch1A2_03 - Ch1A1_31 * Ch1A2_02 - Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt11 + (+Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 + Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 + Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 + Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 - Ch1A1_30 * Ch1A2_00 + Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 + Ch1A1_33 * Ch1A2_03)*Pt12 + (+Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 - Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 - Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 + Ch1A1_31 * Ch1A2_00 - Ch1A1_32 * Ch1A2_03 - Ch1A1_33 * Ch1A2_02)*Pt13 + (+Ch1A1_00 * Ch1A2_02 + Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 + Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 + Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 + Ch1A1_22 * Ch1A2_20 + Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 + Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt20 + (+Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 - Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 + Ch1A1_13 * Ch1A2_10 + Ch1A1_20 * Ch1A2_23 + Ch1A1_21 * Ch1A2_22 + Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 + Ch1A1_33 * Ch1A2_30)*Pt21 + (+Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 - Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 - Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 - Ch1A1_20 * Ch1A2_20 - Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 - Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 - Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt22 + (-Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 + Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 + Ch1A1_21 * Ch1A2_20 + Ch1A1_22 * Ch1A2_23 + Ch1A1_23 * Ch1A2_22 + Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt23 + (+Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 - Ch1A1_02 * Ch1A2_10 - Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 - Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 - Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 - Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt30 + (+Ch1A1_00 * Ch1A2_13 - Ch1A1_01 * Ch1A2_12 - Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 + Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 - Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 - Ch1A1_33 * Ch1A2_20)*Pt31 + (-Ch1A1_00 * Ch1A2_10 + Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 + Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 + Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 + Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 + Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt32 + (-Ch1A1_00 * Ch1A2_11 - Ch1A1_01 * Ch1A2_10 - Ch1A1_02 * Ch1A2_13 - Ch1A1_03 * Ch1A2_12 - Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 - Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 - Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt33) / (2 * pi), DG_vec, 1, 2, 2, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 - Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 - Ch1A1_10 * Ch1A2_33 - Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 - Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 - Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 - Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt00 + (+Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 - Ch1A1_11 * Ch1A2_33 - Ch1A1_12 * Ch1A2_30 - Ch1A1_13 * Ch1A2_31 - Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 - Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt01 + (-Ch1A1_00 * Ch1A2_21 - Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 - Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 - Ch1A1_12 * Ch1A2_33 - Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 + Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 - Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt02 + (+Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 + Ch1A1_03 * Ch1A2_23 + Ch1A1_10 * Ch1A2_30 + Ch1A1_11 * Ch1A2_31 + Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 + Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 + Ch1A1_33 * Ch1A2_13)*Pt03 + (-Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 - Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 - Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 - Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 - Ch1A1_30 * Ch1A2_03 - Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 + Ch1A1_33 * Ch1A2_00)*Pt10 + (+Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 - Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 - Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 - Ch1A1_31 * Ch1A2_03 + Ch1A1_32 * Ch1A2_00 - Ch1A1_33 * Ch1A2_01)*Pt11 + (-Ch1A1_00 * Ch1A2_31 - Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 - Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 - Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 - Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 - Ch1A1_32 * Ch1A2_03 - Ch1A1_33 * Ch1A2_02)*Pt12 + (+Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 + Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 + Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 + Ch1A1_23 * Ch1A2_13 - Ch1A1_30 * Ch1A2_00 + Ch1A1_31 * Ch1A2_01 + Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt13 + (+Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 + Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 + Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 + Ch1A1_20 * Ch1A2_23 + Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 + Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 + Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt20 + (-Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 + Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 + Ch1A1_21 * Ch1A2_23 + Ch1A1_22 * Ch1A2_20 + Ch1A1_23 * Ch1A2_21 + Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt21 + (+Ch1A1_00 * Ch1A2_01 - Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 + Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 + Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 + Ch1A1_22 * Ch1A2_23 + Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 + Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt22 + (+Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 - Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 - Ch1A1_13 * Ch1A2_13 - Ch1A1_20 * Ch1A2_20 - Ch1A1_21 * Ch1A2_21 - Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 - Ch1A1_33 * Ch1A2_33)*Pt23 + (+Ch1A1_00 * Ch1A2_13 - Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 - Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 - Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 - Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 - Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt30 + (-Ch1A1_00 * Ch1A2_12 - Ch1A1_01 * Ch1A2_13 - Ch1A1_02 * Ch1A2_10 - Ch1A1_03 * Ch1A2_11 - Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 - Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 - Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt31 + (+Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 - Ch1A1_02 * Ch1A2_13 - Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 + Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 - Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 - Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt32 + (-Ch1A1_00 * Ch1A2_10 + Ch1A1_01 * Ch1A2_11 + Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 + Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 + Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 + Ch1A1_33 * Ch1A2_23)*Pt33) / (2 * pi), DG_vec, 1, 2, 3, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 + Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 - Ch1A1_20 * Ch1A2_10 + Ch1A1_21 * Ch1A2_11 + Ch1A1_22 * Ch1A2_12 + Ch1A1_23 * Ch1A2_13 - Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt00 + (-Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 - Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 - Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 - Ch1A1_20 * Ch1A2_11 - Ch1A1_21 * Ch1A2_10 + Ch1A1_22 * Ch1A2_13 - Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 - Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt01 + (-Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 - Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 - Ch1A1_13 * Ch1A2_21 - Ch1A1_20 * Ch1A2_12 - Ch1A1_21 * Ch1A2_13 - Ch1A1_22 * Ch1A2_10 + Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 - Ch1A1_33 * Ch1A2_01)*Pt02 + (-Ch1A1_00 * Ch1A2_33 - Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 - Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 - Ch1A1_20 * Ch1A2_13 + Ch1A1_21 * Ch1A2_12 - Ch1A1_22 * Ch1A2_11 - Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 - Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt03 + (+Ch1A1_00 * Ch1A2_20 + Ch1A1_01 * Ch1A2_21 + Ch1A1_02 * Ch1A2_22 + Ch1A1_03 * Ch1A2_23 + Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 - Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 + Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt10 + (+Ch1A1_00 * Ch1A2_21 - Ch1A1_01 * Ch1A2_20 + Ch1A1_02 * Ch1A2_23 - Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 - Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 - Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 - Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt11 + (+Ch1A1_00 * Ch1A2_22 - Ch1A1_01 * Ch1A2_23 - Ch1A1_02 * Ch1A2_20 + Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 - Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 - Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 - Ch1A1_33 * Ch1A2_11)*Pt12 + (+Ch1A1_00 * Ch1A2_23 + Ch1A1_01 * Ch1A2_22 - Ch1A1_02 * Ch1A2_21 - Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 - Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 - Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 - Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt13 + (-Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 + Ch1A1_10 * Ch1A2_00 + Ch1A1_11 * Ch1A2_01 + Ch1A1_12 * Ch1A2_02 + Ch1A1_13 * Ch1A2_03 + Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 + Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt20 + (-Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 - Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 - Ch1A1_10 * Ch1A2_01 + Ch1A1_11 * Ch1A2_00 + Ch1A1_12 * Ch1A2_03 - Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 - Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 - Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt21 + (-Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 - Ch1A1_03 * Ch1A2_11 - Ch1A1_10 * Ch1A2_02 - Ch1A1_11 * Ch1A2_03 + Ch1A1_12 * Ch1A2_00 + Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 - Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 - Ch1A1_33 * Ch1A2_21)*Pt22 + (-Ch1A1_00 * Ch1A2_13 - Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 - Ch1A1_10 * Ch1A2_03 + Ch1A1_11 * Ch1A2_02 - Ch1A1_12 * Ch1A2_01 + Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 - Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 - Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt23 + (-Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 - Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 - Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 + Ch1A1_30 * Ch1A2_30 - Ch1A1_31 * Ch1A2_31 - Ch1A1_32 * Ch1A2_32 - Ch1A1_33 * Ch1A2_33)*Pt30 + (+Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 + Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 + Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 + Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 + Ch1A1_30 * Ch1A2_31 + Ch1A1_31 * Ch1A2_30 - Ch1A1_32 * Ch1A2_33 + Ch1A1_33 * Ch1A2_32)*Pt31 + (+Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 + Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 + Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 + Ch1A1_23 * Ch1A2_21 + Ch1A1_30 * Ch1A2_32 + Ch1A1_31 * Ch1A2_33 + Ch1A1_32 * Ch1A2_30 - Ch1A1_33 * Ch1A2_31)*Pt32 + (+Ch1A1_00 * Ch1A2_03 + Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 + Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 + Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 + Ch1A1_30 * Ch1A2_33 - Ch1A1_31 * Ch1A2_32 + Ch1A1_32 * Ch1A2_31 + Ch1A1_33 * Ch1A2_30)*Pt33) / (2 * pi), DG_vec, 1, 3, 0, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 - Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 - Ch1A1_13 * Ch1A2_22 - Ch1A1_20 * Ch1A2_11 - Ch1A1_21 * Ch1A2_10 - Ch1A1_22 * Ch1A2_13 + Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 - Ch1A1_33 * Ch1A2_02)*Pt00 + (+Ch1A1_00 * Ch1A2_30 + Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 + Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 + Ch1A1_20 * Ch1A2_10 - Ch1A1_21 * Ch1A2_11 + Ch1A1_22 * Ch1A2_12 + Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 + Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt01 + (+Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 - Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 + Ch1A1_20 * Ch1A2_13 - Ch1A1_21 * Ch1A2_12 - Ch1A1_22 * Ch1A2_11 - Ch1A1_23 * Ch1A2_10 - Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt02 + (-Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 - Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 - Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 - Ch1A1_20 * Ch1A2_12 - Ch1A1_21 * Ch1A2_13 + Ch1A1_22 * Ch1A2_10 - Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 + Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt03 + (+Ch1A1_00 * Ch1A2_21 - Ch1A1_01 * Ch1A2_20 - Ch1A1_02 * Ch1A2_23 + Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 - Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 - Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 - Ch1A1_33 * Ch1A2_12)*Pt10 + (-Ch1A1_00 * Ch1A2_20 - Ch1A1_01 * Ch1A2_21 + Ch1A1_02 * Ch1A2_22 + Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 + Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 + Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 + Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt11 + (-Ch1A1_00 * Ch1A2_23 - Ch1A1_01 * Ch1A2_22 - Ch1A1_02 * Ch1A2_21 - Ch1A1_03 * Ch1A2_20 - Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 - Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 - Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt12 + (+Ch1A1_00 * Ch1A2_22 - Ch1A1_01 * Ch1A2_23 + Ch1A1_02 * Ch1A2_20 - Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 - Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 + Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 - Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt13 + (-Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 - Ch1A1_03 * Ch1A2_12 - Ch1A1_10 * Ch1A2_01 + Ch1A1_11 * Ch1A2_00 - Ch1A1_12 * Ch1A2_03 + Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 - Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 - Ch1A1_33 * Ch1A2_22)*Pt20 + (+Ch1A1_00 * Ch1A2_10 + Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 - Ch1A1_10 * Ch1A2_00 - Ch1A1_11 * Ch1A2_01 + Ch1A1_12 * Ch1A2_02 + Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 + Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 + Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt21 + (+Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 + Ch1A1_10 * Ch1A2_03 - Ch1A1_11 * Ch1A2_02 - Ch1A1_12 * Ch1A2_01 + Ch1A1_13 * Ch1A2_00 - Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 - Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt22 + (-Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 - Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 - Ch1A1_10 * Ch1A2_02 - Ch1A1_11 * Ch1A2_03 - Ch1A1_12 * Ch1A2_00 - Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 - Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 - Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt23 + (+Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 + Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 + Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 + Ch1A1_23 * Ch1A2_22 + Ch1A1_30 * Ch1A2_31 + Ch1A1_31 * Ch1A2_30 + Ch1A1_32 * Ch1A2_33 - Ch1A1_33 * Ch1A2_32)*Pt30 + (+Ch1A1_00 * Ch1A2_00 - Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 - Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 - Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 - Ch1A1_30 * Ch1A2_30 + Ch1A1_31 * Ch1A2_31 - Ch1A1_32 * Ch1A2_32 - Ch1A1_33 * Ch1A2_33)*Pt31 + (-Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 + Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 + Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 - Ch1A1_30 * Ch1A2_33 + Ch1A1_31 * Ch1A2_32 + Ch1A1_32 * Ch1A2_31 + Ch1A1_33 * Ch1A2_30)*Pt32 + (+Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 - Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 + Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 + Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 + Ch1A1_30 * Ch1A2_32 + Ch1A1_31 * Ch1A2_33 - Ch1A1_32 * Ch1A2_30 + Ch1A1_33 * Ch1A2_31)*Pt33) / (2 * pi), DG_vec, 1, 3, 1, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_32 - Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 + Ch1A1_10 * Ch1A2_22 - Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 - Ch1A1_20 * Ch1A2_12 + Ch1A1_21 * Ch1A2_13 - Ch1A1_22 * Ch1A2_10 - Ch1A1_23 * Ch1A2_11 + Ch1A1_30 * Ch1A2_02 - Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt00 + (-Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 + Ch1A1_02 * Ch1A2_31 - Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 + Ch1A1_12 * Ch1A2_21 - Ch1A1_13 * Ch1A2_20 - Ch1A1_20 * Ch1A2_13 - Ch1A1_21 * Ch1A2_12 - Ch1A1_22 * Ch1A2_11 + Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 + Ch1A1_32 * Ch1A2_01 + Ch1A1_33 * Ch1A2_00)*Pt01 + (+Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 + Ch1A1_02 * Ch1A2_32 - Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 + Ch1A1_12 * Ch1A2_22 - Ch1A1_13 * Ch1A2_23 + Ch1A1_20 * Ch1A2_10 + Ch1A1_21 * Ch1A2_11 - Ch1A1_22 * Ch1A2_12 + Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 + Ch1A1_32 * Ch1A2_02 - Ch1A1_33 * Ch1A2_03)*Pt02 + (+Ch1A1_00 * Ch1A2_31 + Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 - Ch1A1_10 * Ch1A2_21 + Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 + Ch1A1_20 * Ch1A2_11 - Ch1A1_21 * Ch1A2_10 - Ch1A1_22 * Ch1A2_13 - Ch1A1_23 * Ch1A2_12 - Ch1A1_30 * Ch1A2_01 - Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt03 + (+Ch1A1_00 * Ch1A2_22 + Ch1A1_01 * Ch1A2_23 - Ch1A1_02 * Ch1A2_20 - Ch1A1_03 * Ch1A2_21 + Ch1A1_10 * Ch1A2_32 - Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 + Ch1A1_20 * Ch1A2_02 - Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 + Ch1A1_30 * Ch1A2_12 - Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt10 + (+Ch1A1_00 * Ch1A2_23 - Ch1A1_01 * Ch1A2_22 - Ch1A1_02 * Ch1A2_21 + Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 + Ch1A1_12 * Ch1A2_31 - Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 + Ch1A1_22 * Ch1A2_01 + Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 + Ch1A1_32 * Ch1A2_11 - Ch1A1_33 * Ch1A2_10)*Pt11 + (-Ch1A1_00 * Ch1A2_20 + Ch1A1_01 * Ch1A2_21 - Ch1A1_02 * Ch1A2_22 + Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 + Ch1A1_12 * Ch1A2_32 - Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 + Ch1A1_22 * Ch1A2_02 - Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 + Ch1A1_32 * Ch1A2_12 - Ch1A1_33 * Ch1A2_13)*Pt12 + (-Ch1A1_00 * Ch1A2_21 - Ch1A1_01 * Ch1A2_20 - Ch1A1_02 * Ch1A2_23 - Ch1A1_03 * Ch1A2_22 - Ch1A1_10 * Ch1A2_31 + Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 - Ch1A1_20 * Ch1A2_01 - Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 - Ch1A1_30 * Ch1A2_11 + Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt13 + (-Ch1A1_00 * Ch1A2_12 - Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 - Ch1A1_10 * Ch1A2_02 + Ch1A1_11 * Ch1A2_03 + Ch1A1_12 * Ch1A2_00 - Ch1A1_13 * Ch1A2_01 + Ch1A1_20 * Ch1A2_32 - Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 + Ch1A1_30 * Ch1A2_22 - Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt20 + (-Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 + Ch1A1_02 * Ch1A2_11 - Ch1A1_03 * Ch1A2_10 - Ch1A1_10 * Ch1A2_03 - Ch1A1_11 * Ch1A2_02 - Ch1A1_12 * Ch1A2_01 - Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 + Ch1A1_22 * Ch1A2_31 - Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 + Ch1A1_32 * Ch1A2_21 - Ch1A1_33 * Ch1A2_20)*Pt21 + (+Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 + Ch1A1_02 * Ch1A2_12 - Ch1A1_03 * Ch1A2_13 - Ch1A1_10 * Ch1A2_00 + Ch1A1_11 * Ch1A2_01 - Ch1A1_12 * Ch1A2_02 + Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 + Ch1A1_22 * Ch1A2_32 - Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 + Ch1A1_32 * Ch1A2_22 - Ch1A1_33 * Ch1A2_23)*Pt22 + (+Ch1A1_00 * Ch1A2_11 + Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 + Ch1A1_10 * Ch1A2_01 + Ch1A1_11 * Ch1A2_00 - Ch1A1_12 * Ch1A2_03 - Ch1A1_13 * Ch1A2_02 - Ch1A1_20 * Ch1A2_31 + Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 - Ch1A1_30 * Ch1A2_21 + Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt23 + (+Ch1A1_00 * Ch1A2_02 + Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 - Ch1A1_10 * Ch1A2_12 + Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 - Ch1A1_20 * Ch1A2_22 + Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 + Ch1A1_30 * Ch1A2_32 - Ch1A1_31 * Ch1A2_33 + Ch1A1_32 * Ch1A2_30 + Ch1A1_33 * Ch1A2_31)*Pt30 + (+Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 - Ch1A1_02 * Ch1A2_01 - Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 - Ch1A1_12 * Ch1A2_11 + Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 - Ch1A1_22 * Ch1A2_21 + Ch1A1_23 * Ch1A2_20 + Ch1A1_30 * Ch1A2_33 + Ch1A1_31 * Ch1A2_32 + Ch1A1_32 * Ch1A2_31 - Ch1A1_33 * Ch1A2_30)*Pt31 + (+Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 - Ch1A1_02 * Ch1A2_02 + Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 - Ch1A1_12 * Ch1A2_12 + Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 - Ch1A1_22 * Ch1A2_22 + Ch1A1_23 * Ch1A2_23 - Ch1A1_30 * Ch1A2_30 - Ch1A1_31 * Ch1A2_31 + Ch1A1_32 * Ch1A2_32 - Ch1A1_33 * Ch1A2_33)*Pt32 + (-Ch1A1_00 * Ch1A2_01 + Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 + Ch1A1_10 * Ch1A2_11 - Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 + Ch1A1_20 * Ch1A2_21 - Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 - Ch1A1_30 * Ch1A2_31 + Ch1A1_31 * Ch1A2_30 + Ch1A1_32 * Ch1A2_33 + Ch1A1_33 * Ch1A2_32)*Pt33) / (2 * pi), DG_vec, 1, 3, 2, R, ns, nt, nu);
    addG((+(-Ch1A1_00 * Ch1A2_33 + Ch1A1_01 * Ch1A2_32 - Ch1A1_02 * Ch1A2_31 + Ch1A1_03 * Ch1A2_30 + Ch1A1_10 * Ch1A2_23 + Ch1A1_11 * Ch1A2_22 - Ch1A1_12 * Ch1A2_21 + Ch1A1_13 * Ch1A2_20 - Ch1A1_20 * Ch1A2_13 - Ch1A1_21 * Ch1A2_12 + Ch1A1_22 * Ch1A2_11 - Ch1A1_23 * Ch1A2_10 + Ch1A1_30 * Ch1A2_03 + Ch1A1_31 * Ch1A2_02 - Ch1A1_32 * Ch1A2_01 - Ch1A1_33 * Ch1A2_00)*Pt00 + (+Ch1A1_00 * Ch1A2_32 + Ch1A1_01 * Ch1A2_33 + Ch1A1_02 * Ch1A2_30 + Ch1A1_03 * Ch1A2_31 - Ch1A1_10 * Ch1A2_22 + Ch1A1_11 * Ch1A2_23 + Ch1A1_12 * Ch1A2_20 + Ch1A1_13 * Ch1A2_21 + Ch1A1_20 * Ch1A2_12 - Ch1A1_21 * Ch1A2_13 - Ch1A1_22 * Ch1A2_10 - Ch1A1_23 * Ch1A2_11 - Ch1A1_30 * Ch1A2_02 + Ch1A1_31 * Ch1A2_03 - Ch1A1_32 * Ch1A2_00 + Ch1A1_33 * Ch1A2_01)*Pt01 + (-Ch1A1_00 * Ch1A2_31 - Ch1A1_01 * Ch1A2_30 + Ch1A1_02 * Ch1A2_33 + Ch1A1_03 * Ch1A2_32 + Ch1A1_10 * Ch1A2_21 - Ch1A1_11 * Ch1A2_20 + Ch1A1_12 * Ch1A2_23 + Ch1A1_13 * Ch1A2_22 - Ch1A1_20 * Ch1A2_11 + Ch1A1_21 * Ch1A2_10 - Ch1A1_22 * Ch1A2_13 - Ch1A1_23 * Ch1A2_12 + Ch1A1_30 * Ch1A2_01 + Ch1A1_31 * Ch1A2_00 + Ch1A1_32 * Ch1A2_03 + Ch1A1_33 * Ch1A2_02)*Pt02 + (+Ch1A1_00 * Ch1A2_30 - Ch1A1_01 * Ch1A2_31 - Ch1A1_02 * Ch1A2_32 + Ch1A1_03 * Ch1A2_33 - Ch1A1_10 * Ch1A2_20 - Ch1A1_11 * Ch1A2_21 - Ch1A1_12 * Ch1A2_22 + Ch1A1_13 * Ch1A2_23 + Ch1A1_20 * Ch1A2_10 + Ch1A1_21 * Ch1A2_11 + Ch1A1_22 * Ch1A2_12 - Ch1A1_23 * Ch1A2_13 + Ch1A1_30 * Ch1A2_00 - Ch1A1_31 * Ch1A2_01 - Ch1A1_32 * Ch1A2_02 + Ch1A1_33 * Ch1A2_03)*Pt03 + (+Ch1A1_00 * Ch1A2_23 - Ch1A1_01 * Ch1A2_22 + Ch1A1_02 * Ch1A2_21 - Ch1A1_03 * Ch1A2_20 + Ch1A1_10 * Ch1A2_33 + Ch1A1_11 * Ch1A2_32 - Ch1A1_12 * Ch1A2_31 + Ch1A1_13 * Ch1A2_30 + Ch1A1_20 * Ch1A2_03 + Ch1A1_21 * Ch1A2_02 - Ch1A1_22 * Ch1A2_01 - Ch1A1_23 * Ch1A2_00 + Ch1A1_30 * Ch1A2_13 + Ch1A1_31 * Ch1A2_12 - Ch1A1_32 * Ch1A2_11 + Ch1A1_33 * Ch1A2_10)*Pt10 + (-Ch1A1_00 * Ch1A2_22 - Ch1A1_01 * Ch1A2_23 - Ch1A1_02 * Ch1A2_20 - Ch1A1_03 * Ch1A2_21 - Ch1A1_10 * Ch1A2_32 + Ch1A1_11 * Ch1A2_33 + Ch1A1_12 * Ch1A2_30 + Ch1A1_13 * Ch1A2_31 - Ch1A1_20 * Ch1A2_02 + Ch1A1_21 * Ch1A2_03 - Ch1A1_22 * Ch1A2_00 + Ch1A1_23 * Ch1A2_01 - Ch1A1_30 * Ch1A2_12 + Ch1A1_31 * Ch1A2_13 + Ch1A1_32 * Ch1A2_10 + Ch1A1_33 * Ch1A2_11)*Pt11 + (+Ch1A1_00 * Ch1A2_21 + Ch1A1_01 * Ch1A2_20 - Ch1A1_02 * Ch1A2_23 - Ch1A1_03 * Ch1A2_22 + Ch1A1_10 * Ch1A2_31 - Ch1A1_11 * Ch1A2_30 + Ch1A1_12 * Ch1A2_33 + Ch1A1_13 * Ch1A2_32 + Ch1A1_20 * Ch1A2_01 + Ch1A1_21 * Ch1A2_00 + Ch1A1_22 * Ch1A2_03 + Ch1A1_23 * Ch1A2_02 + Ch1A1_30 * Ch1A2_11 - Ch1A1_31 * Ch1A2_10 + Ch1A1_32 * Ch1A2_13 + Ch1A1_33 * Ch1A2_12)*Pt12 + (-Ch1A1_00 * Ch1A2_20 + Ch1A1_01 * Ch1A2_21 + Ch1A1_02 * Ch1A2_22 - Ch1A1_03 * Ch1A2_23 - Ch1A1_10 * Ch1A2_30 - Ch1A1_11 * Ch1A2_31 - Ch1A1_12 * Ch1A2_32 + Ch1A1_13 * Ch1A2_33 + Ch1A1_20 * Ch1A2_00 - Ch1A1_21 * Ch1A2_01 - Ch1A1_22 * Ch1A2_02 + Ch1A1_23 * Ch1A2_03 - Ch1A1_30 * Ch1A2_10 - Ch1A1_31 * Ch1A2_11 - Ch1A1_32 * Ch1A2_12 + Ch1A1_33 * Ch1A2_13)*Pt13 + (-Ch1A1_00 * Ch1A2_13 + Ch1A1_01 * Ch1A2_12 - Ch1A1_02 * Ch1A2_11 + Ch1A1_03 * Ch1A2_10 - Ch1A1_10 * Ch1A2_03 - Ch1A1_11 * Ch1A2_02 + Ch1A1_12 * Ch1A2_01 + Ch1A1_13 * Ch1A2_00 + Ch1A1_20 * Ch1A2_33 + Ch1A1_21 * Ch1A2_32 - Ch1A1_22 * Ch1A2_31 + Ch1A1_23 * Ch1A2_30 + Ch1A1_30 * Ch1A2_23 + Ch1A1_31 * Ch1A2_22 - Ch1A1_32 * Ch1A2_21 + Ch1A1_33 * Ch1A2_20)*Pt20 + (+Ch1A1_00 * Ch1A2_12 + Ch1A1_01 * Ch1A2_13 + Ch1A1_02 * Ch1A2_10 + Ch1A1_03 * Ch1A2_11 + Ch1A1_10 * Ch1A2_02 - Ch1A1_11 * Ch1A2_03 + Ch1A1_12 * Ch1A2_00 - Ch1A1_13 * Ch1A2_01 - Ch1A1_20 * Ch1A2_32 + Ch1A1_21 * Ch1A2_33 + Ch1A1_22 * Ch1A2_30 + Ch1A1_23 * Ch1A2_31 - Ch1A1_30 * Ch1A2_22 + Ch1A1_31 * Ch1A2_23 + Ch1A1_32 * Ch1A2_20 + Ch1A1_33 * Ch1A2_21)*Pt21 + (-Ch1A1_00 * Ch1A2_11 - Ch1A1_01 * Ch1A2_10 + Ch1A1_02 * Ch1A2_13 + Ch1A1_03 * Ch1A2_12 - Ch1A1_10 * Ch1A2_01 - Ch1A1_11 * Ch1A2_00 - Ch1A1_12 * Ch1A2_03 - Ch1A1_13 * Ch1A2_02 + Ch1A1_20 * Ch1A2_31 - Ch1A1_21 * Ch1A2_30 + Ch1A1_22 * Ch1A2_33 + Ch1A1_23 * Ch1A2_32 + Ch1A1_30 * Ch1A2_21 - Ch1A1_31 * Ch1A2_20 + Ch1A1_32 * Ch1A2_23 + Ch1A1_33 * Ch1A2_22)*Pt22 + (+Ch1A1_00 * Ch1A2_10 - Ch1A1_01 * Ch1A2_11 - Ch1A1_02 * Ch1A2_12 + Ch1A1_03 * Ch1A2_13 - Ch1A1_10 * Ch1A2_00 + Ch1A1_11 * Ch1A2_01 + Ch1A1_12 * Ch1A2_02 - Ch1A1_13 * Ch1A2_03 - Ch1A1_20 * Ch1A2_30 - Ch1A1_21 * Ch1A2_31 - Ch1A1_22 * Ch1A2_32 + Ch1A1_23 * Ch1A2_33 - Ch1A1_30 * Ch1A2_20 - Ch1A1_31 * Ch1A2_21 - Ch1A1_32 * Ch1A2_22 + Ch1A1_33 * Ch1A2_23)*Pt23 + (+Ch1A1_00 * Ch1A2_03 - Ch1A1_01 * Ch1A2_02 + Ch1A1_02 * Ch1A2_01 + Ch1A1_03 * Ch1A2_00 - Ch1A1_10 * Ch1A2_13 - Ch1A1_11 * Ch1A2_12 + Ch1A1_12 * Ch1A2_11 - Ch1A1_13 * Ch1A2_10 - Ch1A1_20 * Ch1A2_23 - Ch1A1_21 * Ch1A2_22 + Ch1A1_22 * Ch1A2_21 - Ch1A1_23 * Ch1A2_20 + Ch1A1_30 * Ch1A2_33 + Ch1A1_31 * Ch1A2_32 - Ch1A1_32 * Ch1A2_31 + Ch1A1_33 * Ch1A2_30)*Pt30 + (-Ch1A1_00 * Ch1A2_02 - Ch1A1_01 * Ch1A2_03 + Ch1A1_02 * Ch1A2_00 - Ch1A1_03 * Ch1A2_01 + Ch1A1_10 * Ch1A2_12 - Ch1A1_11 * Ch1A2_13 - Ch1A1_12 * Ch1A2_10 - Ch1A1_13 * Ch1A2_11 + Ch1A1_20 * Ch1A2_22 - Ch1A1_21 * Ch1A2_23 - Ch1A1_22 * Ch1A2_20 - Ch1A1_23 * Ch1A2_21 - Ch1A1_30 * Ch1A2_32 + Ch1A1_31 * Ch1A2_33 + Ch1A1_32 * Ch1A2_30 + Ch1A1_33 * Ch1A2_31)*Pt31 + (+Ch1A1_00 * Ch1A2_01 - Ch1A1_01 * Ch1A2_00 - Ch1A1_02 * Ch1A2_03 - Ch1A1_03 * Ch1A2_02 - Ch1A1_10 * Ch1A2_11 + Ch1A1_11 * Ch1A2_10 - Ch1A1_12 * Ch1A2_13 - Ch1A1_13 * Ch1A2_12 - Ch1A1_20 * Ch1A2_21 + Ch1A1_21 * Ch1A2_20 - Ch1A1_22 * Ch1A2_23 - Ch1A1_23 * Ch1A2_22 + Ch1A1_30 * Ch1A2_31 - Ch1A1_31 * Ch1A2_30 + Ch1A1_32 * Ch1A2_33 + Ch1A1_33 * Ch1A2_32)*Pt32 + (+Ch1A1_00 * Ch1A2_00 + Ch1A1_01 * Ch1A2_01 + Ch1A1_02 * Ch1A2_02 - Ch1A1_03 * Ch1A2_03 + Ch1A1_10 * Ch1A2_10 + Ch1A1_11 * Ch1A2_11 + Ch1A1_12 * Ch1A2_12 - Ch1A1_13 * Ch1A2_13 + Ch1A1_20 * Ch1A2_20 + Ch1A1_21 * Ch1A2_21 + Ch1A1_22 * Ch1A2_22 - Ch1A1_23 * Ch1A2_23 - Ch1A1_30 * Ch1A2_30 - Ch1A1_31 * Ch1A2_31 - Ch1A1_32 * Ch1A2_32 + Ch1A1_33 * Ch1A2_33)*Pt33) / (2 * pi), DG_vec, 1, 3, 3, R, ns, nt, nu);

}


//Currently, there are still two t-channel methods (one for the flow equations without Katanin truncation, and one for the terms of the Katanin truncation). In the future, one may remove one of those two methods, since they both basically do the same.
//Compute t-channel terms for specified frequency and site arguments of the vertex function
void tChannel(double DG_vec[], int ns, int nt, int nu, double wpr, double BubbleR0R0[], double BubbleR1R1[], double BubbleR2R2[], Rvec R, double RPAVertices[], const double G_vec[]) {
    double s = wp_vec[ns], t = wp_vec[nt], u = dsign(nu)*wp_vec[abs(nu)];
    double w1p = 0.5*(s + t + u), w2p = 0.5*(s - t - u), w1 = 0.5*(s - t + u), w2 = 0.5*(s + t - u);
    pairWeight pw_1a = findPw(+w1p + wpr), pw_1b = findPw(w1 - wpr), pw_2a = findPw(+w2 + wpr), pw_2b = findPw(-w2p + wpr);
    Rvec R1j;
    list<Rvec>::iterator  itj;
    int Rf = getRfSublattice(R);
    double Ch2A[32];


    double Pt[Nsl][16] = { {BubbleR0R0[0],BubbleR0R0[1],
                            BubbleR0R0[2],
                            BubbleR0R0[3],
                            BubbleR0R0[4],
                            BubbleR0R0[5],
                            BubbleR0R0[6],
                            BubbleR0R0[7],
                            BubbleR0R0[8],
                            BubbleR0R0[9],
                            BubbleR0R0[10],
                            BubbleR0R0[11],
                            BubbleR0R0[12],
                            BubbleR0R0[13],
                            BubbleR0R0[14],
                            BubbleR0R0[15]},
                           {BubbleR1R1[0],BubbleR1R1[1],
                            BubbleR1R1[2],
                            BubbleR1R1[3],
                            BubbleR1R1[4],
                            BubbleR1R1[5],
                            BubbleR1R1[6],
                            BubbleR1R1[7],
                            BubbleR1R1[8],
                            BubbleR1R1[9],
                            BubbleR1R1[10],
                            BubbleR1R1[11],
                            BubbleR1R1[12],
                            BubbleR1R1[13],
                            BubbleR1R1[14],
                            BubbleR1R1[15]},
                           {BubbleR2R2[0],BubbleR2R2[1],
                            BubbleR2R2[2],
                            BubbleR2R2[3],
                            BubbleR2R2[4],
                            BubbleR2R2[5],
                            BubbleR2R2[6],
                            BubbleR2R2[7],
                            BubbleR2R2[8],
                            BubbleR2R2[9],
                            BubbleR2R2[10],
                            BubbleR2R2[11],
                            BubbleR2R2[12],
                            BubbleR2R2[13],
                            BubbleR2R2[14],
                            BubbleR2R2[15]} };

    double Pt00[Nsl] = { BubbleR0R0[0],BubbleR1R1[0],BubbleR2R2[0] };
    double Pt01[Nsl] = { BubbleR0R0[4 * 0 + 1],BubbleR1R1[4 * 0 + 1],BubbleR2R2[4 * 0 + 1] };
    double Pt02[Nsl] = { BubbleR0R0[4 * 0 + 2],BubbleR1R1[4 * 0 + 2],BubbleR2R2[4 * 0 + 2] };
    double Pt03[Nsl] = { BubbleR0R0[4 * 0 + 3],BubbleR1R1[4 * 0 + 3],BubbleR2R2[4 * 0 + 3] };
    double Pt10[Nsl] = { BubbleR0R0[4 * 1 + 0],BubbleR1R1[4 * 1 + 0],BubbleR2R2[4 * 1 + 0] };
    double Pt11[Nsl] = { BubbleR0R0[4 * 1 + 1],BubbleR1R1[4 * 1 + 1],BubbleR2R2[4 * 1 + 1] };
    double Pt12[Nsl] = { BubbleR0R0[4 * 1 + 2],BubbleR1R1[4 * 1 + 2],BubbleR2R2[4 * 1 + 2] };
    double Pt13[Nsl] = { BubbleR0R0[4 * 1 + 3],BubbleR1R1[4 * 1 + 3],BubbleR2R2[4 * 1 + 3] };
    double Pt20[Nsl] = { BubbleR0R0[4 * 2 + 0],BubbleR1R1[4 * 2 + 0],BubbleR2R2[4 * 2 + 0] };
    double Pt21[Nsl] = { BubbleR0R0[4 * 2 + 1],BubbleR1R1[4 * 2 + 1],BubbleR2R2[4 * 2 + 1] };
    double Pt22[Nsl] = { BubbleR0R0[4 * 2 + 2],BubbleR1R1[4 * 2 + 2],BubbleR2R2[4 * 2 + 2] };
    double Pt23[Nsl] = { BubbleR0R0[4 * 2 + 3],BubbleR1R1[4 * 2 + 3],BubbleR2R2[4 * 2 + 3] };
    double Pt30[Nsl] = { BubbleR0R0[4 * 3 + 0],BubbleR1R1[4 * 3 + 0],BubbleR2R2[4 * 3 + 0] };
    double Pt31[Nsl] = { BubbleR0R0[4 * 3 + 1],BubbleR1R1[4 * 3 + 1],BubbleR2R2[4 * 3 + 1] };
    double Pt32[Nsl] = { BubbleR0R0[4 * 3 + 2],BubbleR1R1[4 * 3 + 2],BubbleR2R2[4 * 3 + 2] };
    double Pt33[Nsl] = { BubbleR0R0[4 * 3 + 3],BubbleR1R1[4 * 3 + 3],BubbleR2R2[4 * 3 + 3] };

    double Pt3_00 = Pt00[Rf];
    double Pt3_01 = Pt01[Rf];
    double Pt3_02 = Pt02[Rf];
    double Pt3_03 = Pt03[Rf];
    double Pt3_10 = Pt10[Rf];
    double Pt3_11 = Pt11[Rf];
    double Pt3_12 = Pt12[Rf];
    double Pt3_13 = Pt13[Rf];
    double Pt3_20 = Pt20[Rf];
    double Pt3_21 = Pt21[Rf];
    double Pt3_22 = Pt22[Rf];
    double Pt3_23 = Pt23[Rf];
    double Pt3_30 = Pt30[Rf];
    double Pt3_31 = Pt31[Rf];
    double Pt3_32 = Pt32[Rf];
    double Pt3_33 = Pt33[Rf];

    double Pt4_00 = Pt00[R.i];
    double Pt4_01 = Pt01[R.i];
    double Pt4_02 = Pt02[R.i];
    double Pt4_03 = Pt03[R.i];
    double Pt4_10 = Pt10[R.i];
    double Pt4_11 = Pt11[R.i];
    double Pt4_12 = Pt12[R.i];
    double Pt4_13 = Pt13[R.i];
    double Pt4_20 = Pt20[R.i];
    double Pt4_21 = Pt21[R.i];
    double Pt4_22 = Pt22[R.i];
    double Pt4_23 = Pt23[R.i];
    double Pt4_30 = Pt30[R.i];
    double Pt4_31 = Pt31[R.i];
    double Pt4_32 = Pt32[R.i];
    double Pt4_33 = Pt33[R.i];


    const int vertexProductSize = Nsl * 16 * 16;
    const int shift = 16 * 16;
    const int shift2 = 2*shift;
    double vertexProduct[vertexProductSize];
    fill(vertexProduct, vertexProduct + vertexProductSize, 0.);

    //RPA Channel
    list<Rvec> O_RPA;
    if (R.i == 0) {
        O_RPA = Oi0;
    }
    else if (R.i == 1) {
        O_RPA = Oi1;
    }
    else {
        O_RPA = Oi2;
    }
    //site summation
    for (itj = O_RPA.begin(); itj != O_RPA.end(); ++itj) {
        R1j = *itj;
        Rvec Rj2 = { getRfSublattice(R1j),R.a1 - R1j.a1, R.a2 - R1j.a2 };

        if (inO(Rj2)) {
            //Get single vertices
            for (int a = 0; a < 16; a++) {
                Ch2A[a] = RPAVertices[a*RPAsize[2] + R1j.i*RPAsize[3] + (R1j.a1 + L)*RPAsize[4] + (R1j.a2 + L)];
            }
            for (int c = 16; c < 32; c++) {
                Ch2A[c] = RPAVertices[c*RPAsize[2] + Rj2.i*RPAsize[3] + (Rj2.a1 + L)*RPAsize[4] + (Rj2.a2 + L)];
            }
            //Get all vertex-product combinations
            for (int a = 0; a < 16; a++) {
                for (int c = 0; c < 16; c++) {
                    vertexProduct[shift*Rj2.i + 16 * a + c] += Ch2A[a] * Ch2A[16 + c];
                }
            }
        }
    }

    //Pt are propagator bubbles, vertexProduct contains vertex products (the following lines are generated by another program)
    double t00i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[0] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[4] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[8] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[12] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[16] + (-Pt[0][0] + Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[20] + (+Pt[0][3] + Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[24] + (-Pt[0][2] + Pt[0][7] + Pt[0][8] + Pt[0][13])*vertexProduct[28] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[32] + (-Pt[0][3] + Pt[0][6] + Pt[0][9] + Pt[0][12])*vertexProduct[36] + (-Pt[0][0] - Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[40] + (+Pt[0][1] - Pt[0][4] + Pt[0][11] + Pt[0][14])*vertexProduct[44] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[48] + (+Pt[0][2] + Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[52] + (-Pt[0][1] + Pt[0][4] + Pt[0][11] + Pt[0][14])*vertexProduct[56] + (-Pt[0][0] - Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[60];
    double t01i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[1] + (+Pt[0][1] + Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[5] + (+Pt[0][2] - Pt[0][7] + Pt[0][8] + Pt[0][13])*vertexProduct[9] + (+Pt[0][3] + Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[13] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[17] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[21] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[25] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[29] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[33] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[37] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[41] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[45] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[49] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[53] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[57] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[61];
    double t02i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[2] + (+Pt[0][1] + Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[6] + (+Pt[0][2] - Pt[0][7] + Pt[0][8] + Pt[0][13])*vertexProduct[10] + (+Pt[0][3] + Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[14] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[18] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[22] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[26] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[30] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[34] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[38] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[42] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[46] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[50] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[54] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[58] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[62];
    double t03i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[3] + (+Pt[0][1] + Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[7] + (+Pt[0][2] - Pt[0][7] + Pt[0][8] + Pt[0][13])*vertexProduct[11] + (+Pt[0][3] + Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[15] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[19] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[23] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[27] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[31] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[35] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[39] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[43] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[47] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[51] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[55] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[59] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[63];
    double t10i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[64] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[68] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[72] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[76] + (+Pt[0][1] + Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[80] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[84] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[88] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[92] + (+Pt[0][2] + Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[96] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[100] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[104] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[108] + (+Pt[0][3] - Pt[0][6] + Pt[0][9] + Pt[0][12])*vertexProduct[112] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[116] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[120] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[124];
    double t11i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[65] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[69] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[73] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[77] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[81] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[85] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[89] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[93] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[97] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[101] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[105] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[109] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[113] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[117] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[121] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[125];
    double t12i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[66] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[70] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[74] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[78] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[82] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[86] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[90] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[94] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[98] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[102] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[106] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[110] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[114] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[118] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[122] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[126];
    double t13i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[67] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[71] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[75] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[79] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[83] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[87] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[91] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[95] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[99] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[103] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[107] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[111] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[115] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[119] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[123] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[127];
    double t20i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[128] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[132] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[136] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[140] + (+Pt[0][1] + Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[144] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[148] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[152] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[156] + (+Pt[0][2] + Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[160] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[164] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[168] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[172] + (+Pt[0][3] - Pt[0][6] + Pt[0][9] + Pt[0][12])*vertexProduct[176] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[180] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[184] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[188];
    double t21i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[129] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[133] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[137] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[141] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[145] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[149] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[153] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[157] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[161] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[165] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[169] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[173] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[177] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[181] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[185] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[189];
    double t22i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[130] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[134] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[138] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[142] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[146] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[150] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[154] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[158] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[162] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[166] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[170] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[174] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[178] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[182] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[186] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[190];
    double t23i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[131] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[135] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[139] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[143] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[147] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[151] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[155] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[159] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[163] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[167] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[171] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[175] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[179] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[183] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[187] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[191];
    double t30i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[192] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[196] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[200] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[204] + (+Pt[0][1] + Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[208] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[212] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[216] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[220] + (+Pt[0][2] + Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[224] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[228] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[232] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[236] + (+Pt[0][3] - Pt[0][6] + Pt[0][9] + Pt[0][12])*vertexProduct[240] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[244] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[248] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[252];
    double t31i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[193] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[197] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[201] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[205] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[209] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[213] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[217] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[221] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[225] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[229] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[233] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[237] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[241] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[245] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[249] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[253];
    double t32i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[194] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[198] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[202] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[206] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[210] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[214] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[218] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[222] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[226] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[230] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[234] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[238] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[242] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[246] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[250] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[254];
    double t33i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[195] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[199] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[203] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[207] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[211] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[215] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[219] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[223] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[227] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[231] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[235] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[239] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[243] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[247] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[251] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[255];

    double t00i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 0] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 4] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 8] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 12] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 16] + (-Pt[1][0] + Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 20] + (+Pt[1][3] + Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 24] + (-Pt[1][2] + Pt[1][7] + Pt[1][8] + Pt[1][13])*vertexProduct[shift + 28] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 32] + (-Pt[1][3] + Pt[1][6] + Pt[1][9] + Pt[1][12])*vertexProduct[shift + 36] + (-Pt[1][0] - Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 40] + (+Pt[1][1] - Pt[1][4] + Pt[1][11] + Pt[1][14])*vertexProduct[shift + 44] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 48] + (+Pt[1][2] + Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 52] + (-Pt[1][1] + Pt[1][4] + Pt[1][11] + Pt[1][14])*vertexProduct[shift + 56] + (-Pt[1][0] - Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 60];
    double t01i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 1] + (+Pt[1][1] + Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 5] + (+Pt[1][2] - Pt[1][7] + Pt[1][8] + Pt[1][13])*vertexProduct[shift + 9] + (+Pt[1][3] + Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 13] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 17] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 21] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 25] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 29] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 33] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 37] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 41] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 45] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 49] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 53] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 57] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 61];
    double t02i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 2] + (+Pt[1][1] + Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 6] + (+Pt[1][2] - Pt[1][7] + Pt[1][8] + Pt[1][13])*vertexProduct[shift + 10] + (+Pt[1][3] + Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 14] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 18] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 22] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 26] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 30] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 34] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 38] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 42] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 46] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 50] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 54] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 58] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 62];
    double t03i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 3] + (+Pt[1][1] + Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 7] + (+Pt[1][2] - Pt[1][7] + Pt[1][8] + Pt[1][13])*vertexProduct[shift + 11] + (+Pt[1][3] + Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 15] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 19] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 23] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 27] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 31] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 35] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 39] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 43] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 47] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 51] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 55] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 59] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 63];
    double t10i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 64] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 68] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 72] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 76] + (+Pt[1][1] + Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 80] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 84] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 88] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 92] + (+Pt[1][2] + Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 96] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 100] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 104] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 108] + (+Pt[1][3] - Pt[1][6] + Pt[1][9] + Pt[1][12])*vertexProduct[shift + 112] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 116] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 120] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 124];
    double t11i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 65] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 69] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 73] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 77] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 81] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 85] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 89] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 93] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 97] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 101] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 105] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 109] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 113] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 117] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 121] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 125];
    double t12i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 66] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 70] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 74] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 78] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 82] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 86] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 90] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 94] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 98] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 102] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 106] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 110] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 114] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 118] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 122] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 126];
    double t13i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 67] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 71] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 75] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 79] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 83] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 87] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 91] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 95] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 99] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 103] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 107] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 111] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 115] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 119] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 123] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 127];
    double t20i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 128] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 132] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 136] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 140] + (+Pt[1][1] + Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 144] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 148] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 152] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 156] + (+Pt[1][2] + Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 160] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 164] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 168] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 172] + (+Pt[1][3] - Pt[1][6] + Pt[1][9] + Pt[1][12])*vertexProduct[shift + 176] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 180] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 184] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 188];
    double t21i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 129] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 133] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 137] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 141] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 145] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 149] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 153] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 157] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 161] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 165] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 169] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 173] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 177] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 181] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 185] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 189];
    double t22i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 130] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 134] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 138] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 142] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 146] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 150] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 154] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 158] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 162] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 166] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 170] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 174] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 178] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 182] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 186] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 190];
    double t23i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 131] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 135] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 139] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 143] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 147] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 151] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 155] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 159] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 163] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 167] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 171] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 175] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 179] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 183] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 187] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 191];
    double t30i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 192] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 196] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 200] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 204] + (+Pt[1][1] + Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 208] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 212] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 216] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 220] + (+Pt[1][2] + Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 224] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 228] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 232] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 236] + (+Pt[1][3] - Pt[1][6] + Pt[1][9] + Pt[1][12])*vertexProduct[shift + 240] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 244] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 248] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 252];
    double t31i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 193] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 197] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 201] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 205] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 209] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 213] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 217] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 221] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 225] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 229] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 233] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 237] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 241] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 245] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 249] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 253];
    double t32i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 194] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 198] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 202] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 206] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 210] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 214] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 218] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 222] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 226] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 230] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 234] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 238] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 242] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 246] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 250] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 254];
    double t33i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 195] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 199] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 203] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 207] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 211] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 215] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 219] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 223] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 227] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 231] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 235] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 239] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 243] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 247] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 251] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 255];

    double t00i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 0] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 4] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 8] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 12] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 16] + (-Pt[2][0] + Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 20] + (+Pt[2][3] + Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 24] + (-Pt[2][2] + Pt[2][7] + Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 28] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 32] + (-Pt[2][3] + Pt[2][6] + Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 36] + (-Pt[2][0] - Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 40] + (+Pt[2][1] - Pt[2][4] + Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 44] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 48] + (+Pt[2][2] + Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 52] + (-Pt[2][1] + Pt[2][4] + Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 56] + (-Pt[2][0] - Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 60];
    double t01i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 1] + (+Pt[2][1] + Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 5] + (+Pt[2][2] - Pt[2][7] + Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 9] + (+Pt[2][3] + Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 13] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 17] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 21] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 25] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 29] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 33] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 37] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 41] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 45] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 49] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 53] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 57] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 61];
    double t02i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 2] + (+Pt[2][1] + Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 6] + (+Pt[2][2] - Pt[2][7] + Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 10] + (+Pt[2][3] + Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 14] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 18] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 22] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 26] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 30] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 34] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 38] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 42] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 46] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 50] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 54] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 58] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 62];
    double t03i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 3] + (+Pt[2][1] + Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 7] + (+Pt[2][2] - Pt[2][7] + Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 11] + (+Pt[2][3] + Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 15] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 19] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 23] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 27] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 31] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 35] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 39] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 43] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 47] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 51] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 55] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 59] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 63];
    double t10i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 64] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 68] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 72] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 76] + (+Pt[2][1] + Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 80] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 84] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 88] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 92] + (+Pt[2][2] + Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 96] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 100] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 104] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 108] + (+Pt[2][3] - Pt[2][6] + Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 112] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 116] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 120] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 124];
    double t11i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 65] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 69] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 73] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 77] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 81] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 85] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 89] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 93] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 97] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 101] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 105] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 109] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 113] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 117] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 121] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 125];
    double t12i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 66] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 70] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 74] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 78] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 82] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 86] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 90] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 94] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 98] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 102] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 106] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 110] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 114] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 118] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 122] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 126];
    double t13i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 67] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 71] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 75] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 79] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 83] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 87] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 91] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 95] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 99] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 103] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 107] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 111] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 115] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 119] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 123] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 127];
    double t20i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 128] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 132] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 136] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 140] + (+Pt[2][1] + Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 144] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 148] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 152] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 156] + (+Pt[2][2] + Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 160] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 164] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 168] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 172] + (+Pt[2][3] - Pt[2][6] + Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 176] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 180] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 184] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 188];
    double t21i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 129] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 133] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 137] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 141] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 145] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 149] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 153] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 157] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 161] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 165] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 169] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 173] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 177] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 181] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 185] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 189];
    double t22i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 130] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 134] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 138] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 142] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 146] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 150] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 154] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 158] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 162] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 166] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 170] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 174] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 178] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 182] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 186] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 190];
    double t23i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 131] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 135] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 139] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 143] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 147] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 151] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 155] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 159] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 163] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 167] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 171] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 175] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 179] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 183] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 187] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 191];
    double t30i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 192] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 196] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 200] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 204] + (+Pt[2][1] + Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 208] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 212] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 216] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 220] + (+Pt[2][2] + Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 224] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 228] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 232] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 236] + (+Pt[2][3] - Pt[2][6] + Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 240] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 244] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 248] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 252];
    double t31i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 193] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 197] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 201] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 205] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 209] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 213] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 217] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 221] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 225] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 229] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 233] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 237] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 241] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 245] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 249] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 253];
    double t32i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 194] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 198] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 202] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 206] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 210] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 214] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 218] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 222] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 226] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 230] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 234] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 238] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 242] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 246] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 250] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 254];
    double t33i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 195] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 199] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 203] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 207] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 211] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 215] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 219] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 223] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 227] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 231] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 235] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 239] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 243] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 247] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 251] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 255];


    double t00 = t00i0 + t00i1 + t00i2;
    double t01 = t01i0 + t01i1 + t01i2;
    double t02 = t02i0 + t02i1 + t02i2;
    double t03 = t03i0 + t03i1 + t03i2;
    double t10 = t10i0 + t10i1 + t10i2;
    double t11 = t11i0 + t11i1 + t11i2;
    double t12 = t12i0 + t12i1 + t12i2;
    double t13 = t13i0 + t13i1 + t13i2;
    double t20 = t20i0 + t20i1 + t20i2;
    double t21 = t21i0 + t21i1 + t21i2;
    double t22 = t22i0 + t22i1 + t22i2;
    double t23 = t23i0 + t23i1 + t23i2;
    double t30 = t30i0 + t30i1 + t30i2;
    double t31 = t31i0 + t31i1 + t31i2;
    double t32 = t32i0 + t32i1 + t32i2;
    double t33 = t33i0 + t33i1 + t33i2;

    Rvec R0i = { R.i,0,0 };
    Rvec R0f = { Rf,0,0 };
    //Vertices of the particle-hole Channels
    double Ch3A1_00 = getIntpolG(G_vec, 1, 0, 0, R, pw_1a, nt, pw_1b);
    double Ch3A1_01 = getIntpolG(G_vec, 1, 0, 1, R, pw_1a, nt, pw_1b);
    double Ch3A1_02 = getIntpolG(G_vec, 1, 0, 2, R, pw_1a, nt, pw_1b);
    double Ch3A1_03 = getIntpolG(G_vec, 1, 0, 3, R, pw_1a, nt, pw_1b);
    double Ch3A1_10 = getIntpolG(G_vec, 1, 1, 0, R, pw_1a, nt, pw_1b);
    double Ch3A1_11 = getIntpolG(G_vec, 1, 1, 1, R, pw_1a, nt, pw_1b);
    double Ch3A1_12 = getIntpolG(G_vec, 1, 1, 2, R, pw_1a, nt, pw_1b);
    double Ch3A1_13 = getIntpolG(G_vec, 1, 1, 3, R, pw_1a, nt, pw_1b);
    double Ch3A1_20 = getIntpolG(G_vec, 1, 2, 0, R, pw_1a, nt, pw_1b);
    double Ch3A1_21 = getIntpolG(G_vec, 1, 2, 1, R, pw_1a, nt, pw_1b);
    double Ch3A1_22 = getIntpolG(G_vec, 1, 2, 2, R, pw_1a, nt, pw_1b);
    double Ch3A1_23 = getIntpolG(G_vec, 1, 2, 3, R, pw_1a, nt, pw_1b);
    double Ch3A1_30 = getIntpolG(G_vec, 1, 3, 0, R, pw_1a, nt, pw_1b);
    double Ch3A1_31 = getIntpolG(G_vec, 1, 3, 1, R, pw_1a, nt, pw_1b);
    double Ch3A1_32 = getIntpolG(G_vec, 1, 3, 2, R, pw_1a, nt, pw_1b);
    double Ch3A1_33 = getIntpolG(G_vec, 1, 3, 3, R, pw_1a, nt, pw_1b);

    double Ch3A2_00 = getIntpolG(G_vec, 1, 0, 0, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_01 = getIntpolG(G_vec, 1, 0, 1, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_02 = getIntpolG(G_vec, 1, 0, 2, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_03 = getIntpolG(G_vec, 1, 0, 3, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_10 = getIntpolG(G_vec, 1, 1, 0, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_11 = getIntpolG(G_vec, 1, 1, 1, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_12 = getIntpolG(G_vec, 1, 1, 2, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_13 = getIntpolG(G_vec, 1, 1, 3, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_20 = getIntpolG(G_vec, 1, 2, 0, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_21 = getIntpolG(G_vec, 1, 2, 1, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_22 = getIntpolG(G_vec, 1, 2, 2, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_23 = getIntpolG(G_vec, 1, 2, 3, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_30 = getIntpolG(G_vec, 1, 3, 0, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_31 = getIntpolG(G_vec, 1, 3, 1, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_32 = getIntpolG(G_vec, 1, 3, 2, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_33 = getIntpolG(G_vec, 1, 3, 3, R0f, pw_2a, pw_2b, nt);

    double Ch4A1_00 = getIntpolG(G_vec, 1, 0, 0, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_01 = getIntpolG(G_vec, 1, 0, 1, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_02 = getIntpolG(G_vec, 1, 0, 2, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_03 = getIntpolG(G_vec, 1, 0, 3, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_10 = getIntpolG(G_vec, 1, 1, 0, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_11 = getIntpolG(G_vec, 1, 1, 1, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_12 = getIntpolG(G_vec, 1, 1, 2, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_13 = getIntpolG(G_vec, 1, 1, 3, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_20 = getIntpolG(G_vec, 1, 2, 0, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_21 = getIntpolG(G_vec, 1, 2, 1, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_22 = getIntpolG(G_vec, 1, 2, 2, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_23 = getIntpolG(G_vec, 1, 2, 3, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_30 = getIntpolG(G_vec, 1, 3, 0, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_31 = getIntpolG(G_vec, 1, 3, 1, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_32 = getIntpolG(G_vec, 1, 3, 2, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_33 = getIntpolG(G_vec, 1, 3, 3, R0i, pw_1a, pw_1b, nt);

    double Ch4A2_00 = getIntpolG(G_vec, 1, 0, 0, R, pw_2a, nt, pw_2b);
    double Ch4A2_01 = getIntpolG(G_vec, 1, 0, 1, R, pw_2a, nt, pw_2b);
    double Ch4A2_02 = getIntpolG(G_vec, 1, 0, 2, R, pw_2a, nt, pw_2b);
    double Ch4A2_03 = getIntpolG(G_vec, 1, 0, 3, R, pw_2a, nt, pw_2b);
    double Ch4A2_10 = getIntpolG(G_vec, 1, 1, 0, R, pw_2a, nt, pw_2b);
    double Ch4A2_11 = getIntpolG(G_vec, 1, 1, 1, R, pw_2a, nt, pw_2b);
    double Ch4A2_12 = getIntpolG(G_vec, 1, 1, 2, R, pw_2a, nt, pw_2b);
    double Ch4A2_13 = getIntpolG(G_vec, 1, 1, 3, R, pw_2a, nt, pw_2b);
    double Ch4A2_20 = getIntpolG(G_vec, 1, 2, 0, R, pw_2a, nt, pw_2b);
    double Ch4A2_21 = getIntpolG(G_vec, 1, 2, 1, R, pw_2a, nt, pw_2b);
    double Ch4A2_22 = getIntpolG(G_vec, 1, 2, 2, R, pw_2a, nt, pw_2b);
    double Ch4A2_23 = getIntpolG(G_vec, 1, 2, 3, R, pw_2a, nt, pw_2b);
    double Ch4A2_30 = getIntpolG(G_vec, 1, 3, 0, R, pw_2a, nt, pw_2b);
    double Ch4A2_31 = getIntpolG(G_vec, 1, 3, 1, R, pw_2a, nt, pw_2b);
    double Ch4A2_32 = getIntpolG(G_vec, 1, 3, 2, R, pw_2a, nt, pw_2b);
    double Ch4A2_33 = getIntpolG(G_vec, 1, 3, 3, R, pw_2a, nt, pw_2b);


    addG((2 * t00 + (-Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_00 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_01 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_02 + (+Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_03 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_10 + (+Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_11 + (+Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_12 + (-Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_13 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_20 + (-Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_21 + (+Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_22 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_23 + (+Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_30 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_31 + (-Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_32 + (+Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_33 + (-Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_00 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_01 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_02 + (+Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_03 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_10 + (+Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_11 + (-Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_12 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_13 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_20 + (+Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_21 + (+Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_22 + (-Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_23 + (+Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_30 + (-Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_31 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_32 + (+Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_33) / (2 * pi), DG_vec, 1, 0, 0, R, ns, nt, nu);
    addG((2 * t01 + (-Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_00 + (-Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_01 + (-Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_02 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_03 + (-Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_10 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_11 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_12 + (+Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_13 + (-Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_20 + (-Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_21 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_22 + (-Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_23 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_30 + (-Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_31 + (+Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_32 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_33 + (-Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_00 + (+Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 - Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_01 + (+Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 - Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_02 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 - Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_03 + (+Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 - Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_10 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 - Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_11 + (-Ch4A1_30 * Ch4A2_01 - Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_12 + (+Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 + Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_13 + (+Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 - Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_20 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 + Ch4A1_33 * Ch4A2_31)*Pt4_21 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 - Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_22 + (-Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 - Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_23 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 - Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_30 + (-Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 - Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_31 + (+Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 + Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_32 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 - Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_33) / (2 * pi), DG_vec, 1, 0, 1, R, ns, nt, nu);
    addG((2 * t02 + (-Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_00 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_01 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_02 + (-Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_03 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_10 + (+Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_11 + (-Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_12 + (+Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_13 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_20 + (+Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_21 + (+Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_22 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_23 + (-Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_30 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_31 + (-Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_32 + (+Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_33 + (-Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_00 + (+Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 - Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_01 + (+Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 - Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_02 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 - Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_03 + (+Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 - Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_10 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 - Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_11 + (-Ch4A1_30 * Ch4A2_02 - Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_12 + (+Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 + Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_13 + (+Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 - Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_20 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 + Ch4A1_33 * Ch4A2_32)*Pt4_21 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 - Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_22 + (-Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 - Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_23 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 - Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_30 + (-Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 - Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_31 + (+Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 + Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_32 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 - Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_33) / (2 * pi), DG_vec, 1, 0, 2, R, ns, nt, nu);
    addG((2 * t03 + (-Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_00 + (-Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_01 + (+Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_02 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_03 + (-Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_10 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_11 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_12 + (-Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_13 + (+Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_20 + (+Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_21 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_22 + (-Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_23 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_30 + (+Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_31 + (+Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_32 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_33 + (-Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_00 + (+Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 - Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_01 + (+Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 - Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_02 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 - Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_03 + (+Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 - Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_10 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 - Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_11 + (-Ch4A1_30 * Ch4A2_03 - Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_12 + (+Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 + Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_13 + (+Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 - Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_20 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 + Ch4A1_33 * Ch4A2_33)*Pt4_21 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 - Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_22 + (-Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 - Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_23 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 - Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_30 + (-Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 - Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_31 + (+Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 + Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_32 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 - Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_33) / (2 * pi), DG_vec, 1, 0, 3, R, ns, nt, nu);
    addG((2 * t10 + (-Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_00 + (+Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 - Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_01 + (+Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 - Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_02 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 - Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_03 + (+Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 - Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_10 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 - Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_11 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 + Ch3A1_13 * Ch3A2_33)*Pt3_12 + (-Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 - Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_13 + (+Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 - Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_20 + (-Ch3A1_10 * Ch3A2_03 - Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_21 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 - Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_22 + (+Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 + Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_23 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 - Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_30 + (+Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 + Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_31 + (-Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 - Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_32 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 - Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_33 + (-Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_00 + (-Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_01 + (-Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_02 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_03 + (-Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_10 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_11 + (-Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_12 + (-Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_13 + (-Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_20 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_21 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_22 + (+Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_23 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_30 + (+Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_31 + (-Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_32 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_33) / (2 * pi), DG_vec, 1, 1, 0, R, ns, nt, nu);
    addG((2 * t11 + (+Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 - Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_00 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 - Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_01 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 - Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_02 + (-Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 + Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_03 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 - Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_10 + (-Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 + Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_11 + (-Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 - Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_12 + (-Ch3A1_10 * Ch3A2_03 - Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_13 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 + Ch3A1_13 * Ch3A2_33)*Pt3_20 + (+Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 - Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_21 + (-Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 - Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_22 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 - Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_23 + (-Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 - Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_30 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 - Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_31 + (-Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_32 + (-Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 - Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_33 + (+Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 - Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_00 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 - Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_01 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 + Ch4A1_33 * Ch4A2_31)*Pt4_02 + (-Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 - Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_03 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 - Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_10 + (-Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 + Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_11 + (+Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 - Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_12 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 - Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_13 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 - Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_20 + (-Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 - Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_21 + (-Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 - Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_22 + (-Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_23 + (-Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 + Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_30 + (-Ch4A1_30 * Ch4A2_01 - Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_31 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 - Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_32 + (-Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 - Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_33) / (2 * pi), DG_vec, 1, 1, 1, R, ns, nt, nu);
    addG((2 * t12 + (+Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 - Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_00 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 + Ch3A1_13 * Ch3A2_33)*Pt3_01 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 - Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_02 + (+Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 - Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_03 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 - Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_10 + (-Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 - Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_11 + (+Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 - Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_12 + (-Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_13 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 - Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_20 + (-Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 - Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_21 + (-Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 + Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_22 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 - Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_23 + (+Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 + Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_30 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 - Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_31 + (+Ch3A1_10 * Ch3A2_03 - Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_32 + (-Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 - Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_33 + (+Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 - Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_00 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 - Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_01 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 + Ch4A1_33 * Ch4A2_32)*Pt4_02 + (-Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 - Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_03 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 - Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_10 + (-Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 + Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_11 + (+Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 - Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_12 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 - Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_13 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 - Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_20 + (-Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 - Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_21 + (-Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 - Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_22 + (-Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_23 + (-Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 + Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_30 + (-Ch4A1_30 * Ch4A2_02 - Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_31 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 - Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_32 + (-Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 - Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_33) / (2 * pi), DG_vec, 1, 1, 2, R, ns, nt, nu);
    addG((2 * t13 + (+Ch3A1_10 * Ch3A2_03 - Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_00 + (+Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 - Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_01 + (-Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 + Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_02 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 - Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_03 + (+Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 + Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_10 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 - Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_11 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 - Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_12 + (+Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 - Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_13 + (-Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 - Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_20 + (-Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_21 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 - Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_22 + (+Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 - Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_23 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 - Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_30 + (-Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 - Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_31 + (-Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 - Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_32 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 + Ch3A1_13 * Ch3A2_33)*Pt3_33 + (+Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 - Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_00 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 - Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_01 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 + Ch4A1_33 * Ch4A2_33)*Pt4_02 + (-Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 - Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_03 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 - Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_10 + (-Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 + Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_11 + (+Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 - Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_12 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 - Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_13 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 - Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_20 + (-Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 - Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_21 + (-Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 - Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_22 + (-Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_23 + (-Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 + Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_30 + (-Ch4A1_30 * Ch4A2_03 - Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_31 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 - Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_32 + (-Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 - Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_33) / (2 * pi), DG_vec, 1, 1, 3, R, ns, nt, nu);
    addG((2 * t20 + (-Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_00 + (+Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 - Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_01 + (+Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 - Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_02 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 - Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_03 + (+Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 - Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_10 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 - Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_11 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 + Ch3A1_23 * Ch3A2_33)*Pt3_12 + (-Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 - Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_13 + (+Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 - Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_20 + (-Ch3A1_20 * Ch3A2_03 - Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_21 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 - Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_22 + (+Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 + Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_23 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 - Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_30 + (+Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 + Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_31 + (-Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 - Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_32 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 - Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_33 + (-Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_00 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_01 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_02 + (-Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_03 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_10 + (+Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_11 + (+Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_12 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_13 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_20 + (-Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_21 + (+Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_22 + (-Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_23 + (-Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_30 + (+Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_31 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_32 + (+Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_33) / (2 * pi), DG_vec, 1, 2, 0, R, ns, nt, nu);
    addG((2 * t21 + (+Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 - Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_00 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 - Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_01 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 - Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_02 + (-Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 + Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_03 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 - Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_10 + (-Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 + Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_11 + (-Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 - Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_12 + (-Ch3A1_20 * Ch3A2_03 - Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_13 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 + Ch3A1_23 * Ch3A2_33)*Pt3_20 + (+Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 - Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_21 + (-Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 - Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_22 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 - Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_23 + (-Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 - Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_30 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 - Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_31 + (-Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_32 + (-Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 - Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_33 + (+Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 - Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_00 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 - Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_01 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 - Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_02 + (+Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 + Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_03 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 + Ch4A1_33 * Ch4A2_31)*Pt4_10 + (-Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 - Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_11 + (-Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 - Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_12 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 - Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_13 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 - Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_20 + (+Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 - Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_21 + (-Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 + Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_22 + (+Ch4A1_30 * Ch4A2_01 - Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_23 + (+Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 - Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_30 + (-Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_31 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 - Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_32 + (-Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 - Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_33) / (2 * pi), DG_vec, 1, 2, 1, R, ns, nt, nu);
    addG((2 * t22 + (+Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 - Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_00 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 + Ch3A1_23 * Ch3A2_33)*Pt3_01 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 - Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_02 + (+Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 - Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_03 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 - Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_10 + (-Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 - Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_11 + (+Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 - Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_12 + (-Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_13 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 - Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_20 + (-Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 - Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_21 + (-Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 + Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_22 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 - Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_23 + (+Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 + Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_30 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 - Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_31 + (+Ch3A1_20 * Ch3A2_03 - Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_32 + (-Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 - Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_33 + (+Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 - Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_00 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 - Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_01 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 - Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_02 + (+Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 + Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_03 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 + Ch4A1_33 * Ch4A2_32)*Pt4_10 + (-Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 - Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_11 + (-Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 - Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_12 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 - Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_13 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 - Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_20 + (+Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 - Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_21 + (-Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 + Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_22 + (+Ch4A1_30 * Ch4A2_02 - Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_23 + (+Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 - Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_30 + (-Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_31 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 - Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_32 + (-Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 - Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_33) / (2 * pi), DG_vec, 1, 2, 2, R, ns, nt, nu);
    addG((2 * t23 + (+Ch3A1_20 * Ch3A2_03 - Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_00 + (+Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 - Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_01 + (-Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 + Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_02 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 - Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_03 + (+Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 + Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_10 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 - Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_11 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 - Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_12 + (+Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 - Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_13 + (-Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 - Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_20 + (-Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_21 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 - Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_22 + (+Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 - Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_23 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 - Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_30 + (-Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 - Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_31 + (-Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 - Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_32 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 + Ch3A1_23 * Ch3A2_33)*Pt3_33 + (+Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 - Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_00 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 - Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_01 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 - Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_02 + (+Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 + Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_03 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 + Ch4A1_33 * Ch4A2_33)*Pt4_10 + (-Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 - Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_11 + (-Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 - Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_12 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 - Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_13 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 - Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_20 + (+Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 - Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_21 + (-Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 + Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_22 + (+Ch4A1_30 * Ch4A2_03 - Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_23 + (+Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 - Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_30 + (-Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_31 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 - Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_32 + (-Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 - Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_33) / (2 * pi), DG_vec, 1, 2, 3, R, ns, nt, nu);
    addG((2 * t30 + (-Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_00 + (+Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 - Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_01 + (+Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 - Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_02 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 - Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_03 + (+Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 - Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_10 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 - Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_11 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 + Ch3A1_33 * Ch3A2_33)*Pt3_12 + (-Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 - Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_13 + (+Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 - Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_20 + (-Ch3A1_30 * Ch3A2_03 - Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_21 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 - Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_22 + (+Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 + Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_23 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 - Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_30 + (+Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 + Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_31 + (-Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 - Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_32 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 - Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_33 + (-Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_00 + (-Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_01 + (+Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_02 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_03 + (-Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_10 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_11 + (+Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_12 + (+Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_13 + (+Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_20 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_21 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_22 + (+Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_23 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_30 + (-Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_31 + (-Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_32 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_33) / (2 * pi), DG_vec, 1, 3, 0, R, ns, nt, nu);
    addG((2 * t31 + (+Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 - Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_00 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 - Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_01 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 - Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_02 + (-Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 + Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_03 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 - Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_10 + (-Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 + Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_11 + (-Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 - Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_12 + (-Ch3A1_30 * Ch3A2_03 - Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_13 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 + Ch3A1_33 * Ch3A2_33)*Pt3_20 + (+Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 - Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_21 + (-Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 - Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_22 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 - Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_23 + (-Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 - Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_30 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 - Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_31 + (-Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_32 + (-Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 - Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_33 + (+Ch4A1_30 * Ch4A2_01 - Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_00 + (+Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 + Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_01 + (-Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 - Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_02 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 - Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_03 + (+Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 - Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_10 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 - Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_11 + (-Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_12 + (-Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 - Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_13 + (-Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 + Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_20 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 - Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_21 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 - Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_22 + (-Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 - Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_23 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 - Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_30 + (+Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 - Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_31 + (+Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 - Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_32 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 + Ch4A1_33 * Ch4A2_31)*Pt4_33) / (2 * pi), DG_vec, 1, 3, 1, R, ns, nt, nu);
    addG((2 * t32 + (+Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 - Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_00 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 + Ch3A1_33 * Ch3A2_33)*Pt3_01 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 - Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_02 + (+Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 - Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_03 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 - Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_10 + (-Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 - Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_11 + (+Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 - Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_12 + (-Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_13 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 - Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_20 + (-Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 - Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_21 + (-Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 + Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_22 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 - Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_23 + (+Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 + Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_30 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 - Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_31 + (+Ch3A1_30 * Ch3A2_03 - Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_32 + (-Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 - Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_33 + (+Ch4A1_30 * Ch4A2_02 - Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_00 + (+Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 + Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_01 + (-Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 - Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_02 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 - Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_03 + (+Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 - Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_10 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 - Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_11 + (-Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_12 + (-Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 - Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_13 + (-Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 + Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_20 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 - Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_21 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 - Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_22 + (-Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 - Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_23 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 - Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_30 + (+Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 - Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_31 + (+Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 - Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_32 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 + Ch4A1_33 * Ch4A2_32)*Pt4_33) / (2 * pi), DG_vec, 1, 3, 2, R, ns, nt, nu);
    addG((2 * t33 + (+Ch3A1_30 * Ch3A2_03 - Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_00 + (+Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 - Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_01 + (-Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 + Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_02 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 - Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_03 + (+Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 + Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_10 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 - Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_11 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 - Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_12 + (+Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 - Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_13 + (-Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 - Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_20 + (-Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_21 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 - Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_22 + (+Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 - Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_23 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 - Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_30 + (-Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 - Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_31 + (-Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 - Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_32 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 + Ch3A1_33 * Ch3A2_33)*Pt3_33 + (+Ch4A1_30 * Ch4A2_03 - Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_00 + (+Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 + Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_01 + (-Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 - Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_02 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 - Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_03 + (+Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 - Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_10 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 - Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_11 + (-Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_12 + (-Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 - Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_13 + (-Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 + Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_20 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 - Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_21 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 - Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_22 + (-Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 - Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_23 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 - Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_30 + (+Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 - Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_31 + (+Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 - Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_32 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 + Ch4A1_33 * Ch4A2_33)*Pt4_33) / (2 * pi), DG_vec, 1, 3, 3, R, ns, nt, nu);
}

//Compute t-channel terms for specified frequency and site arguments of the vertex function
void tChannel2(double DG_vec[], int ns, int nt, int nu, double wpr, double BubbleR0R0[], double BubbleR1R1[], double BubbleR2R2[], Rvec R, const double G_vec[]) {
    //double s = wp_vec[ns], t = wp_vec[nt], u = usign*wp_vec[nu];
    double s = wp_vec[ns], t = wp_vec[nt], u = dsign(nu)*wp_vec[abs(nu)];
    double w1p = 0.5*(s + t + u), w2p = 0.5*(s - t - u), w1 = 0.5*(s - t + u), w2 = 0.5*(s + t - u);
    pairWeight pw_1a = findPw(+w1p + wpr), pw_1b = findPw(w1 - wpr), pw_2a = findPw(+w2 + wpr), pw_2b = findPw(-w2p + wpr);
    Rvec R1j, Rj2;
    list<Rvec>::iterator  itj;
    int Rf = getRfSublattice(R);
    double Ch2A[32];

    double Pt00[Nsl] = { BubbleR0R0[0],BubbleR1R1[0],BubbleR2R2[0] };
    double Pt01[Nsl] = { BubbleR0R0[4 * 0 + 1],BubbleR1R1[4 * 0 + 1],BubbleR2R2[4 * 0 + 1] };
    double Pt02[Nsl] = { BubbleR0R0[4 * 0 + 2],BubbleR1R1[4 * 0 + 2],BubbleR2R2[4 * 0 + 2] };
    double Pt03[Nsl] = { BubbleR0R0[4 * 0 + 3],BubbleR1R1[4 * 0 + 3],BubbleR2R2[4 * 0 + 3] };
    double Pt10[Nsl] = { BubbleR0R0[4 * 1 + 0],BubbleR1R1[4 * 1 + 0],BubbleR2R2[4 * 1 + 0] };
    double Pt11[Nsl] = { BubbleR0R0[4 * 1 + 1],BubbleR1R1[4 * 1 + 1],BubbleR2R2[4 * 1 + 1] };
    double Pt12[Nsl] = { BubbleR0R0[4 * 1 + 2],BubbleR1R1[4 * 1 + 2],BubbleR2R2[4 * 1 + 2] };
    double Pt13[Nsl] = { BubbleR0R0[4 * 1 + 3],BubbleR1R1[4 * 1 + 3],BubbleR2R2[4 * 1 + 3] };
    double Pt20[Nsl] = { BubbleR0R0[4 * 2 + 0],BubbleR1R1[4 * 2 + 0],BubbleR2R2[4 * 2 + 0] };
    double Pt21[Nsl] = { BubbleR0R0[4 * 2 + 1],BubbleR1R1[4 * 2 + 1],BubbleR2R2[4 * 2 + 1] };
    double Pt22[Nsl] = { BubbleR0R0[4 * 2 + 2],BubbleR1R1[4 * 2 + 2],BubbleR2R2[4 * 2 + 2] };
    double Pt23[Nsl] = { BubbleR0R0[4 * 2 + 3],BubbleR1R1[4 * 2 + 3],BubbleR2R2[4 * 2 + 3] };
    double Pt30[Nsl] = { BubbleR0R0[4 * 3 + 0],BubbleR1R1[4 * 3 + 0],BubbleR2R2[4 * 3 + 0] };
    double Pt31[Nsl] = { BubbleR0R0[4 * 3 + 1],BubbleR1R1[4 * 3 + 1],BubbleR2R2[4 * 3 + 1] };
    double Pt32[Nsl] = { BubbleR0R0[4 * 3 + 2],BubbleR1R1[4 * 3 + 2],BubbleR2R2[4 * 3 + 2] };
    double Pt33[Nsl] = { BubbleR0R0[4 * 3 + 3],BubbleR1R1[4 * 3 + 3],BubbleR2R2[4 * 3 + 3] };

    double Pt[Nsl][16] = { {BubbleR0R0[0],BubbleR0R0[1],
                            BubbleR0R0[2],
                            BubbleR0R0[3],
                            BubbleR0R0[4],
                            BubbleR0R0[5],
                            BubbleR0R0[6],
                            BubbleR0R0[7],
                            BubbleR0R0[8],
                            BubbleR0R0[9],
                            BubbleR0R0[10],
                            BubbleR0R0[11],
                            BubbleR0R0[12],
                            BubbleR0R0[13],
                            BubbleR0R0[14],
                            BubbleR0R0[15]},
                           {BubbleR1R1[0],BubbleR1R1[1],
                            BubbleR1R1[2],
                            BubbleR1R1[3],
                            BubbleR1R1[4],
                            BubbleR1R1[5],
                            BubbleR1R1[6],
                            BubbleR1R1[7],
                            BubbleR1R1[8],
                            BubbleR1R1[9],
                            BubbleR1R1[10],
                            BubbleR1R1[11],
                            BubbleR1R1[12],
                            BubbleR1R1[13],
                            BubbleR1R1[14],
                            BubbleR1R1[15]},
                           {BubbleR2R2[0],BubbleR2R2[1],
                            BubbleR2R2[2],
                            BubbleR2R2[3],
                            BubbleR2R2[4],
                            BubbleR2R2[5],
                            BubbleR2R2[6],
                            BubbleR2R2[7],
                            BubbleR2R2[8],
                            BubbleR2R2[9],
                            BubbleR2R2[10],
                            BubbleR2R2[11],
                            BubbleR2R2[12],
                            BubbleR2R2[13],
                            BubbleR2R2[14],
                            BubbleR2R2[15]} };


    double Pt3_00 = Pt00[Rf];
    double Pt3_01 = Pt01[Rf];
    double Pt3_02 = Pt02[Rf];
    double Pt3_03 = Pt03[Rf];
    double Pt3_10 = Pt10[Rf];
    double Pt3_11 = Pt11[Rf];
    double Pt3_12 = Pt12[Rf];
    double Pt3_13 = Pt13[Rf];
    double Pt3_20 = Pt20[Rf];
    double Pt3_21 = Pt21[Rf];
    double Pt3_22 = Pt22[Rf];
    double Pt3_23 = Pt23[Rf];
    double Pt3_30 = Pt30[Rf];
    double Pt3_31 = Pt31[Rf];
    double Pt3_32 = Pt32[Rf];
    double Pt3_33 = Pt33[Rf];

    double Pt4_00 = Pt00[R.i];
    double Pt4_01 = Pt01[R.i];
    double Pt4_02 = Pt02[R.i];
    double Pt4_03 = Pt03[R.i];
    double Pt4_10 = Pt10[R.i];
    double Pt4_11 = Pt11[R.i];
    double Pt4_12 = Pt12[R.i];
    double Pt4_13 = Pt13[R.i];
    double Pt4_20 = Pt20[R.i];
    double Pt4_21 = Pt21[R.i];
    double Pt4_22 = Pt22[R.i];
    double Pt4_23 = Pt23[R.i];
    double Pt4_30 = Pt30[R.i];
    double Pt4_31 = Pt31[R.i];
    double Pt4_32 = Pt32[R.i];
    double Pt4_33 = Pt33[R.i];


    const int vertexProductSize = Nsl * 16 * 16;
    const int shift = 16 * 16;
    const int shift2 = 2*shift;
    double vertexProduct[vertexProductSize];
    fill(vertexProduct, vertexProduct + vertexProductSize, 0.);

    //RPA Channel
    list<Rvec> O_RPA;
    if (R.i == 0) {
        O_RPA = Oi0;
    }
    else if (R.i == 1) {
        O_RPA = Oi1;
    }
    else {
        O_RPA = Oi2;
    }
    for (itj = O_RPA.begin(); itj != O_RPA.end(); ++itj) {
        R1j = *itj;
        Rvec Rj2 = { getRfSublattice(R1j),R.a1 - R1j.a1, R.a2 - R1j.a2 };

        if (inO(Rj2)) {
            //Get vertices
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 4; b++) {
                    Ch2A[4 * a + b] = getIntpolG(G_vec, 1, a, b, R1j, pw_1a, nt, pw_1b);
                }
            }
            for (int c = 0; c < 4; c++) {
                for (int d = 0; d < 4; d++) {
                    Ch2A[16 + 4 * c + d] = getIntpolG(G_vec, 1, c, d, Rj2, pw_2a, nt, pw_2b);
                }
            }
            for (int a = 0; a < 16; a++) {
                for (int c = 0; c < 16; c++) {
                    vertexProduct[shift*Rj2.i + 16 * a + c] += Ch2A[a] * Ch2A[16 + c];
                }
            }
        }
    }

    //Pt are propagator bubbles, vertexProduct contains vertex products (the following lines are generated by another program)
    double t00i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[0] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[4] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[8] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[12] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[16] + (-Pt[0][0] + Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[20] + (+Pt[0][3] + Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[24] + (-Pt[0][2] + Pt[0][7] + Pt[0][8] + Pt[0][13])*vertexProduct[28] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[32] + (-Pt[0][3] + Pt[0][6] + Pt[0][9] + Pt[0][12])*vertexProduct[36] + (-Pt[0][0] - Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[40] + (+Pt[0][1] - Pt[0][4] + Pt[0][11] + Pt[0][14])*vertexProduct[44] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[48] + (+Pt[0][2] + Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[52] + (-Pt[0][1] + Pt[0][4] + Pt[0][11] + Pt[0][14])*vertexProduct[56] + (-Pt[0][0] - Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[60];
    double t01i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[1] + (+Pt[0][1] + Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[5] + (+Pt[0][2] - Pt[0][7] + Pt[0][8] + Pt[0][13])*vertexProduct[9] + (+Pt[0][3] + Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[13] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[17] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[21] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[25] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[29] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[33] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[37] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[41] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[45] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[49] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[53] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[57] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[61];
    double t02i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[2] + (+Pt[0][1] + Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[6] + (+Pt[0][2] - Pt[0][7] + Pt[0][8] + Pt[0][13])*vertexProduct[10] + (+Pt[0][3] + Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[14] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[18] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[22] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[26] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[30] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[34] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[38] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[42] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[46] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[50] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[54] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[58] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[62];
    double t03i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[3] + (+Pt[0][1] + Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[7] + (+Pt[0][2] - Pt[0][7] + Pt[0][8] + Pt[0][13])*vertexProduct[11] + (+Pt[0][3] + Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[15] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[19] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[23] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[27] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[31] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[35] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[39] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[43] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[47] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[51] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[55] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[59] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[63];
    double t10i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[64] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[68] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[72] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[76] + (+Pt[0][1] + Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[80] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[84] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[88] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[92] + (+Pt[0][2] + Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[96] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[100] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[104] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[108] + (+Pt[0][3] - Pt[0][6] + Pt[0][9] + Pt[0][12])*vertexProduct[112] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[116] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[120] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[124];
    double t11i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[65] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[69] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[73] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[77] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[81] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[85] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[89] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[93] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[97] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[101] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[105] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[109] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[113] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[117] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[121] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[125];
    double t12i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[66] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[70] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[74] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[78] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[82] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[86] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[90] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[94] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[98] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[102] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[106] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[110] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[114] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[118] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[122] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[126];
    double t13i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[67] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[71] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[75] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[79] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[83] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[87] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[91] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[95] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[99] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[103] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[107] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[111] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[115] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[119] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[123] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[127];
    double t20i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[128] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[132] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[136] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[140] + (+Pt[0][1] + Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[144] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[148] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[152] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[156] + (+Pt[0][2] + Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[160] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[164] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[168] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[172] + (+Pt[0][3] - Pt[0][6] + Pt[0][9] + Pt[0][12])*vertexProduct[176] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[180] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[184] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[188];
    double t21i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[129] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[133] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[137] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[141] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[145] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[149] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[153] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[157] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[161] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[165] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[169] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[173] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[177] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[181] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[185] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[189];
    double t22i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[130] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[134] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[138] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[142] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[146] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[150] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[154] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[158] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[162] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[166] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[170] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[174] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[178] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[182] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[186] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[190];
    double t23i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[131] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[135] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[139] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[143] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[147] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[151] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[155] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[159] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[163] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[167] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[171] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[175] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[179] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[183] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[187] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[191];
    double t30i0 = +(+Pt[0][0] - Pt[0][5] - Pt[0][10] - Pt[0][15])*vertexProduct[192] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[196] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[200] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[204] + (+Pt[0][1] + Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[208] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[212] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[216] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[220] + (+Pt[0][2] + Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[224] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[228] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[232] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[236] + (+Pt[0][3] - Pt[0][6] + Pt[0][9] + Pt[0][12])*vertexProduct[240] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[244] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[248] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[252];
    double t31i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[193] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[197] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[201] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[205] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[209] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[213] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[217] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[221] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[225] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[229] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[233] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[237] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[241] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[245] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[249] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[253];
    double t32i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[194] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[198] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[202] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[206] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[210] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[214] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[218] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[222] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[226] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[230] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[234] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[238] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[242] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[246] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[250] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[254];
    double t33i0 = +(-Pt[0][0] + Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[195] + (-Pt[0][1] - Pt[0][4] - Pt[0][11] + Pt[0][14])*vertexProduct[199] + (-Pt[0][2] + Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[203] + (-Pt[0][3] - Pt[0][6] + Pt[0][9] - Pt[0][12])*vertexProduct[207] + (-Pt[0][1] - Pt[0][4] + Pt[0][11] - Pt[0][14])*vertexProduct[211] + (+Pt[0][0] - Pt[0][5] + Pt[0][10] + Pt[0][15])*vertexProduct[215] + (-Pt[0][3] - Pt[0][6] - Pt[0][9] + Pt[0][12])*vertexProduct[219] + (+Pt[0][2] - Pt[0][7] - Pt[0][8] - Pt[0][13])*vertexProduct[223] + (-Pt[0][2] - Pt[0][7] - Pt[0][8] + Pt[0][13])*vertexProduct[227] + (+Pt[0][3] - Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[231] + (+Pt[0][0] + Pt[0][5] - Pt[0][10] + Pt[0][15])*vertexProduct[235] + (-Pt[0][1] + Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[239] + (-Pt[0][3] + Pt[0][6] - Pt[0][9] - Pt[0][12])*vertexProduct[243] + (-Pt[0][2] - Pt[0][7] + Pt[0][8] - Pt[0][13])*vertexProduct[247] + (+Pt[0][1] - Pt[0][4] - Pt[0][11] - Pt[0][14])*vertexProduct[251] + (+Pt[0][0] + Pt[0][5] + Pt[0][10] - Pt[0][15])*vertexProduct[255];

    double t00i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 0] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 4] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 8] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 12] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 16] + (-Pt[1][0] + Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 20] + (+Pt[1][3] + Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 24] + (-Pt[1][2] + Pt[1][7] + Pt[1][8] + Pt[1][13])*vertexProduct[shift + 28] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 32] + (-Pt[1][3] + Pt[1][6] + Pt[1][9] + Pt[1][12])*vertexProduct[shift + 36] + (-Pt[1][0] - Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 40] + (+Pt[1][1] - Pt[1][4] + Pt[1][11] + Pt[1][14])*vertexProduct[shift + 44] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 48] + (+Pt[1][2] + Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 52] + (-Pt[1][1] + Pt[1][4] + Pt[1][11] + Pt[1][14])*vertexProduct[shift + 56] + (-Pt[1][0] - Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 60];
    double t01i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 1] + (+Pt[1][1] + Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 5] + (+Pt[1][2] - Pt[1][7] + Pt[1][8] + Pt[1][13])*vertexProduct[shift + 9] + (+Pt[1][3] + Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 13] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 17] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 21] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 25] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 29] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 33] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 37] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 41] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 45] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 49] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 53] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 57] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 61];
    double t02i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 2] + (+Pt[1][1] + Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 6] + (+Pt[1][2] - Pt[1][7] + Pt[1][8] + Pt[1][13])*vertexProduct[shift + 10] + (+Pt[1][3] + Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 14] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 18] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 22] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 26] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 30] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 34] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 38] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 42] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 46] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 50] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 54] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 58] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 62];
    double t03i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 3] + (+Pt[1][1] + Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 7] + (+Pt[1][2] - Pt[1][7] + Pt[1][8] + Pt[1][13])*vertexProduct[shift + 11] + (+Pt[1][3] + Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 15] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 19] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 23] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 27] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 31] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 35] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 39] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 43] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 47] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 51] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 55] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 59] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 63];
    double t10i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 64] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 68] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 72] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 76] + (+Pt[1][1] + Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 80] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 84] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 88] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 92] + (+Pt[1][2] + Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 96] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 100] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 104] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 108] + (+Pt[1][3] - Pt[1][6] + Pt[1][9] + Pt[1][12])*vertexProduct[shift + 112] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 116] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 120] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 124];
    double t11i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 65] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 69] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 73] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 77] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 81] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 85] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 89] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 93] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 97] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 101] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 105] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 109] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 113] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 117] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 121] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 125];
    double t12i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 66] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 70] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 74] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 78] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 82] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 86] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 90] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 94] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 98] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 102] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 106] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 110] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 114] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 118] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 122] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 126];
    double t13i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 67] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 71] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 75] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 79] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 83] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 87] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 91] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 95] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 99] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 103] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 107] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 111] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 115] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 119] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 123] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 127];
    double t20i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 128] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 132] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 136] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 140] + (+Pt[1][1] + Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 144] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 148] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 152] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 156] + (+Pt[1][2] + Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 160] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 164] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 168] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 172] + (+Pt[1][3] - Pt[1][6] + Pt[1][9] + Pt[1][12])*vertexProduct[shift + 176] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 180] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 184] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 188];
    double t21i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 129] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 133] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 137] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 141] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 145] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 149] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 153] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 157] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 161] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 165] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 169] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 173] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 177] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 181] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 185] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 189];
    double t22i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 130] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 134] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 138] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 142] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 146] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 150] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 154] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 158] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 162] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 166] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 170] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 174] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 178] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 182] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 186] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 190];
    double t23i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 131] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 135] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 139] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 143] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 147] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 151] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 155] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 159] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 163] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 167] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 171] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 175] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 179] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 183] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 187] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 191];
    double t30i1 = +(+Pt[1][0] - Pt[1][5] - Pt[1][10] - Pt[1][15])*vertexProduct[shift + 192] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 196] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 200] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 204] + (+Pt[1][1] + Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 208] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 212] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 216] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 220] + (+Pt[1][2] + Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 224] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 228] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 232] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 236] + (+Pt[1][3] - Pt[1][6] + Pt[1][9] + Pt[1][12])*vertexProduct[shift + 240] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 244] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 248] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 252];
    double t31i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 193] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 197] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 201] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 205] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 209] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 213] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 217] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 221] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 225] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 229] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 233] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 237] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 241] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 245] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 249] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 253];
    double t32i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 194] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 198] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 202] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 206] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 210] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 214] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 218] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 222] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 226] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 230] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 234] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 238] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 242] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 246] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 250] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 254];
    double t33i1 = +(-Pt[1][0] + Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 195] + (-Pt[1][1] - Pt[1][4] - Pt[1][11] + Pt[1][14])*vertexProduct[shift + 199] + (-Pt[1][2] + Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 203] + (-Pt[1][3] - Pt[1][6] + Pt[1][9] - Pt[1][12])*vertexProduct[shift + 207] + (-Pt[1][1] - Pt[1][4] + Pt[1][11] - Pt[1][14])*vertexProduct[shift + 211] + (+Pt[1][0] - Pt[1][5] + Pt[1][10] + Pt[1][15])*vertexProduct[shift + 215] + (-Pt[1][3] - Pt[1][6] - Pt[1][9] + Pt[1][12])*vertexProduct[shift + 219] + (+Pt[1][2] - Pt[1][7] - Pt[1][8] - Pt[1][13])*vertexProduct[shift + 223] + (-Pt[1][2] - Pt[1][7] - Pt[1][8] + Pt[1][13])*vertexProduct[shift + 227] + (+Pt[1][3] - Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 231] + (+Pt[1][0] + Pt[1][5] - Pt[1][10] + Pt[1][15])*vertexProduct[shift + 235] + (-Pt[1][1] + Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 239] + (-Pt[1][3] + Pt[1][6] - Pt[1][9] - Pt[1][12])*vertexProduct[shift + 243] + (-Pt[1][2] - Pt[1][7] + Pt[1][8] - Pt[1][13])*vertexProduct[shift + 247] + (+Pt[1][1] - Pt[1][4] - Pt[1][11] - Pt[1][14])*vertexProduct[shift + 251] + (+Pt[1][0] + Pt[1][5] + Pt[1][10] - Pt[1][15])*vertexProduct[shift + 255];

    double t00i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 0] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 4] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 8] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 12] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 16] + (-Pt[2][0] + Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 20] + (+Pt[2][3] + Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 24] + (-Pt[2][2] + Pt[2][7] + Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 28] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 32] + (-Pt[2][3] + Pt[2][6] + Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 36] + (-Pt[2][0] - Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 40] + (+Pt[2][1] - Pt[2][4] + Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 44] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 48] + (+Pt[2][2] + Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 52] + (-Pt[2][1] + Pt[2][4] + Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 56] + (-Pt[2][0] - Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 60];
    double t01i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 1] + (+Pt[2][1] + Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 5] + (+Pt[2][2] - Pt[2][7] + Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 9] + (+Pt[2][3] + Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 13] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 17] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 21] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 25] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 29] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 33] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 37] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 41] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 45] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 49] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 53] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 57] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 61];
    double t02i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 2] + (+Pt[2][1] + Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 6] + (+Pt[2][2] - Pt[2][7] + Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 10] + (+Pt[2][3] + Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 14] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 18] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 22] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 26] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 30] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 34] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 38] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 42] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 46] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 50] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 54] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 58] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 62];
    double t03i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 3] + (+Pt[2][1] + Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 7] + (+Pt[2][2] - Pt[2][7] + Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 11] + (+Pt[2][3] + Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 15] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 19] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 23] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 27] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 31] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 35] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 39] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 43] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 47] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 51] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 55] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 59] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 63];
    double t10i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 64] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 68] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 72] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 76] + (+Pt[2][1] + Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 80] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 84] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 88] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 92] + (+Pt[2][2] + Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 96] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 100] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 104] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 108] + (+Pt[2][3] - Pt[2][6] + Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 112] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 116] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 120] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 124];
    double t11i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 65] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 69] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 73] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 77] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 81] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 85] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 89] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 93] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 97] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 101] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 105] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 109] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 113] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 117] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 121] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 125];
    double t12i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 66] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 70] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 74] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 78] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 82] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 86] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 90] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 94] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 98] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 102] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 106] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 110] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 114] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 118] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 122] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 126];
    double t13i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 67] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 71] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 75] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 79] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 83] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 87] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 91] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 95] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 99] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 103] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 107] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 111] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 115] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 119] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 123] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 127];
    double t20i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 128] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 132] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 136] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 140] + (+Pt[2][1] + Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 144] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 148] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 152] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 156] + (+Pt[2][2] + Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 160] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 164] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 168] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 172] + (+Pt[2][3] - Pt[2][6] + Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 176] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 180] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 184] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 188];
    double t21i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 129] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 133] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 137] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 141] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 145] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 149] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 153] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 157] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 161] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 165] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 169] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 173] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 177] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 181] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 185] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 189];
    double t22i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 130] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 134] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 138] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 142] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 146] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 150] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 154] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 158] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 162] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 166] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 170] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 174] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 178] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 182] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 186] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 190];
    double t23i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 131] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 135] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 139] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 143] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 147] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 151] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 155] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 159] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 163] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 167] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 171] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 175] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 179] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 183] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 187] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 191];
    double t30i2 = +(+Pt[2][0] - Pt[2][5] - Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 192] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 196] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 200] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 204] + (+Pt[2][1] + Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 208] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 212] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 216] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 220] + (+Pt[2][2] + Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 224] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 228] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 232] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 236] + (+Pt[2][3] - Pt[2][6] + Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 240] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 244] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 248] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 252];
    double t31i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 193] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 197] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 201] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 205] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 209] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 213] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 217] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 221] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 225] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 229] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 233] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 237] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 241] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 245] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 249] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 253];
    double t32i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 194] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 198] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 202] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 206] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 210] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 214] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 218] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 222] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 226] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 230] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 234] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 238] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 242] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 246] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 250] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 254];
    double t33i2 = +(-Pt[2][0] + Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 195] + (-Pt[2][1] - Pt[2][4] - Pt[2][11] + Pt[2][14])*vertexProduct[shift2 + 199] + (-Pt[2][2] + Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 203] + (-Pt[2][3] - Pt[2][6] + Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 207] + (-Pt[2][1] - Pt[2][4] + Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 211] + (+Pt[2][0] - Pt[2][5] + Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 215] + (-Pt[2][3] - Pt[2][6] - Pt[2][9] + Pt[2][12])*vertexProduct[shift2 + 219] + (+Pt[2][2] - Pt[2][7] - Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 223] + (-Pt[2][2] - Pt[2][7] - Pt[2][8] + Pt[2][13])*vertexProduct[shift2 + 227] + (+Pt[2][3] - Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 231] + (+Pt[2][0] + Pt[2][5] - Pt[2][10] + Pt[2][15])*vertexProduct[shift2 + 235] + (-Pt[2][1] + Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 239] + (-Pt[2][3] + Pt[2][6] - Pt[2][9] - Pt[2][12])*vertexProduct[shift2 + 243] + (-Pt[2][2] - Pt[2][7] + Pt[2][8] - Pt[2][13])*vertexProduct[shift2 + 247] + (+Pt[2][1] - Pt[2][4] - Pt[2][11] - Pt[2][14])*vertexProduct[shift2 + 251] + (+Pt[2][0] + Pt[2][5] + Pt[2][10] - Pt[2][15])*vertexProduct[shift2 + 255];


    double t00 = t00i0 + t00i1 + t00i2;
    double t01 = t01i0 + t01i1 + t01i2;
    double t02 = t02i0 + t02i1 + t02i2;
    double t03 = t03i0 + t03i1 + t03i2;
    double t10 = t10i0 + t10i1 + t10i2;
    double t11 = t11i0 + t11i1 + t11i2;
    double t12 = t12i0 + t12i1 + t12i2;
    double t13 = t13i0 + t13i1 + t13i2;
    double t20 = t20i0 + t20i1 + t20i2;
    double t21 = t21i0 + t21i1 + t21i2;
    double t22 = t22i0 + t22i1 + t22i2;
    double t23 = t23i0 + t23i1 + t23i2;
    double t30 = t30i0 + t30i1 + t30i2;
    double t31 = t31i0 + t31i1 + t31i2;
    double t32 = t32i0 + t32i1 + t32i2;
    double t33 = t33i0 + t33i1 + t33i2;

    Rvec R0i = { R.i,0,0 };
    Rvec R0f = { Rf,0,0 };
    //Vertices of the particle-hole Channels
    double Ch3A1_00 = getIntpolG(G_vec, 1, 0, 0, R, pw_1a, nt, pw_1b);
    double Ch3A1_01 = getIntpolG(G_vec, 1, 0, 1, R, pw_1a, nt, pw_1b);
    double Ch3A1_02 = getIntpolG(G_vec, 1, 0, 2, R, pw_1a, nt, pw_1b);
    double Ch3A1_03 = getIntpolG(G_vec, 1, 0, 3, R, pw_1a, nt, pw_1b);
    double Ch3A1_10 = getIntpolG(G_vec, 1, 1, 0, R, pw_1a, nt, pw_1b);
    double Ch3A1_11 = getIntpolG(G_vec, 1, 1, 1, R, pw_1a, nt, pw_1b);
    double Ch3A1_12 = getIntpolG(G_vec, 1, 1, 2, R, pw_1a, nt, pw_1b);
    double Ch3A1_13 = getIntpolG(G_vec, 1, 1, 3, R, pw_1a, nt, pw_1b);
    double Ch3A1_20 = getIntpolG(G_vec, 1, 2, 0, R, pw_1a, nt, pw_1b);
    double Ch3A1_21 = getIntpolG(G_vec, 1, 2, 1, R, pw_1a, nt, pw_1b);
    double Ch3A1_22 = getIntpolG(G_vec, 1, 2, 2, R, pw_1a, nt, pw_1b);
    double Ch3A1_23 = getIntpolG(G_vec, 1, 2, 3, R, pw_1a, nt, pw_1b);
    double Ch3A1_30 = getIntpolG(G_vec, 1, 3, 0, R, pw_1a, nt, pw_1b);
    double Ch3A1_31 = getIntpolG(G_vec, 1, 3, 1, R, pw_1a, nt, pw_1b);
    double Ch3A1_32 = getIntpolG(G_vec, 1, 3, 2, R, pw_1a, nt, pw_1b);
    double Ch3A1_33 = getIntpolG(G_vec, 1, 3, 3, R, pw_1a, nt, pw_1b);

    double Ch3A2_00 = getIntpolG(G_vec, 1, 0, 0, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_01 = getIntpolG(G_vec, 1, 0, 1, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_02 = getIntpolG(G_vec, 1, 0, 2, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_03 = getIntpolG(G_vec, 1, 0, 3, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_10 = getIntpolG(G_vec, 1, 1, 0, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_11 = getIntpolG(G_vec, 1, 1, 1, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_12 = getIntpolG(G_vec, 1, 1, 2, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_13 = getIntpolG(G_vec, 1, 1, 3, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_20 = getIntpolG(G_vec, 1, 2, 0, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_21 = getIntpolG(G_vec, 1, 2, 1, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_22 = getIntpolG(G_vec, 1, 2, 2, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_23 = getIntpolG(G_vec, 1, 2, 3, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_30 = getIntpolG(G_vec, 1, 3, 0, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_31 = getIntpolG(G_vec, 1, 3, 1, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_32 = getIntpolG(G_vec, 1, 3, 2, R0f, pw_2a, pw_2b, nt);
    double Ch3A2_33 = getIntpolG(G_vec, 1, 3, 3, R0f, pw_2a, pw_2b, nt);

    double Ch4A1_00 = getIntpolG(G_vec, 1, 0, 0, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_01 = getIntpolG(G_vec, 1, 0, 1, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_02 = getIntpolG(G_vec, 1, 0, 2, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_03 = getIntpolG(G_vec, 1, 0, 3, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_10 = getIntpolG(G_vec, 1, 1, 0, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_11 = getIntpolG(G_vec, 1, 1, 1, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_12 = getIntpolG(G_vec, 1, 1, 2, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_13 = getIntpolG(G_vec, 1, 1, 3, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_20 = getIntpolG(G_vec, 1, 2, 0, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_21 = getIntpolG(G_vec, 1, 2, 1, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_22 = getIntpolG(G_vec, 1, 2, 2, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_23 = getIntpolG(G_vec, 1, 2, 3, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_30 = getIntpolG(G_vec, 1, 3, 0, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_31 = getIntpolG(G_vec, 1, 3, 1, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_32 = getIntpolG(G_vec, 1, 3, 2, R0i, pw_1a, pw_1b, nt);
    double Ch4A1_33 = getIntpolG(G_vec, 1, 3, 3, R0i, pw_1a, pw_1b, nt);

    double Ch4A2_00 = getIntpolG(G_vec, 1, 0, 0, R, pw_2a, nt, pw_2b);
    double Ch4A2_01 = getIntpolG(G_vec, 1, 0, 1, R, pw_2a, nt, pw_2b);
    double Ch4A2_02 = getIntpolG(G_vec, 1, 0, 2, R, pw_2a, nt, pw_2b);
    double Ch4A2_03 = getIntpolG(G_vec, 1, 0, 3, R, pw_2a, nt, pw_2b);
    double Ch4A2_10 = getIntpolG(G_vec, 1, 1, 0, R, pw_2a, nt, pw_2b);
    double Ch4A2_11 = getIntpolG(G_vec, 1, 1, 1, R, pw_2a, nt, pw_2b);
    double Ch4A2_12 = getIntpolG(G_vec, 1, 1, 2, R, pw_2a, nt, pw_2b);
    double Ch4A2_13 = getIntpolG(G_vec, 1, 1, 3, R, pw_2a, nt, pw_2b);
    double Ch4A2_20 = getIntpolG(G_vec, 1, 2, 0, R, pw_2a, nt, pw_2b);
    double Ch4A2_21 = getIntpolG(G_vec, 1, 2, 1, R, pw_2a, nt, pw_2b);
    double Ch4A2_22 = getIntpolG(G_vec, 1, 2, 2, R, pw_2a, nt, pw_2b);
    double Ch4A2_23 = getIntpolG(G_vec, 1, 2, 3, R, pw_2a, nt, pw_2b);
    double Ch4A2_30 = getIntpolG(G_vec, 1, 3, 0, R, pw_2a, nt, pw_2b);
    double Ch4A2_31 = getIntpolG(G_vec, 1, 3, 1, R, pw_2a, nt, pw_2b);
    double Ch4A2_32 = getIntpolG(G_vec, 1, 3, 2, R, pw_2a, nt, pw_2b);
    double Ch4A2_33 = getIntpolG(G_vec, 1, 3, 3, R, pw_2a, nt, pw_2b);


    addG((2 * t00 + (-Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_00 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_01 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_02 + (+Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_03 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_10 + (+Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_11 + (+Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_12 + (-Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_13 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_20 + (-Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_21 + (+Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_22 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_23 + (+Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_30 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_31 + (-Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_32 + (+Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_33 + (-Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_00 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_01 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_02 + (+Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_03 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_10 + (+Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_11 + (-Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_12 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_13 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_20 + (+Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_21 + (+Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_22 + (-Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_23 + (+Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_30 + (-Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_31 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_32 + (+Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_33) / (2 * pi), DG_vec, 1, 0, 0, R, ns, nt, nu);
    addG((2 * t01 + (-Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_00 + (-Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_01 + (-Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_02 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_03 + (-Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_10 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_11 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_12 + (+Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_13 + (-Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_20 + (-Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_21 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_22 + (-Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_23 + (+Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_30 + (-Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_31 + (+Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_32 + (+Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_33 + (-Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_00 + (+Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 - Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_01 + (+Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 - Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_02 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 - Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_03 + (+Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 - Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_10 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 - Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_11 + (-Ch4A1_30 * Ch4A2_01 - Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_12 + (+Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 + Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_13 + (+Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 - Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_20 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 + Ch4A1_33 * Ch4A2_31)*Pt4_21 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 - Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_22 + (-Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 - Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_23 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 - Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_30 + (-Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 - Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_31 + (+Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 + Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_32 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 - Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_33) / (2 * pi), DG_vec, 1, 0, 1, R, ns, nt, nu);
    addG((2 * t02 + (-Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_00 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_01 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_02 + (-Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_03 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_10 + (+Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_11 + (-Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_12 + (+Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_13 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_20 + (+Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_21 + (+Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_22 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_23 + (-Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_30 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_31 + (-Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_32 + (+Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_33 + (-Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_00 + (+Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 - Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_01 + (+Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 - Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_02 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 - Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_03 + (+Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 - Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_10 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 - Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_11 + (-Ch4A1_30 * Ch4A2_02 - Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_12 + (+Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 + Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_13 + (+Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 - Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_20 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 + Ch4A1_33 * Ch4A2_32)*Pt4_21 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 - Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_22 + (-Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 - Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_23 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 - Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_30 + (-Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 - Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_31 + (+Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 + Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_32 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 - Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_33) / (2 * pi), DG_vec, 1, 0, 2, R, ns, nt, nu);
    addG((2 * t03 + (-Ch3A1_00 * Ch3A2_03 + Ch3A1_00 * Ch3A2_12 - Ch3A1_00 * Ch3A2_21 - Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_00 + (-Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 + Ch3A1_03 * Ch3A2_01 - Ch3A1_03 * Ch3A2_10 - Ch3A1_03 * Ch3A2_23 - Ch3A1_03 * Ch3A2_32)*Pt3_01 + (+Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 - Ch3A1_01 * Ch3A2_00 + Ch3A1_01 * Ch3A2_11 + Ch3A1_01 * Ch3A2_22 - Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_02 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 - Ch3A1_02 * Ch3A2_02 - Ch3A1_02 * Ch3A2_13 + Ch3A1_02 * Ch3A2_20 - Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_03 + (-Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 - Ch3A1_02 * Ch3A2_00 + Ch3A1_02 * Ch3A2_11 + Ch3A1_02 * Ch3A2_22 - Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_10 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 + Ch3A1_01 * Ch3A2_02 + Ch3A1_01 * Ch3A2_13 - Ch3A1_01 * Ch3A2_20 + Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_11 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 - Ch3A1_03 * Ch3A2_03 + Ch3A1_03 * Ch3A2_12 - Ch3A1_03 * Ch3A2_21 - Ch3A1_03 * Ch3A2_30)*Pt3_12 + (-Ch3A1_00 * Ch3A2_01 + Ch3A1_00 * Ch3A2_10 + Ch3A1_00 * Ch3A2_23 + Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_13 + (+Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 + Ch3A1_02 * Ch3A2_03 - Ch3A1_02 * Ch3A2_12 + Ch3A1_02 * Ch3A2_21 + Ch3A1_02 * Ch3A2_30 - Ch3A1_03 * Ch3A2_02 - Ch3A1_03 * Ch3A2_13 + Ch3A1_03 * Ch3A2_20 - Ch3A1_03 * Ch3A2_31)*Pt3_20 + (+Ch3A1_00 * Ch3A2_00 - Ch3A1_00 * Ch3A2_11 - Ch3A1_00 * Ch3A2_22 + Ch3A1_00 * Ch3A2_33 - Ch3A1_01 * Ch3A2_01 + Ch3A1_01 * Ch3A2_10 + Ch3A1_01 * Ch3A2_23 + Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_21 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 - Ch3A1_02 * Ch3A2_01 + Ch3A1_02 * Ch3A2_10 + Ch3A1_02 * Ch3A2_23 + Ch3A1_02 * Ch3A2_32 - Ch3A1_03 * Ch3A2_00 + Ch3A1_03 * Ch3A2_11 + Ch3A1_03 * Ch3A2_22 - Ch3A1_03 * Ch3A2_33)*Pt3_22 + (-Ch3A1_00 * Ch3A2_02 - Ch3A1_00 * Ch3A2_13 + Ch3A1_00 * Ch3A2_20 - Ch3A1_00 * Ch3A2_31 - Ch3A1_01 * Ch3A2_03 + Ch3A1_01 * Ch3A2_12 - Ch3A1_01 * Ch3A2_21 - Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_23 + (-Ch3A1_00 * Ch3A2_00 + Ch3A1_00 * Ch3A2_11 + Ch3A1_00 * Ch3A2_22 - Ch3A1_00 * Ch3A2_33 + Ch3A1_01 * Ch3A2_01 - Ch3A1_01 * Ch3A2_10 - Ch3A1_01 * Ch3A2_23 - Ch3A1_01 * Ch3A2_32 + Ch3A1_02 * Ch3A2_02 + Ch3A1_02 * Ch3A2_13 - Ch3A1_02 * Ch3A2_20 + Ch3A1_02 * Ch3A2_31 + Ch3A1_03 * Ch3A2_03 - Ch3A1_03 * Ch3A2_12 + Ch3A1_03 * Ch3A2_21 + Ch3A1_03 * Ch3A2_30)*Pt3_30 + (+Ch3A1_00 * Ch3A2_01 - Ch3A1_00 * Ch3A2_10 - Ch3A1_00 * Ch3A2_23 - Ch3A1_00 * Ch3A2_32 + Ch3A1_01 * Ch3A2_00 - Ch3A1_01 * Ch3A2_11 - Ch3A1_01 * Ch3A2_22 + Ch3A1_01 * Ch3A2_33 - Ch3A1_02 * Ch3A2_03 + Ch3A1_02 * Ch3A2_12 - Ch3A1_02 * Ch3A2_21 - Ch3A1_02 * Ch3A2_30 + Ch3A1_03 * Ch3A2_02 + Ch3A1_03 * Ch3A2_13 - Ch3A1_03 * Ch3A2_20 + Ch3A1_03 * Ch3A2_31)*Pt3_31 + (+Ch3A1_00 * Ch3A2_02 + Ch3A1_00 * Ch3A2_13 - Ch3A1_00 * Ch3A2_20 + Ch3A1_00 * Ch3A2_31 + Ch3A1_01 * Ch3A2_03 - Ch3A1_01 * Ch3A2_12 + Ch3A1_01 * Ch3A2_21 + Ch3A1_01 * Ch3A2_30 + Ch3A1_02 * Ch3A2_00 - Ch3A1_02 * Ch3A2_11 - Ch3A1_02 * Ch3A2_22 + Ch3A1_02 * Ch3A2_33 - Ch3A1_03 * Ch3A2_01 + Ch3A1_03 * Ch3A2_10 + Ch3A1_03 * Ch3A2_23 + Ch3A1_03 * Ch3A2_32)*Pt3_32 + (+Ch3A1_00 * Ch3A2_03 - Ch3A1_00 * Ch3A2_12 + Ch3A1_00 * Ch3A2_21 + Ch3A1_00 * Ch3A2_30 - Ch3A1_01 * Ch3A2_02 - Ch3A1_01 * Ch3A2_13 + Ch3A1_01 * Ch3A2_20 - Ch3A1_01 * Ch3A2_31 + Ch3A1_02 * Ch3A2_01 - Ch3A1_02 * Ch3A2_10 - Ch3A1_02 * Ch3A2_23 - Ch3A1_02 * Ch3A2_32 + Ch3A1_03 * Ch3A2_00 - Ch3A1_03 * Ch3A2_11 - Ch3A1_03 * Ch3A2_22 + Ch3A1_03 * Ch3A2_33)*Pt3_33 + (-Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_00 + (+Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 - Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_01 + (+Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 - Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_02 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 - Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_03 + (+Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 - Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_10 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 - Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_11 + (-Ch4A1_30 * Ch4A2_03 - Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_12 + (+Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 + Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_13 + (+Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 - Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_20 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 + Ch4A1_33 * Ch4A2_33)*Pt4_21 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 - Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_22 + (-Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 - Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_23 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 - Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_30 + (-Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 - Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_31 + (+Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 + Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_32 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 - Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_33) / (2 * pi), DG_vec, 1, 0, 3, R, ns, nt, nu);
    addG((2 * t10 + (-Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_00 + (+Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 - Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_01 + (+Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 - Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_02 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 - Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_03 + (+Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 - Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_10 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 - Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_11 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 + Ch3A1_13 * Ch3A2_33)*Pt3_12 + (-Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 - Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_13 + (+Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 - Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_20 + (-Ch3A1_10 * Ch3A2_03 - Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_21 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 - Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_22 + (+Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 + Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_23 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 - Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_30 + (+Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 + Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_31 + (-Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 - Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_32 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 - Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_33 + (-Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_00 + (-Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_01 + (-Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_02 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_03 + (-Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_10 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_11 + (-Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_12 + (-Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_13 + (-Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_20 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_21 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_22 + (+Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_23 + (+Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_30 + (+Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_31 + (-Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_32 + (+Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_33) / (2 * pi), DG_vec, 1, 1, 0, R, ns, nt, nu);
    addG((2 * t11 + (+Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 - Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_00 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 - Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_01 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 - Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_02 + (-Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 + Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_03 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 - Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_10 + (-Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 + Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_11 + (-Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 - Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_12 + (-Ch3A1_10 * Ch3A2_03 - Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_13 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 + Ch3A1_13 * Ch3A2_33)*Pt3_20 + (+Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 - Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_21 + (-Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 - Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_22 + (+Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 - Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_23 + (-Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 - Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_30 + (+Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 - Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_31 + (-Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_32 + (-Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 - Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_33 + (+Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 - Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_00 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 - Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_01 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 + Ch4A1_33 * Ch4A2_31)*Pt4_02 + (-Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 - Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_03 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 - Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_10 + (-Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 + Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_11 + (+Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 - Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_12 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 - Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_13 + (+Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 - Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_20 + (-Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 - Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_21 + (-Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 - Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_22 + (-Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_23 + (-Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 + Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_30 + (-Ch4A1_30 * Ch4A2_01 - Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_31 + (+Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 - Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_32 + (-Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 - Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_33) / (2 * pi), DG_vec, 1, 1, 1, R, ns, nt, nu);
    addG((2 * t12 + (+Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 - Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_00 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 + Ch3A1_13 * Ch3A2_33)*Pt3_01 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 - Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_02 + (+Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 - Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_03 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 - Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_10 + (-Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 - Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_11 + (+Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 - Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_12 + (-Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_13 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 - Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_20 + (-Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 - Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_21 + (-Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 + Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_22 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 - Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_23 + (+Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 + Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_30 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 - Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_31 + (+Ch3A1_10 * Ch3A2_03 - Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_32 + (-Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 - Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_33 + (+Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 - Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_00 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 - Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_01 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 + Ch4A1_33 * Ch4A2_32)*Pt4_02 + (-Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 - Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_03 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 - Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_10 + (-Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 + Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_11 + (+Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 - Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_12 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 - Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_13 + (+Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 - Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_20 + (-Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 - Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_21 + (-Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 - Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_22 + (-Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_23 + (-Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 + Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_30 + (-Ch4A1_30 * Ch4A2_02 - Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_31 + (+Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 - Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_32 + (-Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 - Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_33) / (2 * pi), DG_vec, 1, 1, 2, R, ns, nt, nu);
    addG((2 * t13 + (+Ch3A1_10 * Ch3A2_03 - Ch3A1_10 * Ch3A2_12 + Ch3A1_10 * Ch3A2_21 + Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_00 + (+Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 + Ch3A1_13 * Ch3A2_01 - Ch3A1_13 * Ch3A2_10 - Ch3A1_13 * Ch3A2_23 - Ch3A1_13 * Ch3A2_32)*Pt3_01 + (-Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 - Ch3A1_11 * Ch3A2_00 + Ch3A1_11 * Ch3A2_11 + Ch3A1_11 * Ch3A2_22 - Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_02 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 - Ch3A1_12 * Ch3A2_02 - Ch3A1_12 * Ch3A2_13 + Ch3A1_12 * Ch3A2_20 - Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_03 + (+Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 - Ch3A1_12 * Ch3A2_00 + Ch3A1_12 * Ch3A2_11 + Ch3A1_12 * Ch3A2_22 - Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_10 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 + Ch3A1_11 * Ch3A2_02 + Ch3A1_11 * Ch3A2_13 - Ch3A1_11 * Ch3A2_20 + Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_11 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 - Ch3A1_13 * Ch3A2_03 + Ch3A1_13 * Ch3A2_12 - Ch3A1_13 * Ch3A2_21 - Ch3A1_13 * Ch3A2_30)*Pt3_12 + (+Ch3A1_10 * Ch3A2_01 - Ch3A1_10 * Ch3A2_10 - Ch3A1_10 * Ch3A2_23 - Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_13 + (-Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 + Ch3A1_12 * Ch3A2_03 - Ch3A1_12 * Ch3A2_12 + Ch3A1_12 * Ch3A2_21 + Ch3A1_12 * Ch3A2_30 - Ch3A1_13 * Ch3A2_02 - Ch3A1_13 * Ch3A2_13 + Ch3A1_13 * Ch3A2_20 - Ch3A1_13 * Ch3A2_31)*Pt3_20 + (-Ch3A1_10 * Ch3A2_00 + Ch3A1_10 * Ch3A2_11 + Ch3A1_10 * Ch3A2_22 - Ch3A1_10 * Ch3A2_33 - Ch3A1_11 * Ch3A2_01 + Ch3A1_11 * Ch3A2_10 + Ch3A1_11 * Ch3A2_23 + Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_21 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 - Ch3A1_12 * Ch3A2_01 + Ch3A1_12 * Ch3A2_10 + Ch3A1_12 * Ch3A2_23 + Ch3A1_12 * Ch3A2_32 - Ch3A1_13 * Ch3A2_00 + Ch3A1_13 * Ch3A2_11 + Ch3A1_13 * Ch3A2_22 - Ch3A1_13 * Ch3A2_33)*Pt3_22 + (+Ch3A1_10 * Ch3A2_02 + Ch3A1_10 * Ch3A2_13 - Ch3A1_10 * Ch3A2_20 + Ch3A1_10 * Ch3A2_31 - Ch3A1_11 * Ch3A2_03 + Ch3A1_11 * Ch3A2_12 - Ch3A1_11 * Ch3A2_21 - Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_23 + (+Ch3A1_10 * Ch3A2_00 - Ch3A1_10 * Ch3A2_11 - Ch3A1_10 * Ch3A2_22 + Ch3A1_10 * Ch3A2_33 + Ch3A1_11 * Ch3A2_01 - Ch3A1_11 * Ch3A2_10 - Ch3A1_11 * Ch3A2_23 - Ch3A1_11 * Ch3A2_32 + Ch3A1_12 * Ch3A2_02 + Ch3A1_12 * Ch3A2_13 - Ch3A1_12 * Ch3A2_20 + Ch3A1_12 * Ch3A2_31 + Ch3A1_13 * Ch3A2_03 - Ch3A1_13 * Ch3A2_12 + Ch3A1_13 * Ch3A2_21 + Ch3A1_13 * Ch3A2_30)*Pt3_30 + (-Ch3A1_10 * Ch3A2_01 + Ch3A1_10 * Ch3A2_10 + Ch3A1_10 * Ch3A2_23 + Ch3A1_10 * Ch3A2_32 + Ch3A1_11 * Ch3A2_00 - Ch3A1_11 * Ch3A2_11 - Ch3A1_11 * Ch3A2_22 + Ch3A1_11 * Ch3A2_33 - Ch3A1_12 * Ch3A2_03 + Ch3A1_12 * Ch3A2_12 - Ch3A1_12 * Ch3A2_21 - Ch3A1_12 * Ch3A2_30 + Ch3A1_13 * Ch3A2_02 + Ch3A1_13 * Ch3A2_13 - Ch3A1_13 * Ch3A2_20 + Ch3A1_13 * Ch3A2_31)*Pt3_31 + (-Ch3A1_10 * Ch3A2_02 - Ch3A1_10 * Ch3A2_13 + Ch3A1_10 * Ch3A2_20 - Ch3A1_10 * Ch3A2_31 + Ch3A1_11 * Ch3A2_03 - Ch3A1_11 * Ch3A2_12 + Ch3A1_11 * Ch3A2_21 + Ch3A1_11 * Ch3A2_30 + Ch3A1_12 * Ch3A2_00 - Ch3A1_12 * Ch3A2_11 - Ch3A1_12 * Ch3A2_22 + Ch3A1_12 * Ch3A2_33 - Ch3A1_13 * Ch3A2_01 + Ch3A1_13 * Ch3A2_10 + Ch3A1_13 * Ch3A2_23 + Ch3A1_13 * Ch3A2_32)*Pt3_32 + (-Ch3A1_10 * Ch3A2_03 + Ch3A1_10 * Ch3A2_12 - Ch3A1_10 * Ch3A2_21 - Ch3A1_10 * Ch3A2_30 - Ch3A1_11 * Ch3A2_02 - Ch3A1_11 * Ch3A2_13 + Ch3A1_11 * Ch3A2_20 - Ch3A1_11 * Ch3A2_31 + Ch3A1_12 * Ch3A2_01 - Ch3A1_12 * Ch3A2_10 - Ch3A1_12 * Ch3A2_23 - Ch3A1_12 * Ch3A2_32 + Ch3A1_13 * Ch3A2_00 - Ch3A1_13 * Ch3A2_11 - Ch3A1_13 * Ch3A2_22 + Ch3A1_13 * Ch3A2_33)*Pt3_33 + (+Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 - Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_00 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 - Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_01 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 + Ch4A1_33 * Ch4A2_33)*Pt4_02 + (-Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 - Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_03 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 - Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_10 + (-Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 + Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_11 + (+Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 - Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_12 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 - Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_13 + (+Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 - Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_20 + (-Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 - Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_21 + (-Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 - Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_22 + (-Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_23 + (-Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 + Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_30 + (-Ch4A1_30 * Ch4A2_03 - Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_31 + (+Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 - Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_32 + (-Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 - Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_33) / (2 * pi), DG_vec, 1, 1, 3, R, ns, nt, nu);
    addG((2 * t20 + (-Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_00 + (+Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 - Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_01 + (+Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 - Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_02 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 - Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_03 + (+Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 - Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_10 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 - Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_11 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 + Ch3A1_23 * Ch3A2_33)*Pt3_12 + (-Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 - Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_13 + (+Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 - Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_20 + (-Ch3A1_20 * Ch3A2_03 - Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_21 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 - Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_22 + (+Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 + Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_23 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 - Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_30 + (+Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 + Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_31 + (-Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 - Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_32 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 - Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_33 + (-Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_00 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_01 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_02 + (-Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_03 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_10 + (+Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_11 + (+Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_12 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_13 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_20 + (-Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_21 + (+Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_22 + (-Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_23 + (-Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_30 + (+Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_31 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_32 + (+Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_33) / (2 * pi), DG_vec, 1, 2, 0, R, ns, nt, nu);
    addG((2 * t21 + (+Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 - Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_00 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 - Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_01 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 - Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_02 + (-Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 + Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_03 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 - Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_10 + (-Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 + Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_11 + (-Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 - Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_12 + (-Ch3A1_20 * Ch3A2_03 - Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_13 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 + Ch3A1_23 * Ch3A2_33)*Pt3_20 + (+Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 - Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_21 + (-Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 - Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_22 + (+Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 - Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_23 + (-Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 - Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_30 + (+Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 - Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_31 + (-Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_32 + (-Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 - Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_33 + (+Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 - Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_00 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 - Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_01 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 - Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_02 + (+Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 + Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_03 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 + Ch4A1_33 * Ch4A2_31)*Pt4_10 + (-Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 - Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_11 + (-Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 - Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_12 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 - Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_13 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 - Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_20 + (+Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 - Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_21 + (-Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 + Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_22 + (+Ch4A1_30 * Ch4A2_01 - Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_23 + (+Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 - Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_30 + (-Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_31 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 - Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_32 + (-Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 - Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_33) / (2 * pi), DG_vec, 1, 2, 1, R, ns, nt, nu);
    addG((2 * t22 + (+Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 - Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_00 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 + Ch3A1_23 * Ch3A2_33)*Pt3_01 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 - Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_02 + (+Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 - Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_03 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 - Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_10 + (-Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 - Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_11 + (+Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 - Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_12 + (-Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_13 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 - Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_20 + (-Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 - Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_21 + (-Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 + Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_22 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 - Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_23 + (+Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 + Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_30 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 - Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_31 + (+Ch3A1_20 * Ch3A2_03 - Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_32 + (-Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 - Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_33 + (+Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 - Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_00 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 - Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_01 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 - Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_02 + (+Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 + Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_03 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 + Ch4A1_33 * Ch4A2_32)*Pt4_10 + (-Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 - Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_11 + (-Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 - Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_12 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 - Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_13 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 - Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_20 + (+Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 - Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_21 + (-Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 + Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_22 + (+Ch4A1_30 * Ch4A2_02 - Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_23 + (+Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 - Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_30 + (-Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_31 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 - Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_32 + (-Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 - Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_33) / (2 * pi), DG_vec, 1, 2, 2, R, ns, nt, nu);
    addG((2 * t23 + (+Ch3A1_20 * Ch3A2_03 - Ch3A1_20 * Ch3A2_12 + Ch3A1_20 * Ch3A2_21 + Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_00 + (+Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 + Ch3A1_23 * Ch3A2_01 - Ch3A1_23 * Ch3A2_10 - Ch3A1_23 * Ch3A2_23 - Ch3A1_23 * Ch3A2_32)*Pt3_01 + (-Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 - Ch3A1_21 * Ch3A2_00 + Ch3A1_21 * Ch3A2_11 + Ch3A1_21 * Ch3A2_22 - Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_02 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 - Ch3A1_22 * Ch3A2_02 - Ch3A1_22 * Ch3A2_13 + Ch3A1_22 * Ch3A2_20 - Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_03 + (+Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 - Ch3A1_22 * Ch3A2_00 + Ch3A1_22 * Ch3A2_11 + Ch3A1_22 * Ch3A2_22 - Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_10 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 + Ch3A1_21 * Ch3A2_02 + Ch3A1_21 * Ch3A2_13 - Ch3A1_21 * Ch3A2_20 + Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_11 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 - Ch3A1_23 * Ch3A2_03 + Ch3A1_23 * Ch3A2_12 - Ch3A1_23 * Ch3A2_21 - Ch3A1_23 * Ch3A2_30)*Pt3_12 + (+Ch3A1_20 * Ch3A2_01 - Ch3A1_20 * Ch3A2_10 - Ch3A1_20 * Ch3A2_23 - Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_13 + (-Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 + Ch3A1_22 * Ch3A2_03 - Ch3A1_22 * Ch3A2_12 + Ch3A1_22 * Ch3A2_21 + Ch3A1_22 * Ch3A2_30 - Ch3A1_23 * Ch3A2_02 - Ch3A1_23 * Ch3A2_13 + Ch3A1_23 * Ch3A2_20 - Ch3A1_23 * Ch3A2_31)*Pt3_20 + (-Ch3A1_20 * Ch3A2_00 + Ch3A1_20 * Ch3A2_11 + Ch3A1_20 * Ch3A2_22 - Ch3A1_20 * Ch3A2_33 - Ch3A1_21 * Ch3A2_01 + Ch3A1_21 * Ch3A2_10 + Ch3A1_21 * Ch3A2_23 + Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_21 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 - Ch3A1_22 * Ch3A2_01 + Ch3A1_22 * Ch3A2_10 + Ch3A1_22 * Ch3A2_23 + Ch3A1_22 * Ch3A2_32 - Ch3A1_23 * Ch3A2_00 + Ch3A1_23 * Ch3A2_11 + Ch3A1_23 * Ch3A2_22 - Ch3A1_23 * Ch3A2_33)*Pt3_22 + (+Ch3A1_20 * Ch3A2_02 + Ch3A1_20 * Ch3A2_13 - Ch3A1_20 * Ch3A2_20 + Ch3A1_20 * Ch3A2_31 - Ch3A1_21 * Ch3A2_03 + Ch3A1_21 * Ch3A2_12 - Ch3A1_21 * Ch3A2_21 - Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_23 + (+Ch3A1_20 * Ch3A2_00 - Ch3A1_20 * Ch3A2_11 - Ch3A1_20 * Ch3A2_22 + Ch3A1_20 * Ch3A2_33 + Ch3A1_21 * Ch3A2_01 - Ch3A1_21 * Ch3A2_10 - Ch3A1_21 * Ch3A2_23 - Ch3A1_21 * Ch3A2_32 + Ch3A1_22 * Ch3A2_02 + Ch3A1_22 * Ch3A2_13 - Ch3A1_22 * Ch3A2_20 + Ch3A1_22 * Ch3A2_31 + Ch3A1_23 * Ch3A2_03 - Ch3A1_23 * Ch3A2_12 + Ch3A1_23 * Ch3A2_21 + Ch3A1_23 * Ch3A2_30)*Pt3_30 + (-Ch3A1_20 * Ch3A2_01 + Ch3A1_20 * Ch3A2_10 + Ch3A1_20 * Ch3A2_23 + Ch3A1_20 * Ch3A2_32 + Ch3A1_21 * Ch3A2_00 - Ch3A1_21 * Ch3A2_11 - Ch3A1_21 * Ch3A2_22 + Ch3A1_21 * Ch3A2_33 - Ch3A1_22 * Ch3A2_03 + Ch3A1_22 * Ch3A2_12 - Ch3A1_22 * Ch3A2_21 - Ch3A1_22 * Ch3A2_30 + Ch3A1_23 * Ch3A2_02 + Ch3A1_23 * Ch3A2_13 - Ch3A1_23 * Ch3A2_20 + Ch3A1_23 * Ch3A2_31)*Pt3_31 + (-Ch3A1_20 * Ch3A2_02 - Ch3A1_20 * Ch3A2_13 + Ch3A1_20 * Ch3A2_20 - Ch3A1_20 * Ch3A2_31 + Ch3A1_21 * Ch3A2_03 - Ch3A1_21 * Ch3A2_12 + Ch3A1_21 * Ch3A2_21 + Ch3A1_21 * Ch3A2_30 + Ch3A1_22 * Ch3A2_00 - Ch3A1_22 * Ch3A2_11 - Ch3A1_22 * Ch3A2_22 + Ch3A1_22 * Ch3A2_33 - Ch3A1_23 * Ch3A2_01 + Ch3A1_23 * Ch3A2_10 + Ch3A1_23 * Ch3A2_23 + Ch3A1_23 * Ch3A2_32)*Pt3_32 + (-Ch3A1_20 * Ch3A2_03 + Ch3A1_20 * Ch3A2_12 - Ch3A1_20 * Ch3A2_21 - Ch3A1_20 * Ch3A2_30 - Ch3A1_21 * Ch3A2_02 - Ch3A1_21 * Ch3A2_13 + Ch3A1_21 * Ch3A2_20 - Ch3A1_21 * Ch3A2_31 + Ch3A1_22 * Ch3A2_01 - Ch3A1_22 * Ch3A2_10 - Ch3A1_22 * Ch3A2_23 - Ch3A1_22 * Ch3A2_32 + Ch3A1_23 * Ch3A2_00 - Ch3A1_23 * Ch3A2_11 - Ch3A1_23 * Ch3A2_22 + Ch3A1_23 * Ch3A2_33)*Pt3_33 + (+Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 - Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_00 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 - Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_01 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 - Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_02 + (+Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 + Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_03 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 + Ch4A1_33 * Ch4A2_33)*Pt4_10 + (-Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 - Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_11 + (-Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 - Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_12 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 - Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_13 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 - Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_20 + (+Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 - Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_21 + (-Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 + Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_22 + (+Ch4A1_30 * Ch4A2_03 - Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_23 + (+Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 - Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_30 + (-Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_31 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 - Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_32 + (-Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 - Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_33) / (2 * pi), DG_vec, 1, 2, 3, R, ns, nt, nu);
    addG((2 * t30 + (-Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_00 + (+Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 - Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_01 + (+Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 - Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_02 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 - Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_03 + (+Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 - Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_10 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 - Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_11 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 + Ch3A1_33 * Ch3A2_33)*Pt3_12 + (-Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 - Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_13 + (+Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 - Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_20 + (-Ch3A1_30 * Ch3A2_03 - Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_21 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 - Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_22 + (+Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 + Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_23 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 - Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_30 + (+Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 + Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_31 + (-Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 - Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_32 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 - Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_33 + (-Ch4A1_30 * Ch4A2_00 + Ch4A1_21 * Ch4A2_00 - Ch4A1_12 * Ch4A2_00 - Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_00 + (-Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 - Ch4A1_00 * Ch4A2_20 + Ch4A1_11 * Ch4A2_20 + Ch4A1_22 * Ch4A2_20 - Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_01 + (+Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 - Ch4A1_20 * Ch4A2_30 - Ch4A1_31 * Ch4A2_30 + Ch4A1_02 * Ch4A2_30 - Ch4A1_13 * Ch4A2_30)*Pt4_02 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 + Ch4A1_10 * Ch4A2_10 - Ch4A1_01 * Ch4A2_10 - Ch4A1_32 * Ch4A2_10 - Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_03 + (-Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 + Ch4A1_10 * Ch4A2_30 - Ch4A1_01 * Ch4A2_30 - Ch4A1_32 * Ch4A2_30 - Ch4A1_23 * Ch4A2_30)*Pt4_10 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 + Ch4A1_20 * Ch4A2_10 + Ch4A1_31 * Ch4A2_10 - Ch4A1_02 * Ch4A2_10 + Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_11 + (+Ch4A1_00 * Ch4A2_00 - Ch4A1_11 * Ch4A2_00 - Ch4A1_22 * Ch4A2_00 + Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_12 + (+Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 - Ch4A1_30 * Ch4A2_20 + Ch4A1_21 * Ch4A2_20 - Ch4A1_12 * Ch4A2_20 - Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_13 + (+Ch4A1_10 * Ch4A2_00 - Ch4A1_01 * Ch4A2_00 - Ch4A1_32 * Ch4A2_00 - Ch4A1_23 * Ch4A2_00 - Ch4A1_00 * Ch4A2_10 + Ch4A1_11 * Ch4A2_10 + Ch4A1_22 * Ch4A2_10 - Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_20 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 + Ch4A1_20 * Ch4A2_20 + Ch4A1_31 * Ch4A2_20 - Ch4A1_02 * Ch4A2_20 + Ch4A1_13 * Ch4A2_20 - Ch4A1_30 * Ch4A2_30 + Ch4A1_21 * Ch4A2_30 - Ch4A1_12 * Ch4A2_30 - Ch4A1_03 * Ch4A2_30)*Pt4_21 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 - Ch4A1_10 * Ch4A2_20 + Ch4A1_01 * Ch4A2_20 + Ch4A1_32 * Ch4A2_20 + Ch4A1_23 * Ch4A2_20 - Ch4A1_00 * Ch4A2_30 + Ch4A1_11 * Ch4A2_30 + Ch4A1_22 * Ch4A2_30 - Ch4A1_33 * Ch4A2_30)*Pt4_22 + (+Ch4A1_20 * Ch4A2_00 + Ch4A1_31 * Ch4A2_00 - Ch4A1_02 * Ch4A2_00 + Ch4A1_13 * Ch4A2_00 + Ch4A1_30 * Ch4A2_10 - Ch4A1_21 * Ch4A2_10 + Ch4A1_12 * Ch4A2_10 + Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_23 + (-Ch4A1_00 * Ch4A2_00 + Ch4A1_11 * Ch4A2_00 + Ch4A1_22 * Ch4A2_00 - Ch4A1_33 * Ch4A2_00 - Ch4A1_10 * Ch4A2_10 + Ch4A1_01 * Ch4A2_10 + Ch4A1_32 * Ch4A2_10 + Ch4A1_23 * Ch4A2_10 - Ch4A1_20 * Ch4A2_20 - Ch4A1_31 * Ch4A2_20 + Ch4A1_02 * Ch4A2_20 - Ch4A1_13 * Ch4A2_20 + Ch4A1_30 * Ch4A2_30 - Ch4A1_21 * Ch4A2_30 + Ch4A1_12 * Ch4A2_30 + Ch4A1_03 * Ch4A2_30)*Pt4_30 + (-Ch4A1_10 * Ch4A2_00 + Ch4A1_01 * Ch4A2_00 + Ch4A1_32 * Ch4A2_00 + Ch4A1_23 * Ch4A2_00 + Ch4A1_00 * Ch4A2_10 - Ch4A1_11 * Ch4A2_10 - Ch4A1_22 * Ch4A2_10 + Ch4A1_33 * Ch4A2_10 + Ch4A1_30 * Ch4A2_20 - Ch4A1_21 * Ch4A2_20 + Ch4A1_12 * Ch4A2_20 + Ch4A1_03 * Ch4A2_20 + Ch4A1_20 * Ch4A2_30 + Ch4A1_31 * Ch4A2_30 - Ch4A1_02 * Ch4A2_30 + Ch4A1_13 * Ch4A2_30)*Pt4_31 + (-Ch4A1_20 * Ch4A2_00 - Ch4A1_31 * Ch4A2_00 + Ch4A1_02 * Ch4A2_00 - Ch4A1_13 * Ch4A2_00 - Ch4A1_30 * Ch4A2_10 + Ch4A1_21 * Ch4A2_10 - Ch4A1_12 * Ch4A2_10 - Ch4A1_03 * Ch4A2_10 + Ch4A1_00 * Ch4A2_20 - Ch4A1_11 * Ch4A2_20 - Ch4A1_22 * Ch4A2_20 + Ch4A1_33 * Ch4A2_20 - Ch4A1_10 * Ch4A2_30 + Ch4A1_01 * Ch4A2_30 + Ch4A1_32 * Ch4A2_30 + Ch4A1_23 * Ch4A2_30)*Pt4_32 + (+Ch4A1_30 * Ch4A2_00 - Ch4A1_21 * Ch4A2_00 + Ch4A1_12 * Ch4A2_00 + Ch4A1_03 * Ch4A2_00 - Ch4A1_20 * Ch4A2_10 - Ch4A1_31 * Ch4A2_10 + Ch4A1_02 * Ch4A2_10 - Ch4A1_13 * Ch4A2_10 + Ch4A1_10 * Ch4A2_20 - Ch4A1_01 * Ch4A2_20 - Ch4A1_32 * Ch4A2_20 - Ch4A1_23 * Ch4A2_20 + Ch4A1_00 * Ch4A2_30 - Ch4A1_11 * Ch4A2_30 - Ch4A1_22 * Ch4A2_30 + Ch4A1_33 * Ch4A2_30)*Pt4_33) / (2 * pi), DG_vec, 1, 3, 0, R, ns, nt, nu);
    addG((2 * t31 + (+Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 - Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_00 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 - Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_01 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 - Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_02 + (-Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 + Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_03 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 - Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_10 + (-Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 + Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_11 + (-Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 - Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_12 + (-Ch3A1_30 * Ch3A2_03 - Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_13 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 + Ch3A1_33 * Ch3A2_33)*Pt3_20 + (+Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 - Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_21 + (-Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 - Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_22 + (+Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 - Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_23 + (-Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 - Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_30 + (+Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 - Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_31 + (-Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_32 + (-Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 - Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_33 + (+Ch4A1_30 * Ch4A2_01 - Ch4A1_21 * Ch4A2_01 + Ch4A1_12 * Ch4A2_01 + Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_00 + (+Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 - Ch4A1_00 * Ch4A2_21 + Ch4A1_11 * Ch4A2_21 + Ch4A1_22 * Ch4A2_21 - Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_01 + (-Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 - Ch4A1_20 * Ch4A2_31 - Ch4A1_31 * Ch4A2_31 + Ch4A1_02 * Ch4A2_31 - Ch4A1_13 * Ch4A2_31)*Pt4_02 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 + Ch4A1_10 * Ch4A2_11 - Ch4A1_01 * Ch4A2_11 - Ch4A1_32 * Ch4A2_11 - Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_03 + (+Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 + Ch4A1_10 * Ch4A2_31 - Ch4A1_01 * Ch4A2_31 - Ch4A1_32 * Ch4A2_31 - Ch4A1_23 * Ch4A2_31)*Pt4_10 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 + Ch4A1_20 * Ch4A2_11 + Ch4A1_31 * Ch4A2_11 - Ch4A1_02 * Ch4A2_11 + Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_11 + (-Ch4A1_00 * Ch4A2_01 + Ch4A1_11 * Ch4A2_01 + Ch4A1_22 * Ch4A2_01 - Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_12 + (-Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 - Ch4A1_30 * Ch4A2_21 + Ch4A1_21 * Ch4A2_21 - Ch4A1_12 * Ch4A2_21 - Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_13 + (-Ch4A1_10 * Ch4A2_01 + Ch4A1_01 * Ch4A2_01 + Ch4A1_32 * Ch4A2_01 + Ch4A1_23 * Ch4A2_01 - Ch4A1_00 * Ch4A2_11 + Ch4A1_11 * Ch4A2_11 + Ch4A1_22 * Ch4A2_11 - Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_20 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 + Ch4A1_20 * Ch4A2_21 + Ch4A1_31 * Ch4A2_21 - Ch4A1_02 * Ch4A2_21 + Ch4A1_13 * Ch4A2_21 - Ch4A1_30 * Ch4A2_31 + Ch4A1_21 * Ch4A2_31 - Ch4A1_12 * Ch4A2_31 - Ch4A1_03 * Ch4A2_31)*Pt4_21 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 - Ch4A1_10 * Ch4A2_21 + Ch4A1_01 * Ch4A2_21 + Ch4A1_32 * Ch4A2_21 + Ch4A1_23 * Ch4A2_21 - Ch4A1_00 * Ch4A2_31 + Ch4A1_11 * Ch4A2_31 + Ch4A1_22 * Ch4A2_31 - Ch4A1_33 * Ch4A2_31)*Pt4_22 + (-Ch4A1_20 * Ch4A2_01 - Ch4A1_31 * Ch4A2_01 + Ch4A1_02 * Ch4A2_01 - Ch4A1_13 * Ch4A2_01 + Ch4A1_30 * Ch4A2_11 - Ch4A1_21 * Ch4A2_11 + Ch4A1_12 * Ch4A2_11 + Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_23 + (+Ch4A1_00 * Ch4A2_01 - Ch4A1_11 * Ch4A2_01 - Ch4A1_22 * Ch4A2_01 + Ch4A1_33 * Ch4A2_01 - Ch4A1_10 * Ch4A2_11 + Ch4A1_01 * Ch4A2_11 + Ch4A1_32 * Ch4A2_11 + Ch4A1_23 * Ch4A2_11 - Ch4A1_20 * Ch4A2_21 - Ch4A1_31 * Ch4A2_21 + Ch4A1_02 * Ch4A2_21 - Ch4A1_13 * Ch4A2_21 + Ch4A1_30 * Ch4A2_31 - Ch4A1_21 * Ch4A2_31 + Ch4A1_12 * Ch4A2_31 + Ch4A1_03 * Ch4A2_31)*Pt4_30 + (+Ch4A1_10 * Ch4A2_01 - Ch4A1_01 * Ch4A2_01 - Ch4A1_32 * Ch4A2_01 - Ch4A1_23 * Ch4A2_01 + Ch4A1_00 * Ch4A2_11 - Ch4A1_11 * Ch4A2_11 - Ch4A1_22 * Ch4A2_11 + Ch4A1_33 * Ch4A2_11 + Ch4A1_30 * Ch4A2_21 - Ch4A1_21 * Ch4A2_21 + Ch4A1_12 * Ch4A2_21 + Ch4A1_03 * Ch4A2_21 + Ch4A1_20 * Ch4A2_31 + Ch4A1_31 * Ch4A2_31 - Ch4A1_02 * Ch4A2_31 + Ch4A1_13 * Ch4A2_31)*Pt4_31 + (+Ch4A1_20 * Ch4A2_01 + Ch4A1_31 * Ch4A2_01 - Ch4A1_02 * Ch4A2_01 + Ch4A1_13 * Ch4A2_01 - Ch4A1_30 * Ch4A2_11 + Ch4A1_21 * Ch4A2_11 - Ch4A1_12 * Ch4A2_11 - Ch4A1_03 * Ch4A2_11 + Ch4A1_00 * Ch4A2_21 - Ch4A1_11 * Ch4A2_21 - Ch4A1_22 * Ch4A2_21 + Ch4A1_33 * Ch4A2_21 - Ch4A1_10 * Ch4A2_31 + Ch4A1_01 * Ch4A2_31 + Ch4A1_32 * Ch4A2_31 + Ch4A1_23 * Ch4A2_31)*Pt4_32 + (-Ch4A1_30 * Ch4A2_01 + Ch4A1_21 * Ch4A2_01 - Ch4A1_12 * Ch4A2_01 - Ch4A1_03 * Ch4A2_01 - Ch4A1_20 * Ch4A2_11 - Ch4A1_31 * Ch4A2_11 + Ch4A1_02 * Ch4A2_11 - Ch4A1_13 * Ch4A2_11 + Ch4A1_10 * Ch4A2_21 - Ch4A1_01 * Ch4A2_21 - Ch4A1_32 * Ch4A2_21 - Ch4A1_23 * Ch4A2_21 + Ch4A1_00 * Ch4A2_31 - Ch4A1_11 * Ch4A2_31 - Ch4A1_22 * Ch4A2_31 + Ch4A1_33 * Ch4A2_31)*Pt4_33) / (2 * pi), DG_vec, 1, 3, 1, R, ns, nt, nu);
    addG((2 * t32 + (+Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 - Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_00 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 + Ch3A1_33 * Ch3A2_33)*Pt3_01 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 - Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_02 + (+Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 - Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_03 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 - Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_10 + (-Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 - Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_11 + (+Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 - Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_12 + (-Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_13 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 - Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_20 + (-Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 - Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_21 + (-Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 + Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_22 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 - Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_23 + (+Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 + Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_30 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 - Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_31 + (+Ch3A1_30 * Ch3A2_03 - Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_32 + (-Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 - Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_33 + (+Ch4A1_30 * Ch4A2_02 - Ch4A1_21 * Ch4A2_02 + Ch4A1_12 * Ch4A2_02 + Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_00 + (+Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 - Ch4A1_00 * Ch4A2_22 + Ch4A1_11 * Ch4A2_22 + Ch4A1_22 * Ch4A2_22 - Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_01 + (-Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 - Ch4A1_20 * Ch4A2_32 - Ch4A1_31 * Ch4A2_32 + Ch4A1_02 * Ch4A2_32 - Ch4A1_13 * Ch4A2_32)*Pt4_02 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 + Ch4A1_10 * Ch4A2_12 - Ch4A1_01 * Ch4A2_12 - Ch4A1_32 * Ch4A2_12 - Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_03 + (+Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 + Ch4A1_10 * Ch4A2_32 - Ch4A1_01 * Ch4A2_32 - Ch4A1_32 * Ch4A2_32 - Ch4A1_23 * Ch4A2_32)*Pt4_10 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 + Ch4A1_20 * Ch4A2_12 + Ch4A1_31 * Ch4A2_12 - Ch4A1_02 * Ch4A2_12 + Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_11 + (-Ch4A1_00 * Ch4A2_02 + Ch4A1_11 * Ch4A2_02 + Ch4A1_22 * Ch4A2_02 - Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_12 + (-Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 - Ch4A1_30 * Ch4A2_22 + Ch4A1_21 * Ch4A2_22 - Ch4A1_12 * Ch4A2_22 - Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_13 + (-Ch4A1_10 * Ch4A2_02 + Ch4A1_01 * Ch4A2_02 + Ch4A1_32 * Ch4A2_02 + Ch4A1_23 * Ch4A2_02 - Ch4A1_00 * Ch4A2_12 + Ch4A1_11 * Ch4A2_12 + Ch4A1_22 * Ch4A2_12 - Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_20 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 + Ch4A1_20 * Ch4A2_22 + Ch4A1_31 * Ch4A2_22 - Ch4A1_02 * Ch4A2_22 + Ch4A1_13 * Ch4A2_22 - Ch4A1_30 * Ch4A2_32 + Ch4A1_21 * Ch4A2_32 - Ch4A1_12 * Ch4A2_32 - Ch4A1_03 * Ch4A2_32)*Pt4_21 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 - Ch4A1_10 * Ch4A2_22 + Ch4A1_01 * Ch4A2_22 + Ch4A1_32 * Ch4A2_22 + Ch4A1_23 * Ch4A2_22 - Ch4A1_00 * Ch4A2_32 + Ch4A1_11 * Ch4A2_32 + Ch4A1_22 * Ch4A2_32 - Ch4A1_33 * Ch4A2_32)*Pt4_22 + (-Ch4A1_20 * Ch4A2_02 - Ch4A1_31 * Ch4A2_02 + Ch4A1_02 * Ch4A2_02 - Ch4A1_13 * Ch4A2_02 + Ch4A1_30 * Ch4A2_12 - Ch4A1_21 * Ch4A2_12 + Ch4A1_12 * Ch4A2_12 + Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_23 + (+Ch4A1_00 * Ch4A2_02 - Ch4A1_11 * Ch4A2_02 - Ch4A1_22 * Ch4A2_02 + Ch4A1_33 * Ch4A2_02 - Ch4A1_10 * Ch4A2_12 + Ch4A1_01 * Ch4A2_12 + Ch4A1_32 * Ch4A2_12 + Ch4A1_23 * Ch4A2_12 - Ch4A1_20 * Ch4A2_22 - Ch4A1_31 * Ch4A2_22 + Ch4A1_02 * Ch4A2_22 - Ch4A1_13 * Ch4A2_22 + Ch4A1_30 * Ch4A2_32 - Ch4A1_21 * Ch4A2_32 + Ch4A1_12 * Ch4A2_32 + Ch4A1_03 * Ch4A2_32)*Pt4_30 + (+Ch4A1_10 * Ch4A2_02 - Ch4A1_01 * Ch4A2_02 - Ch4A1_32 * Ch4A2_02 - Ch4A1_23 * Ch4A2_02 + Ch4A1_00 * Ch4A2_12 - Ch4A1_11 * Ch4A2_12 - Ch4A1_22 * Ch4A2_12 + Ch4A1_33 * Ch4A2_12 + Ch4A1_30 * Ch4A2_22 - Ch4A1_21 * Ch4A2_22 + Ch4A1_12 * Ch4A2_22 + Ch4A1_03 * Ch4A2_22 + Ch4A1_20 * Ch4A2_32 + Ch4A1_31 * Ch4A2_32 - Ch4A1_02 * Ch4A2_32 + Ch4A1_13 * Ch4A2_32)*Pt4_31 + (+Ch4A1_20 * Ch4A2_02 + Ch4A1_31 * Ch4A2_02 - Ch4A1_02 * Ch4A2_02 + Ch4A1_13 * Ch4A2_02 - Ch4A1_30 * Ch4A2_12 + Ch4A1_21 * Ch4A2_12 - Ch4A1_12 * Ch4A2_12 - Ch4A1_03 * Ch4A2_12 + Ch4A1_00 * Ch4A2_22 - Ch4A1_11 * Ch4A2_22 - Ch4A1_22 * Ch4A2_22 + Ch4A1_33 * Ch4A2_22 - Ch4A1_10 * Ch4A2_32 + Ch4A1_01 * Ch4A2_32 + Ch4A1_32 * Ch4A2_32 + Ch4A1_23 * Ch4A2_32)*Pt4_32 + (-Ch4A1_30 * Ch4A2_02 + Ch4A1_21 * Ch4A2_02 - Ch4A1_12 * Ch4A2_02 - Ch4A1_03 * Ch4A2_02 - Ch4A1_20 * Ch4A2_12 - Ch4A1_31 * Ch4A2_12 + Ch4A1_02 * Ch4A2_12 - Ch4A1_13 * Ch4A2_12 + Ch4A1_10 * Ch4A2_22 - Ch4A1_01 * Ch4A2_22 - Ch4A1_32 * Ch4A2_22 - Ch4A1_23 * Ch4A2_22 + Ch4A1_00 * Ch4A2_32 - Ch4A1_11 * Ch4A2_32 - Ch4A1_22 * Ch4A2_32 + Ch4A1_33 * Ch4A2_32)*Pt4_33) / (2 * pi), DG_vec, 1, 3, 2, R, ns, nt, nu);
    addG((2 * t33 + (+Ch3A1_30 * Ch3A2_03 - Ch3A1_30 * Ch3A2_12 + Ch3A1_30 * Ch3A2_21 + Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_00 + (+Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 + Ch3A1_33 * Ch3A2_01 - Ch3A1_33 * Ch3A2_10 - Ch3A1_33 * Ch3A2_23 - Ch3A1_33 * Ch3A2_32)*Pt3_01 + (-Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 - Ch3A1_31 * Ch3A2_00 + Ch3A1_31 * Ch3A2_11 + Ch3A1_31 * Ch3A2_22 - Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_02 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 - Ch3A1_32 * Ch3A2_02 - Ch3A1_32 * Ch3A2_13 + Ch3A1_32 * Ch3A2_20 - Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_03 + (+Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 - Ch3A1_32 * Ch3A2_00 + Ch3A1_32 * Ch3A2_11 + Ch3A1_32 * Ch3A2_22 - Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_10 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 + Ch3A1_31 * Ch3A2_02 + Ch3A1_31 * Ch3A2_13 - Ch3A1_31 * Ch3A2_20 + Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_11 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 - Ch3A1_33 * Ch3A2_03 + Ch3A1_33 * Ch3A2_12 - Ch3A1_33 * Ch3A2_21 - Ch3A1_33 * Ch3A2_30)*Pt3_12 + (+Ch3A1_30 * Ch3A2_01 - Ch3A1_30 * Ch3A2_10 - Ch3A1_30 * Ch3A2_23 - Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_13 + (-Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 + Ch3A1_32 * Ch3A2_03 - Ch3A1_32 * Ch3A2_12 + Ch3A1_32 * Ch3A2_21 + Ch3A1_32 * Ch3A2_30 - Ch3A1_33 * Ch3A2_02 - Ch3A1_33 * Ch3A2_13 + Ch3A1_33 * Ch3A2_20 - Ch3A1_33 * Ch3A2_31)*Pt3_20 + (-Ch3A1_30 * Ch3A2_00 + Ch3A1_30 * Ch3A2_11 + Ch3A1_30 * Ch3A2_22 - Ch3A1_30 * Ch3A2_33 - Ch3A1_31 * Ch3A2_01 + Ch3A1_31 * Ch3A2_10 + Ch3A1_31 * Ch3A2_23 + Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_21 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 - Ch3A1_32 * Ch3A2_01 + Ch3A1_32 * Ch3A2_10 + Ch3A1_32 * Ch3A2_23 + Ch3A1_32 * Ch3A2_32 - Ch3A1_33 * Ch3A2_00 + Ch3A1_33 * Ch3A2_11 + Ch3A1_33 * Ch3A2_22 - Ch3A1_33 * Ch3A2_33)*Pt3_22 + (+Ch3A1_30 * Ch3A2_02 + Ch3A1_30 * Ch3A2_13 - Ch3A1_30 * Ch3A2_20 + Ch3A1_30 * Ch3A2_31 - Ch3A1_31 * Ch3A2_03 + Ch3A1_31 * Ch3A2_12 - Ch3A1_31 * Ch3A2_21 - Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_23 + (+Ch3A1_30 * Ch3A2_00 - Ch3A1_30 * Ch3A2_11 - Ch3A1_30 * Ch3A2_22 + Ch3A1_30 * Ch3A2_33 + Ch3A1_31 * Ch3A2_01 - Ch3A1_31 * Ch3A2_10 - Ch3A1_31 * Ch3A2_23 - Ch3A1_31 * Ch3A2_32 + Ch3A1_32 * Ch3A2_02 + Ch3A1_32 * Ch3A2_13 - Ch3A1_32 * Ch3A2_20 + Ch3A1_32 * Ch3A2_31 + Ch3A1_33 * Ch3A2_03 - Ch3A1_33 * Ch3A2_12 + Ch3A1_33 * Ch3A2_21 + Ch3A1_33 * Ch3A2_30)*Pt3_30 + (-Ch3A1_30 * Ch3A2_01 + Ch3A1_30 * Ch3A2_10 + Ch3A1_30 * Ch3A2_23 + Ch3A1_30 * Ch3A2_32 + Ch3A1_31 * Ch3A2_00 - Ch3A1_31 * Ch3A2_11 - Ch3A1_31 * Ch3A2_22 + Ch3A1_31 * Ch3A2_33 - Ch3A1_32 * Ch3A2_03 + Ch3A1_32 * Ch3A2_12 - Ch3A1_32 * Ch3A2_21 - Ch3A1_32 * Ch3A2_30 + Ch3A1_33 * Ch3A2_02 + Ch3A1_33 * Ch3A2_13 - Ch3A1_33 * Ch3A2_20 + Ch3A1_33 * Ch3A2_31)*Pt3_31 + (-Ch3A1_30 * Ch3A2_02 - Ch3A1_30 * Ch3A2_13 + Ch3A1_30 * Ch3A2_20 - Ch3A1_30 * Ch3A2_31 + Ch3A1_31 * Ch3A2_03 - Ch3A1_31 * Ch3A2_12 + Ch3A1_31 * Ch3A2_21 + Ch3A1_31 * Ch3A2_30 + Ch3A1_32 * Ch3A2_00 - Ch3A1_32 * Ch3A2_11 - Ch3A1_32 * Ch3A2_22 + Ch3A1_32 * Ch3A2_33 - Ch3A1_33 * Ch3A2_01 + Ch3A1_33 * Ch3A2_10 + Ch3A1_33 * Ch3A2_23 + Ch3A1_33 * Ch3A2_32)*Pt3_32 + (-Ch3A1_30 * Ch3A2_03 + Ch3A1_30 * Ch3A2_12 - Ch3A1_30 * Ch3A2_21 - Ch3A1_30 * Ch3A2_30 - Ch3A1_31 * Ch3A2_02 - Ch3A1_31 * Ch3A2_13 + Ch3A1_31 * Ch3A2_20 - Ch3A1_31 * Ch3A2_31 + Ch3A1_32 * Ch3A2_01 - Ch3A1_32 * Ch3A2_10 - Ch3A1_32 * Ch3A2_23 - Ch3A1_32 * Ch3A2_32 + Ch3A1_33 * Ch3A2_00 - Ch3A1_33 * Ch3A2_11 - Ch3A1_33 * Ch3A2_22 + Ch3A1_33 * Ch3A2_33)*Pt3_33 + (+Ch4A1_30 * Ch4A2_03 - Ch4A1_21 * Ch4A2_03 + Ch4A1_12 * Ch4A2_03 + Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_00 + (+Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 - Ch4A1_00 * Ch4A2_23 + Ch4A1_11 * Ch4A2_23 + Ch4A1_22 * Ch4A2_23 - Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_01 + (-Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 - Ch4A1_20 * Ch4A2_33 - Ch4A1_31 * Ch4A2_33 + Ch4A1_02 * Ch4A2_33 - Ch4A1_13 * Ch4A2_33)*Pt4_02 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 + Ch4A1_10 * Ch4A2_13 - Ch4A1_01 * Ch4A2_13 - Ch4A1_32 * Ch4A2_13 - Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_03 + (+Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 + Ch4A1_10 * Ch4A2_33 - Ch4A1_01 * Ch4A2_33 - Ch4A1_32 * Ch4A2_33 - Ch4A1_23 * Ch4A2_33)*Pt4_10 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 + Ch4A1_20 * Ch4A2_13 + Ch4A1_31 * Ch4A2_13 - Ch4A1_02 * Ch4A2_13 + Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_11 + (-Ch4A1_00 * Ch4A2_03 + Ch4A1_11 * Ch4A2_03 + Ch4A1_22 * Ch4A2_03 - Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_12 + (-Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 - Ch4A1_30 * Ch4A2_23 + Ch4A1_21 * Ch4A2_23 - Ch4A1_12 * Ch4A2_23 - Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_13 + (-Ch4A1_10 * Ch4A2_03 + Ch4A1_01 * Ch4A2_03 + Ch4A1_32 * Ch4A2_03 + Ch4A1_23 * Ch4A2_03 - Ch4A1_00 * Ch4A2_13 + Ch4A1_11 * Ch4A2_13 + Ch4A1_22 * Ch4A2_13 - Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_20 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 + Ch4A1_20 * Ch4A2_23 + Ch4A1_31 * Ch4A2_23 - Ch4A1_02 * Ch4A2_23 + Ch4A1_13 * Ch4A2_23 - Ch4A1_30 * Ch4A2_33 + Ch4A1_21 * Ch4A2_33 - Ch4A1_12 * Ch4A2_33 - Ch4A1_03 * Ch4A2_33)*Pt4_21 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 - Ch4A1_10 * Ch4A2_23 + Ch4A1_01 * Ch4A2_23 + Ch4A1_32 * Ch4A2_23 + Ch4A1_23 * Ch4A2_23 - Ch4A1_00 * Ch4A2_33 + Ch4A1_11 * Ch4A2_33 + Ch4A1_22 * Ch4A2_33 - Ch4A1_33 * Ch4A2_33)*Pt4_22 + (-Ch4A1_20 * Ch4A2_03 - Ch4A1_31 * Ch4A2_03 + Ch4A1_02 * Ch4A2_03 - Ch4A1_13 * Ch4A2_03 + Ch4A1_30 * Ch4A2_13 - Ch4A1_21 * Ch4A2_13 + Ch4A1_12 * Ch4A2_13 + Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_23 + (+Ch4A1_00 * Ch4A2_03 - Ch4A1_11 * Ch4A2_03 - Ch4A1_22 * Ch4A2_03 + Ch4A1_33 * Ch4A2_03 - Ch4A1_10 * Ch4A2_13 + Ch4A1_01 * Ch4A2_13 + Ch4A1_32 * Ch4A2_13 + Ch4A1_23 * Ch4A2_13 - Ch4A1_20 * Ch4A2_23 - Ch4A1_31 * Ch4A2_23 + Ch4A1_02 * Ch4A2_23 - Ch4A1_13 * Ch4A2_23 + Ch4A1_30 * Ch4A2_33 - Ch4A1_21 * Ch4A2_33 + Ch4A1_12 * Ch4A2_33 + Ch4A1_03 * Ch4A2_33)*Pt4_30 + (+Ch4A1_10 * Ch4A2_03 - Ch4A1_01 * Ch4A2_03 - Ch4A1_32 * Ch4A2_03 - Ch4A1_23 * Ch4A2_03 + Ch4A1_00 * Ch4A2_13 - Ch4A1_11 * Ch4A2_13 - Ch4A1_22 * Ch4A2_13 + Ch4A1_33 * Ch4A2_13 + Ch4A1_30 * Ch4A2_23 - Ch4A1_21 * Ch4A2_23 + Ch4A1_12 * Ch4A2_23 + Ch4A1_03 * Ch4A2_23 + Ch4A1_20 * Ch4A2_33 + Ch4A1_31 * Ch4A2_33 - Ch4A1_02 * Ch4A2_33 + Ch4A1_13 * Ch4A2_33)*Pt4_31 + (+Ch4A1_20 * Ch4A2_03 + Ch4A1_31 * Ch4A2_03 - Ch4A1_02 * Ch4A2_03 + Ch4A1_13 * Ch4A2_03 - Ch4A1_30 * Ch4A2_13 + Ch4A1_21 * Ch4A2_13 - Ch4A1_12 * Ch4A2_13 - Ch4A1_03 * Ch4A2_13 + Ch4A1_00 * Ch4A2_23 - Ch4A1_11 * Ch4A2_23 - Ch4A1_22 * Ch4A2_23 + Ch4A1_33 * Ch4A2_23 - Ch4A1_10 * Ch4A2_33 + Ch4A1_01 * Ch4A2_33 + Ch4A1_32 * Ch4A2_33 + Ch4A1_23 * Ch4A2_33)*Pt4_32 + (-Ch4A1_30 * Ch4A2_03 + Ch4A1_21 * Ch4A2_03 - Ch4A1_12 * Ch4A2_03 - Ch4A1_03 * Ch4A2_03 - Ch4A1_20 * Ch4A2_13 - Ch4A1_31 * Ch4A2_13 + Ch4A1_02 * Ch4A2_13 - Ch4A1_13 * Ch4A2_13 + Ch4A1_10 * Ch4A2_23 - Ch4A1_01 * Ch4A2_23 - Ch4A1_32 * Ch4A2_23 - Ch4A1_23 * Ch4A2_23 + Ch4A1_00 * Ch4A2_33 - Ch4A1_11 * Ch4A2_33 - Ch4A1_22 * Ch4A2_33 + Ch4A1_33 * Ch4A2_33)*Pt4_33) / (2 * pi), DG_vec, 1, 3, 3, R, ns, nt, nu);

}

//Compute u-channel terms for specified frequency and site arguments of the vertex function
void uChannel(double DG_vec[], int ns, int nt, int nu, double wpr, double Pt[], Rvec R, const double G_vec[]) {
    double s = wp_vec[ns], t = wp_vec[nt], u = dsign(nu)*wp_vec[abs(nu)];
    double w1p = 0.5*(s + t + u), w2p = 0.5*(s - t - u), w1 = 0.5*(s - t + u), w2 = 0.5*(s + t - u);
    pairWeight pw_1a = findPw(+w2p - wpr), pw_1b = findPw(-w1 - wpr), pw_2a = findPw(+w2 - wpr), pw_2b = findPw(w1p + wpr);

    double Pt00 = Pt[0];
    double Pt01 = Pt[4 * 0 + 1];
    double Pt02 = Pt[4 * 0 + 2];
    double Pt03 = Pt[4 * 0 + 3];
    double Pt10 = Pt[4 * 1 + 0];
    double Pt11 = Pt[4 * 1 + 1];
    double Pt12 = Pt[4 * 1 + 2];
    double Pt13 = Pt[4 * 1 + 3];
    double Pt20 = Pt[4 * 2 + 0];
    double Pt21 = Pt[4 * 2 + 1];
    double Pt22 = Pt[4 * 2 + 2];
    double Pt23 = Pt[4 * 2 + 3];
    double Pt30 = Pt[4 * 3 + 0];
    double Pt31 = Pt[4 * 3 + 1];
    double Pt32 = Pt[4 * 3 + 2];
    double Pt33 = Pt[4 * 3 + 3];


    double Ch5A1_00 = getIntpolG(G_vec, 1, 0, 0, R, pw_1a, pw_1b, nu);
    double Ch5A1_01 = getIntpolG(G_vec, 1, 0, 1, R, pw_1a, pw_1b, nu);
    double Ch5A1_02 = getIntpolG(G_vec, 1, 0, 2, R, pw_1a, pw_1b, nu);
    double Ch5A1_03 = getIntpolG(G_vec, 1, 0, 3, R, pw_1a, pw_1b, nu);
    double Ch5A1_10 = getIntpolG(G_vec, 1, 1, 0, R, pw_1a, pw_1b, nu);
    double Ch5A1_11 = getIntpolG(G_vec, 1, 1, 1, R, pw_1a, pw_1b, nu);
    double Ch5A1_12 = getIntpolG(G_vec, 1, 1, 2, R, pw_1a, pw_1b, nu);
    double Ch5A1_13 = getIntpolG(G_vec, 1, 1, 3, R, pw_1a, pw_1b, nu);
    double Ch5A1_20 = getIntpolG(G_vec, 1, 2, 0, R, pw_1a, pw_1b, nu);
    double Ch5A1_21 = getIntpolG(G_vec, 1, 2, 1, R, pw_1a, pw_1b, nu);
    double Ch5A1_22 = getIntpolG(G_vec, 1, 2, 2, R, pw_1a, pw_1b, nu);
    double Ch5A1_23 = getIntpolG(G_vec, 1, 2, 3, R, pw_1a, pw_1b, nu);
    double Ch5A1_30 = getIntpolG(G_vec, 1, 3, 0, R, pw_1a, pw_1b, nu);
    double Ch5A1_31 = getIntpolG(G_vec, 1, 3, 1, R, pw_1a, pw_1b, nu);
    double Ch5A1_32 = getIntpolG(G_vec, 1, 3, 2, R, pw_1a, pw_1b, nu);
    double Ch5A1_33 = getIntpolG(G_vec, 1, 3, 3, R, pw_1a, pw_1b, nu);

    double Ch5A2_00 = getIntpolG(G_vec, 1, 0, 0, R, pw_2a, pw_2b, nu);
    double Ch5A2_01 = getIntpolG(G_vec, 1, 0, 1, R, pw_2a, pw_2b, nu);
    double Ch5A2_02 = getIntpolG(G_vec, 1, 0, 2, R, pw_2a, pw_2b, nu);
    double Ch5A2_03 = getIntpolG(G_vec, 1, 0, 3, R, pw_2a, pw_2b, nu);
    double Ch5A2_10 = getIntpolG(G_vec, 1, 1, 0, R, pw_2a, pw_2b, nu);
    double Ch5A2_11 = getIntpolG(G_vec, 1, 1, 1, R, pw_2a, pw_2b, nu);
    double Ch5A2_12 = getIntpolG(G_vec, 1, 1, 2, R, pw_2a, pw_2b, nu);
    double Ch5A2_13 = getIntpolG(G_vec, 1, 1, 3, R, pw_2a, pw_2b, nu);
    double Ch5A2_20 = getIntpolG(G_vec, 1, 2, 0, R, pw_2a, pw_2b, nu);
    double Ch5A2_21 = getIntpolG(G_vec, 1, 2, 1, R, pw_2a, pw_2b, nu);
    double Ch5A2_22 = getIntpolG(G_vec, 1, 2, 2, R, pw_2a, pw_2b, nu);
    double Ch5A2_23 = getIntpolG(G_vec, 1, 2, 3, R, pw_2a, pw_2b, nu);
    double Ch5A2_30 = getIntpolG(G_vec, 1, 3, 0, R, pw_2a, pw_2b, nu);
    double Ch5A2_31 = getIntpolG(G_vec, 1, 3, 1, R, pw_2a, pw_2b, nu);
    double Ch5A2_32 = getIntpolG(G_vec, 1, 3, 2, R, pw_2a, pw_2b, nu);
    double Ch5A2_33 = getIntpolG(G_vec, 1, 3, 3, R, pw_2a, pw_2b, nu);


    addG((+(-Ch5A1_00 * Ch5A2_00 + Ch5A1_01 * Ch5A2_01 + Ch5A1_02 * Ch5A2_02 + Ch5A1_03 * Ch5A2_03 + Ch5A1_10 * Ch5A2_10 - Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 + Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 - Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 + Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 - Ch5A1_33 * Ch5A2_33)*Pt00 + (-Ch5A1_00 * Ch5A2_10 - Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 - Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 - Ch5A1_11 * Ch5A2_01 - Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 + Ch5A1_20 * Ch5A2_30 - Ch5A1_21 * Ch5A2_31 - Ch5A1_22 * Ch5A2_32 - Ch5A1_23 * Ch5A2_33 - Ch5A1_30 * Ch5A2_20 + Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt01 + (-Ch5A1_00 * Ch5A2_20 - Ch5A1_01 * Ch5A2_21 - Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 - Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 + Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 - Ch5A1_22 * Ch5A2_02 - Ch5A1_23 * Ch5A2_03 + Ch5A1_30 * Ch5A2_10 - Ch5A1_31 * Ch5A2_11 - Ch5A1_32 * Ch5A2_12 - Ch5A1_33 * Ch5A2_13)*Pt02 + (-Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 - Ch5A1_02 * Ch5A2_32 - Ch5A1_03 * Ch5A2_33 + Ch5A1_10 * Ch5A2_20 - Ch5A1_11 * Ch5A2_21 - Ch5A1_12 * Ch5A2_22 - Ch5A1_13 * Ch5A2_23 - Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 + Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 - Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 - Ch5A1_33 * Ch5A2_03)*Pt03 + (-Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 - Ch5A1_02 * Ch5A2_03 + Ch5A1_03 * Ch5A2_02 - Ch5A1_10 * Ch5A2_11 - Ch5A1_11 * Ch5A2_10 + Ch5A1_12 * Ch5A2_13 - Ch5A1_13 * Ch5A2_12 - Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 - Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 - Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 - Ch5A1_33 * Ch5A2_32)*Pt10 + (+Ch5A1_00 * Ch5A2_11 - Ch5A1_01 * Ch5A2_10 + Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 - Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 + Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 + Ch5A1_22 * Ch5A2_33 - Ch5A1_23 * Ch5A2_32 + Ch5A1_30 * Ch5A2_21 + Ch5A1_31 * Ch5A2_20 - Ch5A1_32 * Ch5A2_23 + Ch5A1_33 * Ch5A2_22)*Pt11 + (-Ch5A1_00 * Ch5A2_21 + Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 + Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 - Ch5A1_11 * Ch5A2_30 + Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 + Ch5A1_20 * Ch5A2_01 - Ch5A1_21 * Ch5A2_00 - Ch5A1_22 * Ch5A2_03 + Ch5A1_23 * Ch5A2_02 + Ch5A1_30 * Ch5A2_11 + Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt12 + (-Ch5A1_00 * Ch5A2_31 + Ch5A1_01 * Ch5A2_30 - Ch5A1_02 * Ch5A2_33 + Ch5A1_03 * Ch5A2_32 + Ch5A1_10 * Ch5A2_21 + Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 - Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 + Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 + Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 + Ch5A1_33 * Ch5A2_02)*Pt13 + (-Ch5A1_00 * Ch5A2_02 + Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 - Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 - Ch5A1_11 * Ch5A2_13 - Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 - Ch5A1_20 * Ch5A2_22 - Ch5A1_21 * Ch5A2_23 - Ch5A1_22 * Ch5A2_20 + Ch5A1_23 * Ch5A2_21 - Ch5A1_30 * Ch5A2_32 - Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt20 + (-Ch5A1_00 * Ch5A2_12 + Ch5A1_01 * Ch5A2_13 + Ch5A1_02 * Ch5A2_10 - Ch5A1_03 * Ch5A2_11 + Ch5A1_10 * Ch5A2_02 + Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 + Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 + Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 - Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 + Ch5A1_33 * Ch5A2_21)*Pt21 + (+Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 - Ch5A1_02 * Ch5A2_20 + Ch5A1_03 * Ch5A2_21 + Ch5A1_10 * Ch5A2_32 + Ch5A1_11 * Ch5A2_33 + Ch5A1_12 * Ch5A2_30 - Ch5A1_13 * Ch5A2_31 - Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 + Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 - Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 + Ch5A1_33 * Ch5A2_11)*Pt22 + (-Ch5A1_00 * Ch5A2_32 + Ch5A1_01 * Ch5A2_33 + Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 + Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 + Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 - Ch5A1_22 * Ch5A2_10 + Ch5A1_23 * Ch5A2_11 + Ch5A1_30 * Ch5A2_02 + Ch5A1_31 * Ch5A2_03 - Ch5A1_32 * Ch5A2_00 - Ch5A1_33 * Ch5A2_01)*Pt23 + (-Ch5A1_00 * Ch5A2_03 - Ch5A1_01 * Ch5A2_02 + Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 - Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 - Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 - Ch5A1_22 * Ch5A2_21 - Ch5A1_23 * Ch5A2_20 - Ch5A1_30 * Ch5A2_33 + Ch5A1_31 * Ch5A2_32 - Ch5A1_32 * Ch5A2_31 - Ch5A1_33 * Ch5A2_30)*Pt30 + (-Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 + Ch5A1_02 * Ch5A2_11 + Ch5A1_03 * Ch5A2_10 + Ch5A1_10 * Ch5A2_03 - Ch5A1_11 * Ch5A2_02 + Ch5A1_12 * Ch5A2_01 - Ch5A1_13 * Ch5A2_00 + Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 + Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 + Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 - Ch5A1_33 * Ch5A2_20)*Pt31 + (-Ch5A1_00 * Ch5A2_23 - Ch5A1_01 * Ch5A2_22 + Ch5A1_02 * Ch5A2_21 + Ch5A1_03 * Ch5A2_20 - Ch5A1_10 * Ch5A2_33 + Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 + Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 + Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 + Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 + Ch5A1_33 * Ch5A2_10)*Pt32 + (+Ch5A1_00 * Ch5A2_33 + Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 - Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 + Ch5A1_11 * Ch5A2_22 - Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 + Ch5A1_20 * Ch5A2_13 - Ch5A1_21 * Ch5A2_12 + Ch5A1_22 * Ch5A2_11 + Ch5A1_23 * Ch5A2_10 - Ch5A1_30 * Ch5A2_03 + Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt33) / (2 * pi), DG_vec, 1, 0, 0, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 - Ch5A1_10 * Ch5A2_11 - Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 - Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 - Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 - Ch5A1_31 * Ch5A2_30 - Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt00 + (+Ch5A1_00 * Ch5A2_11 - Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 + Ch5A1_03 * Ch5A2_12 - Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 + Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 + Ch5A1_30 * Ch5A2_21 + Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt01 + (+Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 + Ch5A1_03 * Ch5A2_22 + Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 + Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 - Ch5A1_22 * Ch5A2_03 + Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt02 + (+Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 - Ch5A1_02 * Ch5A2_33 + Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 + Ch5A1_21 * Ch5A2_10 + Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 + Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 + Ch5A1_33 * Ch5A2_02)*Pt03 + (+Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 + Ch5A1_02 * Ch5A2_02 + Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 + Ch5A1_21 * Ch5A2_21 - Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 + Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 - Ch5A1_33 * Ch5A2_33)*Pt10 + (+Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 - Ch5A1_03 * Ch5A2_13 + Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 - Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 - Ch5A1_22 * Ch5A2_32 - Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt11 + (-Ch5A1_00 * Ch5A2_20 - Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 + Ch5A1_03 * Ch5A2_23 - Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 - Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 + Ch5A1_30 * Ch5A2_10 - Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt12 + (-Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 + Ch5A1_10 * Ch5A2_20 - Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 - Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 - Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 - Ch5A1_31 * Ch5A2_01 + Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt13 + (-Ch5A1_00 * Ch5A2_03 - Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 + Ch5A1_03 * Ch5A2_00 - Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 + Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 - Ch5A1_30 * Ch5A2_33 + Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt20 + (-Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 + Ch5A1_10 * Ch5A2_03 - Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 + Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 - Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 + Ch5A1_31 * Ch5A2_22 + Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt21 + (+Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 + Ch5A1_02 * Ch5A2_21 + Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 + Ch5A1_21 * Ch5A2_02 + Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 + Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 + Ch5A1_33 * Ch5A2_10)*Pt22 + (-Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 - Ch5A1_03 * Ch5A2_30 + Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 - Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 + Ch5A1_22 * Ch5A2_11 + Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt23 + (+Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 - Ch5A1_03 * Ch5A2_01 + Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 - Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 - Ch5A1_22 * Ch5A2_20 + Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt30 + (+Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 + Ch5A1_02 * Ch5A2_10 - Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 - Ch5A1_21 * Ch5A2_33 + Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 + Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 + Ch5A1_33 * Ch5A2_21)*Pt31 + (+Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 + Ch5A1_10 * Ch5A2_32 + Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 - Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 - Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 - Ch5A1_31 * Ch5A2_13 + Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt32 + (-Ch5A1_00 * Ch5A2_32 + Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 + Ch5A1_03 * Ch5A2_31 + Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 + Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 + Ch5A1_30 * Ch5A2_02 + Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt33) / (2 * pi), DG_vec, 1, 0, 1, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 - Ch5A1_12 * Ch5A2_10 - Ch5A1_13 * Ch5A2_11 - Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 - Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 - Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 - Ch5A1_33 * Ch5A2_31)*Pt00 + (+Ch5A1_00 * Ch5A2_12 + Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 - Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 + Ch5A1_11 * Ch5A2_03 + Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 + Ch5A1_32 * Ch5A2_20 + Ch5A1_33 * Ch5A2_21)*Pt01 + (+Ch5A1_00 * Ch5A2_22 + Ch5A1_01 * Ch5A2_23 - Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 + Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 + Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 - Ch5A1_20 * Ch5A2_02 + Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt02 + (+Ch5A1_00 * Ch5A2_32 + Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 + Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 + Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 + Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 - Ch5A1_33 * Ch5A2_01)*Pt03 + (+Ch5A1_00 * Ch5A2_03 - Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 + Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 - Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 + Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 - Ch5A1_33 * Ch5A2_30)*Pt10 + (-Ch5A1_00 * Ch5A2_13 + Ch5A1_01 * Ch5A2_12 + Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 + Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 + Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 + Ch5A1_20 * Ch5A2_33 + Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt11 + (+Ch5A1_00 * Ch5A2_23 - Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 + Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 + Ch5A1_11 * Ch5A2_32 + Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 - Ch5A1_32 * Ch5A2_11 + Ch5A1_33 * Ch5A2_10)*Pt12 + (+Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 - Ch5A1_12 * Ch5A2_21 + Ch5A1_13 * Ch5A2_20 + Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 + Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 - Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 - Ch5A1_33 * Ch5A2_00)*Pt13 + (+Ch5A1_00 * Ch5A2_00 + Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 + Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 - Ch5A1_11 * Ch5A2_11 + Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 + Ch5A1_32 * Ch5A2_32 - Ch5A1_33 * Ch5A2_33)*Pt20 + (-Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 - Ch5A1_12 * Ch5A2_02 + Ch5A1_13 * Ch5A2_03 + Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 - Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 - Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 - Ch5A1_33 * Ch5A2_23)*Pt21 + (+Ch5A1_00 * Ch5A2_20 - Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 + Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 - Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 - Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 - Ch5A1_33 * Ch5A2_13)*Pt22 + (-Ch5A1_00 * Ch5A2_30 + Ch5A1_01 * Ch5A2_31 - Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 + Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 - Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 - Ch5A1_20 * Ch5A2_10 - Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt23 + (-Ch5A1_00 * Ch5A2_01 + Ch5A1_01 * Ch5A2_00 - Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 - Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 + Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 - Ch5A1_20 * Ch5A2_21 + Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt30 + (-Ch5A1_00 * Ch5A2_11 - Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 + Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 - Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 + Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 + Ch5A1_33 * Ch5A2_22)*Pt31 + (-Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 + Ch5A1_12 * Ch5A2_33 + Ch5A1_13 * Ch5A2_32 + Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 - Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 + Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 - Ch5A1_33 * Ch5A2_12)*Pt32 + (+Ch5A1_00 * Ch5A2_31 + Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 + Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 + Ch5A1_11 * Ch5A2_20 + Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 + Ch5A1_32 * Ch5A2_03 + Ch5A1_33 * Ch5A2_02)*Pt33) / (2 * pi), DG_vec, 1, 0, 2, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 - Ch5A1_10 * Ch5A2_13 - Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 - Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 - Ch5A1_23 * Ch5A2_20 - Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 - Ch5A1_33 * Ch5A2_30)*Pt00 + (+Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 + Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 - Ch5A1_11 * Ch5A2_02 + Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 + Ch5A1_30 * Ch5A2_23 + Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt01 + (+Ch5A1_00 * Ch5A2_23 - Ch5A1_01 * Ch5A2_22 + Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 + Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 + Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 + Ch5A1_22 * Ch5A2_01 + Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt02 + (+Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 + Ch5A1_02 * Ch5A2_31 - Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 + Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 + Ch5A1_23 * Ch5A2_10 - Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 + Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt03 + (-Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 + Ch5A1_02 * Ch5A2_00 - Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 - Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 + Ch5A1_23 * Ch5A2_21 - Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 + Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt10 + (+Ch5A1_00 * Ch5A2_12 + Ch5A1_01 * Ch5A2_13 + Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 + Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 + Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 + Ch5A1_22 * Ch5A2_30 + Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt11 + (-Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 - Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 + Ch5A1_11 * Ch5A2_33 + Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 + Ch5A1_30 * Ch5A2_12 - Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt12 + (-Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 + Ch5A1_10 * Ch5A2_22 - Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 + Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 + Ch5A1_23 * Ch5A2_11 + Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 - Ch5A1_33 * Ch5A2_01)*Pt13 + (+Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 - Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 - Ch5A1_11 * Ch5A2_10 + Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 + Ch5A1_30 * Ch5A2_31 - Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt20 + (+Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 - Ch5A1_10 * Ch5A2_01 - Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 + Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 - Ch5A1_23 * Ch5A2_32 + Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 + Ch5A1_33 * Ch5A2_22)*Pt21 + (-Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 + Ch5A1_02 * Ch5A2_23 + Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 + Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 + Ch5A1_23 * Ch5A2_02 + Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 + Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt22 + (+Ch5A1_00 * Ch5A2_31 + Ch5A1_01 * Ch5A2_30 - Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 + Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 - Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 + Ch5A1_22 * Ch5A2_13 + Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt23 + (+Ch5A1_00 * Ch5A2_00 + Ch5A1_01 * Ch5A2_01 + Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 - Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 + Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 - Ch5A1_22 * Ch5A2_22 + Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt30 + (-Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 + Ch5A1_02 * Ch5A2_12 - Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 + Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 - Ch5A1_23 * Ch5A2_33 - Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 - Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt31 + (-Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 - Ch5A1_10 * Ch5A2_30 - Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 + Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 - Ch5A1_23 * Ch5A2_03 + Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 - Ch5A1_33 * Ch5A2_13)*Pt32 + (+Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 - Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 - Ch5A1_11 * Ch5A2_21 - Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 + Ch5A1_30 * Ch5A2_00 - Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt33) / (2 * pi), DG_vec, 1, 0, 3, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_10 - Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 - Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 - Ch5A1_11 * Ch5A2_01 - Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 - Ch5A1_32 * Ch5A2_22 - Ch5A1_33 * Ch5A2_23)*Pt00 + (+Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 + Ch5A1_12 * Ch5A2_12 + Ch5A1_13 * Ch5A2_13 + Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 - Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 + Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 - Ch5A1_33 * Ch5A2_33)*Pt01 + (+Ch5A1_00 * Ch5A2_30 + Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 - Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 + Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 - Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 - Ch5A1_33 * Ch5A2_03)*Pt02 + (-Ch5A1_00 * Ch5A2_20 - Ch5A1_01 * Ch5A2_21 - Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 - Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 + Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 + Ch5A1_20 * Ch5A2_00 + Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt03 + (+Ch5A1_00 * Ch5A2_11 - Ch5A1_01 * Ch5A2_10 + Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 - Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 + Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 + Ch5A1_20 * Ch5A2_31 + Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt10 + (+Ch5A1_00 * Ch5A2_01 + Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 - Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 - Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 - Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 - Ch5A1_33 * Ch5A2_32)*Pt11 + (+Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 + Ch5A1_12 * Ch5A2_23 - Ch5A1_13 * Ch5A2_22 - Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 + Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 + Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 + Ch5A1_33 * Ch5A2_02)*Pt12 + (-Ch5A1_00 * Ch5A2_21 + Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 + Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 - Ch5A1_11 * Ch5A2_30 + Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 + Ch5A1_32 * Ch5A2_13 - Ch5A1_33 * Ch5A2_12)*Pt13 + (+Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 + Ch5A1_12 * Ch5A2_00 + Ch5A1_13 * Ch5A2_01 + Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 + Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 - Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 + Ch5A1_33 * Ch5A2_21)*Pt20 + (-Ch5A1_00 * Ch5A2_02 + Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 - Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 - Ch5A1_11 * Ch5A2_13 - Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 + Ch5A1_32 * Ch5A2_30 - Ch5A1_33 * Ch5A2_31)*Pt21 + (-Ch5A1_00 * Ch5A2_32 + Ch5A1_01 * Ch5A2_33 + Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 + Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 + Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 + Ch5A1_20 * Ch5A2_12 + Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt22 + (-Ch5A1_00 * Ch5A2_22 + Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 - Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 + Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 - Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 + Ch5A1_33 * Ch5A2_11)*Pt23 + (+Ch5A1_00 * Ch5A2_13 + Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 + Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 + Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 + Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 - Ch5A1_33 * Ch5A2_20)*Pt30 + (-Ch5A1_00 * Ch5A2_03 - Ch5A1_01 * Ch5A2_02 + Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 - Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 - Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 + Ch5A1_20 * Ch5A2_23 - Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt31 + (+Ch5A1_00 * Ch5A2_33 + Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 - Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 + Ch5A1_11 * Ch5A2_22 - Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 + Ch5A1_32 * Ch5A2_01 - Ch5A1_33 * Ch5A2_00)*Pt32 + (+Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 + Ch5A1_12 * Ch5A2_31 + Ch5A1_13 * Ch5A2_30 + Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 + Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 + Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 + Ch5A1_33 * Ch5A2_10)*Pt33) / (2 * pi), DG_vec, 1, 1, 0, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 + Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 - Ch5A1_11 * Ch5A2_00 + Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 + Ch5A1_30 * Ch5A2_21 + Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt00 + (-Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 - Ch5A1_10 * Ch5A2_11 - Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 + Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 - Ch5A1_23 * Ch5A2_22 + Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 - Ch5A1_33 * Ch5A2_32)*Pt01 + (+Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 - Ch5A1_02 * Ch5A2_33 + Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 - Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 + Ch5A1_23 * Ch5A2_12 + Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 + Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt02 + (-Ch5A1_00 * Ch5A2_21 + Ch5A1_01 * Ch5A2_20 + Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 - Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 + Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 - Ch5A1_22 * Ch5A2_03 + Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt03 + (-Ch5A1_00 * Ch5A2_10 - Ch5A1_01 * Ch5A2_11 + Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 - Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 + Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 - Ch5A1_22 * Ch5A2_32 - Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt10 + (+Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 + Ch5A1_02 * Ch5A2_02 + Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 + Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 + Ch5A1_23 * Ch5A2_23 + Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 + Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt11 + (-Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 + Ch5A1_10 * Ch5A2_20 - Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 - Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 + Ch5A1_23 * Ch5A2_13 + Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 - Ch5A1_33 * Ch5A2_03)*Pt12 + (+Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 - Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 - Ch5A1_11 * Ch5A2_31 + Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 + Ch5A1_30 * Ch5A2_10 - Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt13 + (-Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 + Ch5A1_10 * Ch5A2_03 - Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 + Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 + Ch5A1_23 * Ch5A2_30 + Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 - Ch5A1_33 * Ch5A2_20)*Pt20 + (+Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 + Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 - Ch5A1_11 * Ch5A2_12 - Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 - Ch5A1_30 * Ch5A2_33 + Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt21 + (+Ch5A1_00 * Ch5A2_33 + Ch5A1_01 * Ch5A2_32 + Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 + Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 + Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 + Ch5A1_22 * Ch5A2_11 + Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt22 + (+Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 + Ch5A1_02 * Ch5A2_21 + Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 + Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 + Ch5A1_23 * Ch5A2_00 + Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 - Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt23 + (+Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 + Ch5A1_02 * Ch5A2_10 - Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 + Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 + Ch5A1_23 * Ch5A2_31 - Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 + Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt30 + (-Ch5A1_00 * Ch5A2_02 + Ch5A1_01 * Ch5A2_03 + Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 - Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 - Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 - Ch5A1_22 * Ch5A2_20 + Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt31 + (+Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 + Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 - Ch5A1_11 * Ch5A2_23 + Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 + Ch5A1_30 * Ch5A2_02 + Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt32 + (+Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 + Ch5A1_10 * Ch5A2_32 + Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 + Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 + Ch5A1_23 * Ch5A2_01 + Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 + Ch5A1_33 * Ch5A2_11)*Pt33) / (2 * pi), DG_vec, 1, 1, 1, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 + Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 + Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 + Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 + Ch5A1_32 * Ch5A2_20 + Ch5A1_33 * Ch5A2_21)*Pt00 + (-Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 - Ch5A1_12 * Ch5A2_10 - Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 - Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 + Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 - Ch5A1_31 * Ch5A2_33 + Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt01 + (+Ch5A1_00 * Ch5A2_32 + Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 + Ch5A1_21 * Ch5A2_13 - Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 + Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 - Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt02 + (-Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 + Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 + Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 - Ch5A1_13 * Ch5A2_31 - Ch5A1_20 * Ch5A2_02 + Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt03 + (+Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 + Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 - Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 - Ch5A1_13 * Ch5A2_00 + Ch5A1_20 * Ch5A2_33 + Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt10 + (+Ch5A1_00 * Ch5A2_03 - Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 - Ch5A1_21 * Ch5A2_22 - Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 - Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 - Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt11 + (+Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 - Ch5A1_12 * Ch5A2_21 + Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 - Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 + Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 + Ch5A1_31 * Ch5A2_02 + Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt12 + (-Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 + Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 - Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 + Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 - Ch5A1_32 * Ch5A2_11 + Ch5A1_33 * Ch5A2_10)*Pt13 + (-Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 - Ch5A1_12 * Ch5A2_02 + Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 - Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 - Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 + Ch5A1_31 * Ch5A2_21 - Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt20 + (-Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 + Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 + Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 + Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 + Ch5A1_32 * Ch5A2_32 - Ch5A1_33 * Ch5A2_33)*Pt21 + (+Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 - Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 - Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 - Ch5A1_13 * Ch5A2_23 - Ch5A1_20 * Ch5A2_10 - Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt22 + (+Ch5A1_00 * Ch5A2_20 - Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 + Ch5A1_21 * Ch5A2_01 - Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 + Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 - Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt23 + (-Ch5A1_00 * Ch5A2_11 - Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 + Ch5A1_21 * Ch5A2_30 + Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 + Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 - Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt30 + (+Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 + Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 - Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 - Ch5A1_13 * Ch5A2_12 - Ch5A1_20 * Ch5A2_21 + Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt31 + (-Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 - Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 + Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 - Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 + Ch5A1_32 * Ch5A2_03 + Ch5A1_33 * Ch5A2_02)*Pt32 + (-Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 + Ch5A1_12 * Ch5A2_33 + Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 - Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 + Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 + Ch5A1_31 * Ch5A2_10 + Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt33) / (2 * pi), DG_vec, 1, 1, 2, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_13 + Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 + Ch5A1_03 * Ch5A2_10 + Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 - Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 + Ch5A1_30 * Ch5A2_23 + Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt00 + (-Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 - Ch5A1_10 * Ch5A2_13 - Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 + Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 - Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 + Ch5A1_31 * Ch5A2_32 - Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt01 + (+Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 + Ch5A1_02 * Ch5A2_31 - Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 - Ch5A1_21 * Ch5A2_12 + Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 + Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 - Ch5A1_33 * Ch5A2_00)*Pt02 + (-Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 + Ch5A1_03 * Ch5A2_20 - Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 + Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 + Ch5A1_22 * Ch5A2_01 + Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt03 + (-Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 - Ch5A1_03 * Ch5A2_11 + Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 + Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 + Ch5A1_22 * Ch5A2_30 + Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt10 + (-Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 + Ch5A1_02 * Ch5A2_00 - Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 - Ch5A1_21 * Ch5A2_23 - Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 - Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 - Ch5A1_33 * Ch5A2_31)*Pt11 + (-Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 + Ch5A1_10 * Ch5A2_22 - Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 + Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 - Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 + Ch5A1_31 * Ch5A2_03 - Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt12 + (+Ch5A1_00 * Ch5A2_22 + Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 + Ch5A1_03 * Ch5A2_21 + Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 - Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 + Ch5A1_30 * Ch5A2_12 - Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt13 + (+Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 - Ch5A1_10 * Ch5A2_01 - Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 + Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 + Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 + Ch5A1_31 * Ch5A2_20 - Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt20 + (-Ch5A1_00 * Ch5A2_01 + Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 + Ch5A1_03 * Ch5A2_02 - Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 - Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 + Ch5A1_30 * Ch5A2_31 - Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt21 + (-Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 + Ch5A1_03 * Ch5A2_32 + Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 + Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 + Ch5A1_22 * Ch5A2_13 + Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt22 + (-Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 + Ch5A1_02 * Ch5A2_23 + Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 - Ch5A1_21 * Ch5A2_00 - Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 + Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 - Ch5A1_33 * Ch5A2_12)*Pt23 + (-Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 + Ch5A1_02 * Ch5A2_12 - Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 - Ch5A1_21 * Ch5A2_31 - Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 + Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 - Ch5A1_33 * Ch5A2_23)*Pt30 + (-Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 + Ch5A1_03 * Ch5A2_03 + Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 + Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 - Ch5A1_22 * Ch5A2_22 + Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt31 + (-Ch5A1_00 * Ch5A2_30 + Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 - Ch5A1_03 * Ch5A2_33 + Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 - Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 + Ch5A1_30 * Ch5A2_00 - Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt32 + (-Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 - Ch5A1_10 * Ch5A2_30 - Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 + Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 - Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 - Ch5A1_31 * Ch5A2_11 - Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt33) / (2 * pi), DG_vec, 1, 1, 3, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_20 - Ch5A1_01 * Ch5A2_21 - Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 - Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 - Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 - Ch5A1_22 * Ch5A2_02 - Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt00 + (-Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 - Ch5A1_02 * Ch5A2_32 - Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 - Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 + Ch5A1_23 * Ch5A2_13 + Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 + Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt01 + (+Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 + Ch5A1_10 * Ch5A2_10 - Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 + Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 + Ch5A1_23 * Ch5A2_23 + Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 - Ch5A1_33 * Ch5A2_33)*Pt02 + (+Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 + Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 - Ch5A1_11 * Ch5A2_01 - Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 - Ch5A1_30 * Ch5A2_20 + Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt03 + (+Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 + Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 - Ch5A1_11 * Ch5A2_30 + Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 + Ch5A1_30 * Ch5A2_11 + Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt10 + (+Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 + Ch5A1_10 * Ch5A2_21 + Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 + Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 + Ch5A1_23 * Ch5A2_12 + Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 + Ch5A1_33 * Ch5A2_02)*Pt11 + (-Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 - Ch5A1_02 * Ch5A2_03 + Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 - Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 - Ch5A1_23 * Ch5A2_22 + Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 - Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt12 + (+Ch5A1_00 * Ch5A2_11 - Ch5A1_01 * Ch5A2_10 + Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 - Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 + Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 + Ch5A1_22 * Ch5A2_33 - Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt13 + (+Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 - Ch5A1_02 * Ch5A2_20 + Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 - Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 + Ch5A1_23 * Ch5A2_01 + Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 + Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt20 + (-Ch5A1_00 * Ch5A2_32 + Ch5A1_01 * Ch5A2_33 + Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 - Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 + Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 - Ch5A1_22 * Ch5A2_10 + Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt21 + (+Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 + Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 - Ch5A1_11 * Ch5A2_13 - Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 - Ch5A1_30 * Ch5A2_32 - Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt22 + (+Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 + Ch5A1_10 * Ch5A2_02 + Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 - Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 + Ch5A1_23 * Ch5A2_31 - Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 + Ch5A1_33 * Ch5A2_21)*Pt23 + (+Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 - Ch5A1_10 * Ch5A2_33 + Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 + Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 + Ch5A1_23 * Ch5A2_00 + Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 + Ch5A1_33 * Ch5A2_10)*Pt30 + (-Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 + Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 + Ch5A1_11 * Ch5A2_22 - Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 - Ch5A1_30 * Ch5A2_03 + Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt31 + (-Ch5A1_00 * Ch5A2_03 - Ch5A1_01 * Ch5A2_02 + Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 - Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 + Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 - Ch5A1_22 * Ch5A2_21 - Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt32 + (-Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 + Ch5A1_02 * Ch5A2_11 + Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 + Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 + Ch5A1_23 * Ch5A2_30 + Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 + Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt33) / (2 * pi), DG_vec, 1, 2, 0, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_21 + Ch5A1_01 * Ch5A2_20 + Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 + Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 + Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 + Ch5A1_20 * Ch5A2_01 - Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt00 + (-Ch5A1_00 * Ch5A2_31 + Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 - Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 + Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 + Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 + Ch5A1_33 * Ch5A2_02)*Pt01 + (-Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 + Ch5A1_12 * Ch5A2_13 - Ch5A1_13 * Ch5A2_12 - Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 - Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 + Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 - Ch5A1_33 * Ch5A2_32)*Pt02 + (+Ch5A1_00 * Ch5A2_11 - Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 + Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 - Ch5A1_11 * Ch5A2_00 + Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 - Ch5A1_32 * Ch5A2_23 + Ch5A1_33 * Ch5A2_22)*Pt03 + (-Ch5A1_00 * Ch5A2_20 - Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 + Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 - Ch5A1_11 * Ch5A2_31 + Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 - Ch5A1_32 * Ch5A2_12 - Ch5A1_33 * Ch5A2_13)*Pt10 + (-Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 - Ch5A1_12 * Ch5A2_22 - Ch5A1_13 * Ch5A2_23 - Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 - Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 + Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 - Ch5A1_33 * Ch5A2_03)*Pt11 + (-Ch5A1_00 * Ch5A2_00 + Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 + Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 + Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 + Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 - Ch5A1_33 * Ch5A2_33)*Pt12 + (-Ch5A1_00 * Ch5A2_10 - Ch5A1_01 * Ch5A2_11 + Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 + Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 - Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 + Ch5A1_20 * Ch5A2_30 - Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt13 + (-Ch5A1_00 * Ch5A2_23 - Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 + Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 + Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 + Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 + Ch5A1_33 * Ch5A2_10)*Pt20 + (+Ch5A1_00 * Ch5A2_33 + Ch5A1_01 * Ch5A2_32 + Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 + Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 - Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 + Ch5A1_20 * Ch5A2_13 - Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt21 + (-Ch5A1_00 * Ch5A2_03 - Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 + Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 - Ch5A1_11 * Ch5A2_12 - Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 - Ch5A1_32 * Ch5A2_31 - Ch5A1_33 * Ch5A2_30)*Pt22 + (-Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 + Ch5A1_12 * Ch5A2_01 - Ch5A1_13 * Ch5A2_00 + Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 - Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 + Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 - Ch5A1_33 * Ch5A2_20)*Pt23 + (+Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 + Ch5A1_12 * Ch5A2_30 - Ch5A1_13 * Ch5A2_31 - Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 - Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 + Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 + Ch5A1_33 * Ch5A2_11)*Pt30 + (-Ch5A1_00 * Ch5A2_32 + Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 + Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 - Ch5A1_11 * Ch5A2_23 + Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 - Ch5A1_32 * Ch5A2_00 - Ch5A1_33 * Ch5A2_01)*Pt31 + (-Ch5A1_00 * Ch5A2_02 + Ch5A1_01 * Ch5A2_03 + Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 + Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 - Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 - Ch5A1_20 * Ch5A2_22 - Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt32 + (-Ch5A1_00 * Ch5A2_12 + Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 + Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 + Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 + Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 + Ch5A1_33 * Ch5A2_21)*Pt33) / (2 * pi), DG_vec, 1, 2, 1, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 + Ch5A1_03 * Ch5A2_21 + Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 + Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 - Ch5A1_22 * Ch5A2_00 + Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt00 + (-Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 + Ch5A1_02 * Ch5A2_30 + Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 + Ch5A1_21 * Ch5A2_13 - Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 + Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 - Ch5A1_33 * Ch5A2_01)*Pt01 + (-Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 + Ch5A1_10 * Ch5A2_12 - Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 - Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 - Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 - Ch5A1_31 * Ch5A2_33 + Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt02 + (+Ch5A1_00 * Ch5A2_12 + Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 - Ch5A1_03 * Ch5A2_11 + Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 + Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 - Ch5A1_30 * Ch5A2_22 + Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt03 + (+Ch5A1_00 * Ch5A2_23 - Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 + Ch5A1_03 * Ch5A2_20 - Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 + Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 + Ch5A1_30 * Ch5A2_13 + Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt10 + (+Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 + Ch5A1_10 * Ch5A2_23 + Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 + Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 + Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 + Ch5A1_31 * Ch5A2_02 + Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt11 + (-Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 + Ch5A1_02 * Ch5A2_01 + Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 - Ch5A1_21 * Ch5A2_22 - Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 + Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 - Ch5A1_33 * Ch5A2_30)*Pt12 + (+Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 + Ch5A1_03 * Ch5A2_10 + Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 + Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 - Ch5A1_22 * Ch5A2_31 + Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt13 + (-Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 - Ch5A1_02 * Ch5A2_22 + Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 + Ch5A1_21 * Ch5A2_01 - Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 - Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 - Ch5A1_33 * Ch5A2_13)*Pt20 + (+Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 - Ch5A1_03 * Ch5A2_33 + Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 - Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 - Ch5A1_22 * Ch5A2_12 + Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt21 + (+Ch5A1_00 * Ch5A2_00 + Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 + Ch5A1_03 * Ch5A2_03 + Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 + Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 + Ch5A1_30 * Ch5A2_30 + Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt22 + (-Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 + Ch5A1_10 * Ch5A2_00 - Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 + Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 - Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 + Ch5A1_31 * Ch5A2_21 - Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt23 + (-Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 + Ch5A1_10 * Ch5A2_31 - Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 + Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 - Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 + Ch5A1_31 * Ch5A2_10 + Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt30 + (+Ch5A1_00 * Ch5A2_31 + Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 + Ch5A1_03 * Ch5A2_32 + Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 - Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 + Ch5A1_30 * Ch5A2_01 + Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt31 + (+Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 + Ch5A1_03 * Ch5A2_02 - Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 + Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 - Ch5A1_22 * Ch5A2_23 - Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt32 + (+Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 + Ch5A1_02 * Ch5A2_13 + Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 + Ch5A1_21 * Ch5A2_30 + Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 + Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 + Ch5A1_33 * Ch5A2_22)*Pt33) / (2 * pi), DG_vec, 1, 2, 2, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 + Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 + Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 + Ch5A1_13 * Ch5A2_30 + Ch5A1_20 * Ch5A2_03 + Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt00 + (-Ch5A1_00 * Ch5A2_33 + Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 - Ch5A1_21 * Ch5A2_12 + Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 - Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 + Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt01 + (-Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 - Ch5A1_12 * Ch5A2_11 + Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 - Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 - Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 + Ch5A1_31 * Ch5A2_32 - Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt02 + (+Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 + Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 + Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 - Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 + Ch5A1_32 * Ch5A2_21 - Ch5A1_33 * Ch5A2_20)*Pt03 + (-Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 - Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 + Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 - Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 + Ch5A1_32 * Ch5A2_10 + Ch5A1_33 * Ch5A2_11)*Pt10 + (-Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 + Ch5A1_12 * Ch5A2_20 + Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 + Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 + Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 + Ch5A1_31 * Ch5A2_03 - Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt11 + (+Ch5A1_00 * Ch5A2_02 + Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 - Ch5A1_21 * Ch5A2_23 - Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 - Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 + Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt12 + (-Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 - Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 + Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 + Ch5A1_13 * Ch5A2_01 + Ch5A1_20 * Ch5A2_32 - Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt13 + (+Ch5A1_00 * Ch5A2_21 + Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 - Ch5A1_21 * Ch5A2_00 - Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 + Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 + Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt20 + (-Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 + Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 + Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 - Ch5A1_13 * Ch5A2_22 - Ch5A1_20 * Ch5A2_11 + Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt21 + (+Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 - Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 - Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 - Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 - Ch5A1_32 * Ch5A2_33 - Ch5A1_33 * Ch5A2_32)*Pt22 + (+Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 + Ch5A1_12 * Ch5A2_03 + Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 + Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 - Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 + Ch5A1_31 * Ch5A2_20 - Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt23 + (-Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 + Ch5A1_12 * Ch5A2_32 - Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 + Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 - Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 - Ch5A1_31 * Ch5A2_11 - Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt30 + (+Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 - Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 + Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 - Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 + Ch5A1_32 * Ch5A2_02 - Ch5A1_33 * Ch5A2_03)*Pt31 + (-Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 + Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 - Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 + Ch5A1_13 * Ch5A2_13 + Ch5A1_20 * Ch5A2_20 + Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt32 + (+Ch5A1_00 * Ch5A2_10 - Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 - Ch5A1_21 * Ch5A2_31 - Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 - Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 - Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt33) / (2 * pi), DG_vec, 1, 2, 3, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 - Ch5A1_02 * Ch5A2_32 - Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 - Ch5A1_21 * Ch5A2_11 - Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 - Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 - Ch5A1_33 * Ch5A2_03)*Pt00 + (+Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 + Ch5A1_03 * Ch5A2_23 - Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 + Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 - Ch5A1_22 * Ch5A2_02 - Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt01 + (-Ch5A1_00 * Ch5A2_10 - Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 - Ch5A1_03 * Ch5A2_13 + Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 + Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 - Ch5A1_30 * Ch5A2_20 + Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt02 + (+Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 + Ch5A1_10 * Ch5A2_10 - Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 + Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 - Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 + Ch5A1_31 * Ch5A2_31 + Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt03 + (+Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 + Ch5A1_10 * Ch5A2_21 + Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 - Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 + Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 + Ch5A1_31 * Ch5A2_00 + Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt10 + (-Ch5A1_00 * Ch5A2_21 + Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 + Ch5A1_03 * Ch5A2_22 + Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 + Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 + Ch5A1_30 * Ch5A2_11 + Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt11 + (-Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 + Ch5A1_03 * Ch5A2_12 - Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 + Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 + Ch5A1_22 * Ch5A2_33 - Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt12 + (-Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 - Ch5A1_02 * Ch5A2_03 + Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 + Ch5A1_21 * Ch5A2_20 - Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 - Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 - Ch5A1_33 * Ch5A2_32)*Pt13 + (+Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 + Ch5A1_03 * Ch5A2_31 + Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 + Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 - Ch5A1_22 * Ch5A2_10 + Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt20 + (+Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 - Ch5A1_02 * Ch5A2_20 + Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 + Ch5A1_21 * Ch5A2_03 - Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 - Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 + Ch5A1_33 * Ch5A2_11)*Pt21 + (+Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 + Ch5A1_10 * Ch5A2_02 + Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 + Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 + Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 + Ch5A1_31 * Ch5A2_23 + Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt22 + (-Ch5A1_00 * Ch5A2_02 + Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 - Ch5A1_03 * Ch5A2_01 + Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 - Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 - Ch5A1_30 * Ch5A2_32 - Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt23 + (+Ch5A1_00 * Ch5A2_33 + Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 - Ch5A1_03 * Ch5A2_30 + Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 + Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 - Ch5A1_30 * Ch5A2_03 + Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt30 + (+Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 - Ch5A1_10 * Ch5A2_33 + Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 + Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 + Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 + Ch5A1_31 * Ch5A2_12 - Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt31 + (-Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 + Ch5A1_02 * Ch5A2_11 + Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 + Ch5A1_21 * Ch5A2_32 - Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 + Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 - Ch5A1_33 * Ch5A2_20)*Pt32 + (+Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 + Ch5A1_03 * Ch5A2_00 - Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 - Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 - Ch5A1_22 * Ch5A2_21 - Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt33) / (2 * pi), DG_vec, 1, 3, 0, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_31 + Ch5A1_01 * Ch5A2_30 + Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 - Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 + Ch5A1_21 * Ch5A2_10 + Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 + Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 + Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt00 + (+Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 + Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 - Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 + Ch5A1_13 * Ch5A2_32 + Ch5A1_20 * Ch5A2_01 - Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 - Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 + Ch5A1_33 * Ch5A2_12)*Pt01 + (-Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 + Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 - Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 + Ch5A1_13 * Ch5A2_02 - Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 - Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 - Ch5A1_32 * Ch5A2_23 + Ch5A1_33 * Ch5A2_22)*Pt02 + (-Ch5A1_00 * Ch5A2_01 - Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 + Ch5A1_11 * Ch5A2_10 + Ch5A1_12 * Ch5A2_13 - Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 + Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 - Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 - Ch5A1_31 * Ch5A2_30 - Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt03 + (-Ch5A1_00 * Ch5A2_30 - Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 + Ch5A1_11 * Ch5A2_21 - Ch5A1_12 * Ch5A2_22 - Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 - Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 + Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 - Ch5A1_31 * Ch5A2_01 + Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt10 + (+Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 - Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 - Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 - Ch5A1_13 * Ch5A2_33 - Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 - Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 - Ch5A1_32 * Ch5A2_12 - Ch5A1_33 * Ch5A2_13)*Pt11 + (+Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 - Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 - Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 + Ch5A1_13 * Ch5A2_03 + Ch5A1_20 * Ch5A2_30 - Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 + Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 + Ch5A1_33 * Ch5A2_23)*Pt12 + (-Ch5A1_00 * Ch5A2_00 + Ch5A1_01 * Ch5A2_01 - Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 - Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 + Ch5A1_21 * Ch5A2_21 - Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 + Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 + Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt13 + (-Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 - Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 + Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 + Ch5A1_13 * Ch5A2_20 + Ch5A1_20 * Ch5A2_13 - Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 - Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 + Ch5A1_33 * Ch5A2_00)*Pt20 + (-Ch5A1_00 * Ch5A2_23 - Ch5A1_01 * Ch5A2_22 - Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 - Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 + Ch5A1_21 * Ch5A2_02 + Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 + Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 - Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt21 + (-Ch5A1_00 * Ch5A2_13 - Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 + Ch5A1_11 * Ch5A2_02 + Ch5A1_12 * Ch5A2_01 - Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 + Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 + Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 + Ch5A1_31 * Ch5A2_22 + Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt22 + (+Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 + Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 - Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 + Ch5A1_13 * Ch5A2_10 - Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 + Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 - Ch5A1_32 * Ch5A2_31 - Ch5A1_33 * Ch5A2_30)*Pt23 + (+Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 + Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 + Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 + Ch5A1_13 * Ch5A2_21 - Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 - Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 - Ch5A1_32 * Ch5A2_00 - Ch5A1_33 * Ch5A2_01)*Pt30 + (+Ch5A1_00 * Ch5A2_22 - Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 - Ch5A1_11 * Ch5A2_33 + Ch5A1_12 * Ch5A2_30 - Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 + Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 + Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 - Ch5A1_31 * Ch5A2_13 + Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt31 + (-Ch5A1_00 * Ch5A2_12 + Ch5A1_01 * Ch5A2_13 - Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 - Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 - Ch5A1_21 * Ch5A2_33 + Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 - Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 + Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt32 + (+Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 - Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 - Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 - Ch5A1_13 * Ch5A2_11 - Ch5A1_20 * Ch5A2_22 - Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 - Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 + Ch5A1_33 * Ch5A2_31)*Pt33) / (2 * pi), DG_vec, 1, 3, 1, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 + Ch5A1_02 * Ch5A2_30 + Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 - Ch5A1_12 * Ch5A2_20 - Ch5A1_13 * Ch5A2_21 + Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 + Ch5A1_22 * Ch5A2_10 + Ch5A1_23 * Ch5A2_11 + Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 - Ch5A1_32 * Ch5A2_00 + Ch5A1_33 * Ch5A2_01)*Pt00 + (+Ch5A1_00 * Ch5A2_22 + Ch5A1_01 * Ch5A2_23 - Ch5A1_02 * Ch5A2_20 - Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 + Ch5A1_11 * Ch5A2_33 - Ch5A1_12 * Ch5A2_30 - Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 - Ch5A1_22 * Ch5A2_00 + Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 - Ch5A1_32 * Ch5A2_10 - Ch5A1_33 * Ch5A2_11)*Pt01 + (-Ch5A1_00 * Ch5A2_12 - Ch5A1_01 * Ch5A2_13 + Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 - Ch5A1_10 * Ch5A2_02 + Ch5A1_11 * Ch5A2_03 + Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 - Ch5A1_20 * Ch5A2_32 + Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 - Ch5A1_30 * Ch5A2_22 + Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt02 + (-Ch5A1_00 * Ch5A2_02 - Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 + Ch5A1_10 * Ch5A2_12 - Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 + Ch5A1_20 * Ch5A2_22 - Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 + Ch5A1_23 * Ch5A2_21 - Ch5A1_30 * Ch5A2_32 + Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 - Ch5A1_33 * Ch5A2_31)*Pt03 + (+Ch5A1_00 * Ch5A2_33 - Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 + Ch5A1_10 * Ch5A2_23 + Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 - Ch5A1_20 * Ch5A2_13 - Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 + Ch5A1_23 * Ch5A2_10 - Ch5A1_30 * Ch5A2_03 - Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 - Ch5A1_33 * Ch5A2_00)*Pt10 + (-Ch5A1_00 * Ch5A2_23 + Ch5A1_01 * Ch5A2_22 + Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 + Ch5A1_10 * Ch5A2_33 + Ch5A1_11 * Ch5A2_32 + Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 - Ch5A1_20 * Ch5A2_03 - Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 + Ch5A1_30 * Ch5A2_13 + Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt11 + (-Ch5A1_00 * Ch5A2_13 + Ch5A1_01 * Ch5A2_12 + Ch5A1_02 * Ch5A2_11 - Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 - Ch5A1_11 * Ch5A2_02 - Ch5A1_12 * Ch5A2_01 - Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 - Ch5A1_22 * Ch5A2_31 + Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 - Ch5A1_32 * Ch5A2_21 + Ch5A1_33 * Ch5A2_20)*Pt12 + (-Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 + Ch5A1_02 * Ch5A2_01 + Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 + Ch5A1_12 * Ch5A2_11 - Ch5A1_13 * Ch5A2_10 + Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 + Ch5A1_22 * Ch5A2_21 - Ch5A1_23 * Ch5A2_20 - Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 - Ch5A1_32 * Ch5A2_31 + Ch5A1_33 * Ch5A2_30)*Pt13 + (-Ch5A1_00 * Ch5A2_30 + Ch5A1_01 * Ch5A2_31 - Ch5A1_02 * Ch5A2_32 + Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 - Ch5A1_11 * Ch5A2_21 + Ch5A1_12 * Ch5A2_22 - Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 - Ch5A1_22 * Ch5A2_12 + Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 - Ch5A1_32 * Ch5A2_02 + Ch5A1_33 * Ch5A2_03)*Pt20 + (-Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 - Ch5A1_02 * Ch5A2_22 + Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 - Ch5A1_12 * Ch5A2_32 + Ch5A1_13 * Ch5A2_33 + Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 + Ch5A1_22 * Ch5A2_02 - Ch5A1_23 * Ch5A2_03 + Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 - Ch5A1_32 * Ch5A2_12 + Ch5A1_33 * Ch5A2_13)*Pt21 + (-Ch5A1_00 * Ch5A2_10 + Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 + Ch5A1_10 * Ch5A2_00 - Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 - Ch5A1_20 * Ch5A2_30 - Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 - Ch5A1_23 * Ch5A2_33 - Ch5A1_30 * Ch5A2_20 - Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 - Ch5A1_33 * Ch5A2_23)*Pt22 + (-Ch5A1_00 * Ch5A2_00 - Ch5A1_01 * Ch5A2_01 + Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 - Ch5A1_10 * Ch5A2_10 - Ch5A1_11 * Ch5A2_11 + Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 - Ch5A1_20 * Ch5A2_20 - Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 + Ch5A1_30 * Ch5A2_30 + Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt23 + (-Ch5A1_00 * Ch5A2_31 - Ch5A1_01 * Ch5A2_30 - Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 - Ch5A1_10 * Ch5A2_21 + Ch5A1_11 * Ch5A2_20 + Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 + Ch5A1_20 * Ch5A2_11 - Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 + Ch5A1_30 * Ch5A2_01 + Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt30 + (-Ch5A1_00 * Ch5A2_21 - Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 + Ch5A1_10 * Ch5A2_31 - Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 - Ch5A1_20 * Ch5A2_01 - Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 + Ch5A1_23 * Ch5A2_02 + Ch5A1_30 * Ch5A2_11 - Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 - Ch5A1_33 * Ch5A2_12)*Pt31 + (+Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 + Ch5A1_02 * Ch5A2_13 + Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 - Ch5A1_12 * Ch5A2_03 - Ch5A1_13 * Ch5A2_02 + Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 - Ch5A1_22 * Ch5A2_33 - Ch5A1_23 * Ch5A2_32 + Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 - Ch5A1_32 * Ch5A2_23 - Ch5A1_33 * Ch5A2_22)*Pt32 + (-Ch5A1_00 * Ch5A2_01 + Ch5A1_01 * Ch5A2_00 - Ch5A1_02 * Ch5A2_03 - Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 - Ch5A1_11 * Ch5A2_10 - Ch5A1_12 * Ch5A2_13 - Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 - Ch5A1_22 * Ch5A2_23 - Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 + Ch5A1_32 * Ch5A2_33 + Ch5A1_33 * Ch5A2_32)*Pt33) / (2 * pi), DG_vec, 1, 3, 2, R, ns, nt, nu);
    addG((+(-Ch5A1_00 * Ch5A2_33 + Ch5A1_01 * Ch5A2_32 - Ch5A1_02 * Ch5A2_31 + Ch5A1_03 * Ch5A2_30 - Ch5A1_10 * Ch5A2_23 - Ch5A1_11 * Ch5A2_22 + Ch5A1_12 * Ch5A2_21 - Ch5A1_13 * Ch5A2_20 + Ch5A1_20 * Ch5A2_13 + Ch5A1_21 * Ch5A2_12 - Ch5A1_22 * Ch5A2_11 + Ch5A1_23 * Ch5A2_10 + Ch5A1_30 * Ch5A2_03 + Ch5A1_31 * Ch5A2_02 - Ch5A1_32 * Ch5A2_01 - Ch5A1_33 * Ch5A2_00)*Pt00 + (+Ch5A1_00 * Ch5A2_23 - Ch5A1_01 * Ch5A2_22 + Ch5A1_02 * Ch5A2_21 - Ch5A1_03 * Ch5A2_20 - Ch5A1_10 * Ch5A2_33 - Ch5A1_11 * Ch5A2_32 + Ch5A1_12 * Ch5A2_31 - Ch5A1_13 * Ch5A2_30 + Ch5A1_20 * Ch5A2_03 + Ch5A1_21 * Ch5A2_02 - Ch5A1_22 * Ch5A2_01 - Ch5A1_23 * Ch5A2_00 - Ch5A1_30 * Ch5A2_13 - Ch5A1_31 * Ch5A2_12 + Ch5A1_32 * Ch5A2_11 - Ch5A1_33 * Ch5A2_10)*Pt01 + (-Ch5A1_00 * Ch5A2_13 + Ch5A1_01 * Ch5A2_12 - Ch5A1_02 * Ch5A2_11 + Ch5A1_03 * Ch5A2_10 - Ch5A1_10 * Ch5A2_03 - Ch5A1_11 * Ch5A2_02 + Ch5A1_12 * Ch5A2_01 + Ch5A1_13 * Ch5A2_00 - Ch5A1_20 * Ch5A2_33 - Ch5A1_21 * Ch5A2_32 + Ch5A1_22 * Ch5A2_31 - Ch5A1_23 * Ch5A2_30 - Ch5A1_30 * Ch5A2_23 - Ch5A1_31 * Ch5A2_22 + Ch5A1_32 * Ch5A2_21 - Ch5A1_33 * Ch5A2_20)*Pt02 + (-Ch5A1_00 * Ch5A2_03 + Ch5A1_01 * Ch5A2_02 - Ch5A1_02 * Ch5A2_01 - Ch5A1_03 * Ch5A2_00 + Ch5A1_10 * Ch5A2_13 + Ch5A1_11 * Ch5A2_12 - Ch5A1_12 * Ch5A2_11 + Ch5A1_13 * Ch5A2_10 + Ch5A1_20 * Ch5A2_23 + Ch5A1_21 * Ch5A2_22 - Ch5A1_22 * Ch5A2_21 + Ch5A1_23 * Ch5A2_20 - Ch5A1_30 * Ch5A2_33 - Ch5A1_31 * Ch5A2_32 + Ch5A1_32 * Ch5A2_31 - Ch5A1_33 * Ch5A2_30)*Pt03 + (-Ch5A1_00 * Ch5A2_32 - Ch5A1_01 * Ch5A2_33 - Ch5A1_02 * Ch5A2_30 - Ch5A1_03 * Ch5A2_31 - Ch5A1_10 * Ch5A2_22 + Ch5A1_11 * Ch5A2_23 + Ch5A1_12 * Ch5A2_20 + Ch5A1_13 * Ch5A2_21 + Ch5A1_20 * Ch5A2_12 - Ch5A1_21 * Ch5A2_13 - Ch5A1_22 * Ch5A2_10 - Ch5A1_23 * Ch5A2_11 + Ch5A1_30 * Ch5A2_02 - Ch5A1_31 * Ch5A2_03 + Ch5A1_32 * Ch5A2_00 - Ch5A1_33 * Ch5A2_01)*Pt10 + (+Ch5A1_00 * Ch5A2_22 + Ch5A1_01 * Ch5A2_23 + Ch5A1_02 * Ch5A2_20 + Ch5A1_03 * Ch5A2_21 - Ch5A1_10 * Ch5A2_32 + Ch5A1_11 * Ch5A2_33 + Ch5A1_12 * Ch5A2_30 + Ch5A1_13 * Ch5A2_31 + Ch5A1_20 * Ch5A2_02 - Ch5A1_21 * Ch5A2_03 + Ch5A1_22 * Ch5A2_00 - Ch5A1_23 * Ch5A2_01 - Ch5A1_30 * Ch5A2_12 + Ch5A1_31 * Ch5A2_13 + Ch5A1_32 * Ch5A2_10 + Ch5A1_33 * Ch5A2_11)*Pt11 + (+Ch5A1_00 * Ch5A2_12 + Ch5A1_01 * Ch5A2_13 + Ch5A1_02 * Ch5A2_10 + Ch5A1_03 * Ch5A2_11 + Ch5A1_10 * Ch5A2_02 - Ch5A1_11 * Ch5A2_03 + Ch5A1_12 * Ch5A2_00 - Ch5A1_13 * Ch5A2_01 + Ch5A1_20 * Ch5A2_32 - Ch5A1_21 * Ch5A2_33 - Ch5A1_22 * Ch5A2_30 - Ch5A1_23 * Ch5A2_31 + Ch5A1_30 * Ch5A2_22 - Ch5A1_31 * Ch5A2_23 - Ch5A1_32 * Ch5A2_20 - Ch5A1_33 * Ch5A2_21)*Pt12 + (+Ch5A1_00 * Ch5A2_02 + Ch5A1_01 * Ch5A2_03 - Ch5A1_02 * Ch5A2_00 + Ch5A1_03 * Ch5A2_01 - Ch5A1_10 * Ch5A2_12 + Ch5A1_11 * Ch5A2_13 + Ch5A1_12 * Ch5A2_10 + Ch5A1_13 * Ch5A2_11 - Ch5A1_20 * Ch5A2_22 + Ch5A1_21 * Ch5A2_23 + Ch5A1_22 * Ch5A2_20 + Ch5A1_23 * Ch5A2_21 + Ch5A1_30 * Ch5A2_32 - Ch5A1_31 * Ch5A2_33 - Ch5A1_32 * Ch5A2_30 - Ch5A1_33 * Ch5A2_31)*Pt13 + (+Ch5A1_00 * Ch5A2_31 + Ch5A1_01 * Ch5A2_30 - Ch5A1_02 * Ch5A2_33 - Ch5A1_03 * Ch5A2_32 + Ch5A1_10 * Ch5A2_21 - Ch5A1_11 * Ch5A2_20 + Ch5A1_12 * Ch5A2_23 + Ch5A1_13 * Ch5A2_22 - Ch5A1_20 * Ch5A2_11 + Ch5A1_21 * Ch5A2_10 - Ch5A1_22 * Ch5A2_13 - Ch5A1_23 * Ch5A2_12 - Ch5A1_30 * Ch5A2_01 - Ch5A1_31 * Ch5A2_00 - Ch5A1_32 * Ch5A2_03 - Ch5A1_33 * Ch5A2_02)*Pt20 + (+Ch5A1_00 * Ch5A2_21 + Ch5A1_01 * Ch5A2_20 - Ch5A1_02 * Ch5A2_23 - Ch5A1_03 * Ch5A2_22 - Ch5A1_10 * Ch5A2_31 + Ch5A1_11 * Ch5A2_30 - Ch5A1_12 * Ch5A2_33 - Ch5A1_13 * Ch5A2_32 + Ch5A1_20 * Ch5A2_01 + Ch5A1_21 * Ch5A2_00 + Ch5A1_22 * Ch5A2_03 + Ch5A1_23 * Ch5A2_02 - Ch5A1_30 * Ch5A2_11 + Ch5A1_31 * Ch5A2_10 - Ch5A1_32 * Ch5A2_13 - Ch5A1_33 * Ch5A2_12)*Pt21 + (+Ch5A1_00 * Ch5A2_11 + Ch5A1_01 * Ch5A2_10 - Ch5A1_02 * Ch5A2_13 - Ch5A1_03 * Ch5A2_12 + Ch5A1_10 * Ch5A2_01 + Ch5A1_11 * Ch5A2_00 + Ch5A1_12 * Ch5A2_03 + Ch5A1_13 * Ch5A2_02 + Ch5A1_20 * Ch5A2_31 - Ch5A1_21 * Ch5A2_30 + Ch5A1_22 * Ch5A2_33 + Ch5A1_23 * Ch5A2_32 + Ch5A1_30 * Ch5A2_21 - Ch5A1_31 * Ch5A2_20 + Ch5A1_32 * Ch5A2_23 + Ch5A1_33 * Ch5A2_22)*Pt22 + (-Ch5A1_00 * Ch5A2_01 + Ch5A1_01 * Ch5A2_00 + Ch5A1_02 * Ch5A2_03 + Ch5A1_03 * Ch5A2_02 + Ch5A1_10 * Ch5A2_11 - Ch5A1_11 * Ch5A2_10 + Ch5A1_12 * Ch5A2_13 + Ch5A1_13 * Ch5A2_12 + Ch5A1_20 * Ch5A2_21 - Ch5A1_21 * Ch5A2_20 + Ch5A1_22 * Ch5A2_23 + Ch5A1_23 * Ch5A2_22 - Ch5A1_30 * Ch5A2_31 + Ch5A1_31 * Ch5A2_30 - Ch5A1_32 * Ch5A2_33 - Ch5A1_33 * Ch5A2_32)*Pt23 + (-Ch5A1_00 * Ch5A2_30 + Ch5A1_01 * Ch5A2_31 + Ch5A1_02 * Ch5A2_32 - Ch5A1_03 * Ch5A2_33 - Ch5A1_10 * Ch5A2_20 - Ch5A1_11 * Ch5A2_21 - Ch5A1_12 * Ch5A2_22 + Ch5A1_13 * Ch5A2_23 + Ch5A1_20 * Ch5A2_10 + Ch5A1_21 * Ch5A2_11 + Ch5A1_22 * Ch5A2_12 - Ch5A1_23 * Ch5A2_13 - Ch5A1_30 * Ch5A2_00 + Ch5A1_31 * Ch5A2_01 + Ch5A1_32 * Ch5A2_02 - Ch5A1_33 * Ch5A2_03)*Pt30 + (-Ch5A1_00 * Ch5A2_20 + Ch5A1_01 * Ch5A2_21 + Ch5A1_02 * Ch5A2_22 - Ch5A1_03 * Ch5A2_23 + Ch5A1_10 * Ch5A2_30 + Ch5A1_11 * Ch5A2_31 + Ch5A1_12 * Ch5A2_32 - Ch5A1_13 * Ch5A2_33 + Ch5A1_20 * Ch5A2_00 - Ch5A1_21 * Ch5A2_01 - Ch5A1_22 * Ch5A2_02 + Ch5A1_23 * Ch5A2_03 + Ch5A1_30 * Ch5A2_10 + Ch5A1_31 * Ch5A2_11 + Ch5A1_32 * Ch5A2_12 - Ch5A1_33 * Ch5A2_13)*Pt31 + (+Ch5A1_00 * Ch5A2_10 - Ch5A1_01 * Ch5A2_11 - Ch5A1_02 * Ch5A2_12 + Ch5A1_03 * Ch5A2_13 - Ch5A1_10 * Ch5A2_00 + Ch5A1_11 * Ch5A2_01 + Ch5A1_12 * Ch5A2_02 - Ch5A1_13 * Ch5A2_03 + Ch5A1_20 * Ch5A2_30 + Ch5A1_21 * Ch5A2_31 + Ch5A1_22 * Ch5A2_32 - Ch5A1_23 * Ch5A2_33 + Ch5A1_30 * Ch5A2_20 + Ch5A1_31 * Ch5A2_21 + Ch5A1_32 * Ch5A2_22 - Ch5A1_33 * Ch5A2_23)*Pt32 + (+Ch5A1_00 * Ch5A2_00 + Ch5A1_01 * Ch5A2_01 + Ch5A1_02 * Ch5A2_02 - Ch5A1_03 * Ch5A2_03 + Ch5A1_10 * Ch5A2_10 + Ch5A1_11 * Ch5A2_11 + Ch5A1_12 * Ch5A2_12 - Ch5A1_13 * Ch5A2_13 + Ch5A1_20 * Ch5A2_20 + Ch5A1_21 * Ch5A2_21 + Ch5A1_22 * Ch5A2_22 - Ch5A1_23 * Ch5A2_23 - Ch5A1_30 * Ch5A2_30 - Ch5A1_31 * Ch5A2_31 - Ch5A1_32 * Ch5A2_32 + Ch5A1_33 * Ch5A2_33)*Pt33) / (2 * pi), DG_vec, 1, 3, 3, R, ns, nt, nu);

}

////// non-Katanin flow

//Get propagator bubble for specified propagator arguments
inline double getPt(int mu, int nu, double w1, double w2, int i1, int i2, const double G_vec[]) {
    return getg(mu, w1, i1, G_vec)*getg(nu, w2, i2, G_vec);
}

//Load two-particle vertices that are required in the RPA channel in the array "RPAVertices"
inline void SetRPAVertices(double RPAVertices[], double s, double t, double u, double wpr, int nt, const double G_vec[]) {
    double w1p = 0.5*(s + t + u), w2p = 0.5*(s - t - u), w1 = 0.5*(s - t + u), w2 = 0.5*(s + t - u);
    pairWeight pw_1a = findPw(+w1p + wpr), pw_1b = findPw(w1 - wpr), pw_2a = findPw(+w2 + wpr), pw_2b = findPw(-w2p + wpr);

    Rvec R;
    list<Rvec>::iterator it;
    for (it = O.begin(); it != O.end(); ++it) {
        R = *it;

        for (int mu = 0; mu < 4; mu++) {
            for (int mu2 = 0; mu2 < 4; mu2++) {
                RPAVertices[(4 * mu + mu2)*RPAsize[2] + R.i*RPAsize[3] + (R.a1 + L)*RPAsize[4] + (R.a2 + L)] = getIntpolG(G_vec, 1, mu, mu2, R, pw_1a, nt, pw_1b);
                RPAVertices[RPAsize[1] + (4 * mu + mu2)*RPAsize[2] + R.i*RPAsize[3] + (R.a1 + L)*RPAsize[4] + (R.a2 + L)] = getIntpolG(G_vec, 1, mu, mu2, R, pw_2a, nt, pw_2b);
            }
        }
    }
}

//The prefactor of the propagator bubble in the u-channel may change due to the application of frequency symmetries
inline double uBubbleSign(int mu, int mu2) {
    if ((mu == 0 and mu2 != 0) || (mu != 0 and mu2 == 0)) { return -1; }
    else { return 1; }
}

//Compute the right-hand side of the two-particle vertex flow equations without the Katanin truncation
//Note that no frequency integration is needed here because of the sharp frequency cutoff.
void getDG(double DG_vec[], double Lam, const double G_vec[]) {
#pragma omp parallel for collapse(2)
    for (int nt = 1; nt <= N; ++nt) {
        for (int nu = -N; nu <= N; ++nu) {
            if (nu == 0) { continue; }
            double t = wp_vec[nt];
            double sgnnu = ((double)sign(nu));
            int absnu = abs(nu);
            double u = sgnnu * wp_vec[absnu];
            for (int ns = 1; ns <= absnu; ++ns) { // compute two-particle vertex only for nu<=ns. Two-particle vertex values for arguments nu>ns are obtained by applying the s<-->u symmetry.
                double s = wp_vec[ns];

                /*
                                double *RPAVertices1 = new double[RPAsize[0]];
                                double *RPAVertices2 = new double[RPAsize[0]];
                                double *RPAVertices3 = new double[RPAsize[0]];
                                double *RPAVertices4 = new double[RPAsize[0]];
                                SetRPAVertices(RPAVertices1, s,t,u,+Lam, nt);
                                SetRPAVertices(RPAVertices2, s,t,u,-Lam, nt);
                                SetRPAVertices(RPAVertices3, s,t,u,+Lam-t, nt);
                                SetRPAVertices(RPAVertices4, s,t,u,-Lam-t, nt);*/

                Rvec R;
                list<Rvec>::iterator it;
                for (it = Omaxreduced.begin(); it != Omaxreduced.end(); ++it) {
                    R = *it;

                    int Rf = getRfSublattice(R);

                    /*if(ns==1 && nt==3 && nu==2 && R.a1==1 && R.a2==0 && R.i==0){
                                                double i1= -getPt(0,3,+Lam+s,+Lam,R.i,Rf);
                                                double i2= getPt(3,0,+Lam+s,+Lam,R.i,Rf);
                                                double i3= -getPt(0,3,-Lam, -Lam-s,R.i,Rf);
                                                double i4= getPt(3,0,-Lam, -Lam-s,R.i,Rf);

                                                cout << "temp" << endl << i1 << endl << i2 << endl << i3 << endl << i4 << endl;
                                                int j=3;
                                        }*/

                    ///// s-channel:
                    //Some propagator bubble arguments have a negative prefactor, because in the s-channel one propagator is complex conjugated.
                    if (abs(+Lam + s) > Lam) {
                        double Prbubble[16];
                        for (int mu = 0; mu < 4; mu++) {
                            Prbubble[4 * mu + 0] = -getPt(mu, 0, +Lam + s, +Lam, R.i, Rf, G_vec);
                            for (int mu2 = 1; mu2 < 4; mu2++) {
                                Prbubble[4 * mu + mu2] = getPt(mu, mu2, +Lam + s, +Lam, R.i, Rf, G_vec);
                            }
                        }
                        sChannel(DG_vec, ns, nt, nu, +Lam, Prbubble, R, G_vec);
                    }
                    if (abs(-Lam + s) > Lam) {
                        double Prbubble[16];
                        for (int mu = 0; mu < 4; mu++) {
                            Prbubble[4 * mu + 0] = -getPt(mu, 0, -Lam + s, -Lam, R.i, Rf, G_vec);
                            for (int mu2 = 1; mu2 < 4; mu2++) {
                                Prbubble[4 * mu + mu2] = getPt(mu, mu2, -Lam + s, -Lam, R.i, Rf, G_vec);
                            }
                        }
                        sChannel(DG_vec, ns, nt, nu, -Lam, Prbubble, R, G_vec);
                    }
                    if (abs(+Lam - s) > Lam) {
                        double Prbubble[16];
                        for (int mu = 0; mu < 4; mu++) {
                            Prbubble[4 * mu + 0] = -getPt(mu, 0, +Lam, +Lam - s, R.i, Rf, G_vec);
                            for (int mu2 = 1; mu2 < 4; mu2++) {
                                Prbubble[4 * mu + mu2] = getPt(mu, mu2, +Lam, +Lam - s, R.i, Rf, G_vec);
                            }
                        }
                        sChannel(DG_vec, ns, nt, nu, +Lam - s, Prbubble, R, G_vec);
                    }
                    if (abs(-Lam - s) > Lam) {
                        double Prbubble[16];
                        for (int mu = 0; mu < 4; mu++) {
                            Prbubble[4 * mu + 0] = -getPt(mu, 0, -Lam, -Lam - s, R.i, Rf, G_vec);
                            for (int mu2 = 1; mu2 < 4; mu2++) {
                                Prbubble[4 * mu + mu2] = getPt(mu, mu2, -Lam, -Lam - s, R.i, Rf, G_vec);
                            }
                        }
                        sChannel(DG_vec, ns, nt, nu, -Lam - s, Prbubble, R, G_vec);
                    }

                    ///// t-channel
                    if (abs(+Lam + t) > Lam) {
                        double Prbubblei0i0[16];
                        double Prbubblei1i1[16];
                        double Prbubblei2i2[16];
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei0i0[4 * mu + mu2] = getPt(mu, mu2, +Lam + t, +Lam, 0, 0, G_vec); } }
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei1i1[4 * mu + mu2] = getPt(mu, mu2, +Lam + t, +Lam, 1, 1, G_vec); } }
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei2i2[4 * mu + mu2] = getPt(mu, mu2, +Lam + t, +Lam, 2, 2, G_vec); } }
                        tChannel2(DG_vec, ns, nt, nu, +Lam, Prbubblei0i0, Prbubblei1i1, Prbubblei2i2, R, G_vec);
                    }
                    if (abs(-Lam + t) > Lam) {
                        double Prbubblei0i0[16];
                        double Prbubblei1i1[16];
                        double Prbubblei2i2[16];
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei0i0[4 * mu + mu2] = getPt(mu, mu2, -Lam + t, -Lam, 0, 0, G_vec); } }
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei1i1[4 * mu + mu2] = getPt(mu, mu2, -Lam + t, -Lam, 1, 1, G_vec); } }
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei2i2[4 * mu + mu2] = getPt(mu, mu2, -Lam + t, -Lam, 2, 2, G_vec); } }
                        tChannel2(DG_vec, ns, nt, nu, -Lam, Prbubblei0i0, Prbubblei1i1, Prbubblei2i2, R, G_vec);
                    }
                    if (abs(+Lam - t) > Lam) {
                        double Prbubblei0i0[16];
                        double Prbubblei1i1[16];
                        double Prbubblei2i2[16];
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei0i0[4 * mu + mu2] = getPt(mu, mu2, +Lam, +Lam - t, 0, 0, G_vec); } }
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei1i1[4 * mu + mu2] = getPt(mu, mu2, +Lam, +Lam - t, 1, 1, G_vec); } }
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei2i2[4 * mu + mu2] = getPt(mu, mu2, +Lam, +Lam - t, 2, 2, G_vec); } }
                        tChannel2(DG_vec, ns, nt, nu, +Lam - t, Prbubblei0i0, Prbubblei1i1, Prbubblei2i2, R, G_vec);
                    }
                    if (abs(-Lam - t) > Lam) {
                        double Prbubblei0i0[16];
                        double Prbubblei1i1[16];
                        double Prbubblei2i2[16];
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei0i0[4 * mu + mu2] = getPt(mu, mu2, -Lam, -Lam - t, 0, 0, G_vec); } }
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei1i1[4 * mu + mu2] = getPt(mu, mu2, -Lam, -Lam - t, 1, 1, G_vec); } }
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubblei2i2[4 * mu + mu2] = getPt(mu, mu2, -Lam, -Lam - t, 2, 2, G_vec); } }
                        tChannel2(DG_vec, ns, nt, nu, -Lam - t, Prbubblei0i0, Prbubblei1i1, Prbubblei2i2, R, G_vec);
                    }

                    ///// u-channel
                    if (abs(+Lam + u) > Lam) {
                        double Prbubble[16];
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubble[4 * mu + mu2] = uBubbleSign(mu, mu2)*getPt(mu, mu2, +Lam + u, +Lam, Rf, R.i, G_vec); } }
                        uChannel(DG_vec, ns, nt, nu, +Lam, Prbubble, R, G_vec);
                    }
                    if (abs(-Lam + u) > Lam) {
                        double Prbubble[16];
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubble[4 * mu + mu2] = uBubbleSign(mu, mu2)*getPt(mu, mu2, -Lam + u, -Lam, Rf, R.i, G_vec); } }
                        uChannel(DG_vec, ns, nt, nu, -Lam, Prbubble, R, G_vec);
                    }
                    if (abs(+Lam - u) > Lam) {
                        double Prbubble[16];
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubble[4 * mu + mu2] = uBubbleSign(mu, mu2)*getPt(mu, mu2, +Lam, +Lam - u, Rf, R.i, G_vec); } }
                        uChannel(DG_vec, ns, nt, nu, +Lam - u, Prbubble, R, G_vec);
                    }
                    if (abs(-Lam - u) > Lam) {
                        double Prbubble[16];
                        for (int mu = 0; mu < 4; mu++) { for (int mu2 = 0; mu2 < 4; mu2++) { Prbubble[4 * mu + mu2] = uBubbleSign(mu, mu2)*getPt(mu, mu2, -Lam, -Lam - u, Rf, R.i, G_vec); } }
                        uChannel(DG_vec, ns, nt, nu, -Lam - u, Prbubble, R, G_vec);
                    }

                }
                /*
                                delete[]RPAVertices1;
                                delete[]RPAVertices2;
                                delete[]RPAVertices3;
                                delete[]RPAVertices4;*/
            }
        }
    }
}

///// Katanin terms

//Single-scale propagator within the Katanin trucation (Full derivative of the full propagator with respect to the cutoff parameter, see Eq. (38) in Phys. Rev. B 109, 174414)
inline double KataninPropagator(int mu, double w, int i, const double G_vec[], const double DG_vec[]) {
    double g0 = getg0(w, i, G_vec);
    double gx = getgz(1, w, i, G_vec);
    double gy = getgz(2, w, i, G_vec);
    double gz = getgz(3, w, i, G_vec);
    double gamma0 = getIntpolGamma(DG_vec, w, i);
    double gammax = getIntpolGammaz(DG_vec, 1, w, i);
    double gammay = getIntpolGammaz(DG_vec, 2, w, i);
    double gammaz = getIntpolGammaz(DG_vec, 3, w, i);
    if (mu == 0) {
        return (g0*g0 - gx * gx - gy * gy - gz * gz)*gamma0 - 2.0*g0*(gx*gammax + gy * gammay + gz * gammaz);
    }
    else
        if (mu == 1) {
            return (+g0 * g0 - gx * gx + gy * gy + gz * gz)*gammax - 2.0*gx*(-g0 * gamma0 + gy * gammay + gz * gammaz);
        }
        else if (mu == 2) {
            return (+g0 * g0 + gx * gx - gy * gy + gz * gz)*gammay - 2.0*gy*(-g0 * gamma0 + gx * gammax + gz * gammaz);
        }
        else if (mu == 3) {
            return (+g0 * g0 + gx * gx + gy * gy - gz * gz)*gammaz - 2.0*gz*(-g0 * gamma0 + gx * gammax + gy * gammay);
        }
    exit(1);
}

//Propagator bubble within Katanin truncation
double getPKat(int mu, int nu, double w, double wt, int i1, int i2, const double G_vec[], const double DG_vec[]) {
    //use pre-calculated self-energy derivative given by DG_vec
    return KataninPropagator(mu, w, i1, G_vec, DG_vec)*getg(nu, wt, i2, G_vec);
}

//This method computes the frequencies and weights for the frequency integration of the Katanin terms within trapezoidal rule.
//The sharp frequency cutoff results in two to three integration intervals. The lowest of the three integration intervals is handled directly in the method getDGsd_Kat as it is independent of the vertex frequency arguments s, t, and u.
//Integration boundaries are given exactly and are not approximated to be located at points of the frequency grid.
inline void KatIntegration(vector<double> *freqs, vector<double> *weights, double Lam, double w, int nw) {
    int lowborder = -1;
    int upborder;
    double wupborder, wlowborder;
    double wpr;
    double tw;

    //Integral from -infty to -Lambda-s
    wupborder = -w - Lam;
    for (int i = 0; i < 2 * N; i++) {
        if (wInt_vec[i] > -w - Lam)
        {
            upborder = i;
            break;
        }
    }

    if (upborder != 0) {
        if (upborder != N - nw) {
            for (int nK = 0; nK < upborder + 1; ++nK) {
                (*freqs).push_back(wInt_vec[nK]);
                (*weights).push_back(getTrapzWeightKat1(wInt_vec, upborder, wupborder, nK));
            }
        }
        else {
            for (int nK = 0; nK < upborder; ++nK) {
                (*freqs).push_back(wInt_vec[nK]);
                (*weights).push_back(getTrapzWeightKat1pol(wInt_vec, upborder, wupborder, nK));
            }
        }
    }

    //Integral from Lambda-s to -Lambda
    if (w > 2 * Lam)
    {
        wlowborder = Lam - w;
        for (int i = 0; i < 2 * N; i++) {
            if (wInt_vec[i] > wlowborder)
            {
                lowborder = i - 1;
                break;
            }
        }
        wupborder = -Lam;
        for (int i = 0; i < 2 * N; i++) {
            if (wInt_vec[i] > wupborder)
            {
                upborder = i;
                break;
            }
        }
        if (lowborder + 1 == upborder) {
            if (lowborder != N - nw) {
                wpr = wInt_vec[lowborder];
                tw = 0.5*(wupborder - wlowborder)*(2 - (wupborder + wlowborder - 2 * wInt_vec[lowborder]) / (wInt_vec[upborder] - wInt_vec[lowborder]));
                (*freqs).push_back(wInt_vec[lowborder]);
                (*weights).push_back(0.5*(wupborder - wlowborder)*(2 - (wupborder + wlowborder - 2 * wInt_vec[lowborder]) / (wInt_vec[upborder] - wInt_vec[lowborder])));

                wpr = wInt_vec[upborder];
                tw = 0.5*(wupborder - wlowborder)*(wupborder + wlowborder - 2 * wInt_vec[lowborder]) / (wInt_vec[upborder] - wInt_vec[lowborder]);
                (*freqs).push_back(wInt_vec[upborder]);
                (*weights).push_back(0.5*(wupborder - wlowborder)*(wupborder + wlowborder - 2 * wInt_vec[lowborder]) / (wInt_vec[upborder] - wInt_vec[lowborder]));
            }
            else {
                wpr = wInt_vec[upborder];
                tw = (wupborder - wlowborder);
                (*freqs).push_back(wInt_vec[upborder]);
                (*weights).push_back((wupborder - wlowborder));
            }

        }
        else if (lowborder + 2 == upborder) {
            if (lowborder != N - nw) {
                wpr = wInt_vec[lowborder + 1];
                tw = 0.5*((2 - (wpr - wlowborder) / (wpr - wInt_vec[lowborder]))*(wpr - wlowborder) + (2 - (wupborder - wpr) / (wInt_vec[upborder] - wpr))*(wupborder - wpr));
                (*freqs).push_back(wInt_vec[lowborder + 1]);
                (*weights).push_back(0.5*((2 - (wpr - wlowborder) / (wpr - wInt_vec[lowborder]))*(wpr - wlowborder) + (2 - (wupborder - wpr) / (wInt_vec[upborder] - wpr))*(wupborder - wpr)));
                wpr = wInt_vec[lowborder];
                tw = 0.5*(wInt_vec[lowborder + 1] - wlowborder)*(wInt_vec[lowborder + 1] - wlowborder) / (wInt_vec[lowborder + 1] - wpr);
                (*freqs).push_back(wInt_vec[lowborder]);
                (*weights).push_back(0.5*(wInt_vec[lowborder + 1] - wlowborder)*(wInt_vec[lowborder + 1] - wlowborder) / (wInt_vec[lowborder + 1] - wpr));
                wpr = wInt_vec[upborder];
                tw = 0.5*(wupborder - wInt_vec[lowborder + 1])*(wupborder - wInt_vec[lowborder + 1]) / (wpr - wInt_vec[lowborder + 1]);
                (*freqs).push_back(wInt_vec[upborder]);
                (*weights).push_back(0.5*(wupborder - wInt_vec[lowborder + 1])*(wupborder - wInt_vec[lowborder + 1]) / (wpr - wInt_vec[lowborder + 1]));
            }
            else {
                wpr = wInt_vec[lowborder + 1];
                tw = 0.5*(2 * (wpr - wlowborder) + (2 - (wupborder - wpr) / (wInt_vec[upborder] - wpr))*(wupborder - wpr));
                (*freqs).push_back(wInt_vec[lowborder + 1]);
                (*weights).push_back(0.5*(2 * (wpr - wlowborder) + (2 - (wupborder - wpr) / (wInt_vec[upborder] - wpr))*(wupborder - wpr)));
                wpr = wInt_vec[upborder];
                tw = 0.5*(wupborder - wInt_vec[lowborder + 1])*(wupborder - wInt_vec[lowborder + 1]) / (wpr - wInt_vec[lowborder + 1]);
                (*freqs).push_back(wInt_vec[upborder]);
                (*weights).push_back(0.5*(wupborder - wInt_vec[lowborder + 1])*(wupborder - wInt_vec[lowborder + 1]) / (wpr - wInt_vec[lowborder + 1]));
            }
        }
        else {
            for (int nK = lowborder + 2; nK < upborder - 1; ++nK) {
                wpr = wInt_vec[nK];
                tw = getTrapzWeight(wInt_vec, 2 * N, nK);
                (*freqs).push_back(wInt_vec[nK]);
                (*weights).push_back(getTrapzWeight(wInt_vec, 2 * N, nK));
            }


            //The first two integration frequencies have different weights (the weights make use of the sharp cutoff)
            if (lowborder != N - nw)
            {
                wpr = wInt_vec[lowborder + 1];
                tw = 0.5*(wInt_vec[lowborder + 2] - wpr + (2 - (wpr - wlowborder) / (wpr - wInt_vec[lowborder]))*(wpr - wlowborder));
                (*freqs).push_back(wInt_vec[lowborder + 1]);
                (*weights).push_back(0.5*(wInt_vec[lowborder + 2] - wpr + (2 - (wpr - wlowborder) / (wpr - wInt_vec[lowborder]))*(wpr - wlowborder)));
                wpr = wInt_vec[lowborder];
                tw = 0.5*(wInt_vec[lowborder + 1] - wlowborder)*(wInt_vec[lowborder + 1] - wlowborder) / (wInt_vec[lowborder + 1] - wpr);
                (*freqs).push_back(wInt_vec[lowborder]);
                (*weights).push_back(0.5*(wInt_vec[lowborder + 1] - wlowborder)*(wInt_vec[lowborder + 1] - wlowborder) / (wInt_vec[lowborder + 1] - wpr));
            }
            else {
                wpr = wInt_vec[lowborder + 1];
                tw = 0.5*(wInt_vec[lowborder + 2] + wInt_vec[lowborder + 1] - 2 * wlowborder);
                (*freqs).push_back(wInt_vec[lowborder + 1]);
                (*weights).push_back(0.5*(wInt_vec[lowborder + 2] + wInt_vec[lowborder + 1] - 2 * wlowborder));
            }

            //The last two integration frequencies have different weights (the weights make use of the sharp cutoff)
            wpr = wInt_vec[upborder - 1];
            tw = 0.5*(wpr - wInt_vec[upborder - 2] + (2 - (wupborder - wpr) / (wInt_vec[upborder] - wpr))*(wupborder - wpr));
            (*freqs).push_back(wInt_vec[upborder - 1]);
            (*weights).push_back(0.5*(wpr - wInt_vec[upborder - 2] + (2 - (wupborder - wpr) / (wInt_vec[upborder] - wpr))*(wupborder - wpr)));
            wpr = wInt_vec[upborder];
            tw = 0.5*(wupborder - wInt_vec[upborder - 1])*(wupborder - wInt_vec[upborder - 1]) / (wpr - wInt_vec[upborder - 1]);
            (*freqs).push_back(wInt_vec[upborder]);
            (*weights).push_back(0.5*(wupborder - wInt_vec[upborder - 1])*(wupborder - wInt_vec[upborder - 1]) / (wpr - wInt_vec[upborder - 1]));
        }

    }

}

//Method similar to "KatIntegration" that is required for the frequency integration in the computation of spin correlations, with the tiny change N->M*N and Int_vec->IntChi_vec in comparison to "KatIntegration". In the future, one may add an argument to the "KatIntegration" method such that one can have one method instead of two.
inline void NuIntegration(vector<double> *freqs, vector<double> *weights, double Lam, double w, int nw) {
    int lowborder = -1;
    int upborder;
    double wupborder, wlowborder;
    double wpr;
    double tw;

    //integral from -infty to -Lambda-s
    wupborder = -w - Lam;
    for (int i = 0; i < 2 * M*N; i++) {
        if (wIntChi_vec[i] > -w - Lam)
        {
            upborder = i;
            break;
        }
    }

    if (upborder != 0) {
        if (upborder != M * N - nw) {
            for (int nK = 0; nK < upborder + 1; ++nK) {
                (*freqs).push_back(wIntChi_vec[nK]);
                (*weights).push_back(getTrapzWeightKat1(wIntChi_vec, upborder, wupborder, nK));
            }
        }
        else {
            for (int nK = 0; nK < upborder; ++nK) {
                (*freqs).push_back(wIntChi_vec[nK]);
                (*weights).push_back(getTrapzWeightKat1pol(wIntChi_vec, upborder, wupborder, nK));
            }
        }
    }

    //integral from Lambda-s to -Lambda
    if (w > 2 * Lam)
    {

        wlowborder = Lam - w;
        for (int i = 0; i < 2 * M*N; i++) {
            if (wIntChi_vec[i] > wlowborder)
            {
                lowborder = i - 1;
                break;
            }
        }
        wupborder = -Lam;
        for (int i = 0; i < 2 * M*N; i++) {
            if (wIntChi_vec[i] > wupborder)
            {
                upborder = i;
                break;
            }
        }
        if (lowborder + 1 == upborder) {
            if (lowborder != M * N - nw) {
                wpr = wIntChi_vec[lowborder];
                tw = 0.5*(wupborder - wlowborder)*(2 - (wupborder + wlowborder - 2 * wIntChi_vec[lowborder]) / (wIntChi_vec[upborder] - wIntChi_vec[lowborder]));
                (*freqs).push_back(wIntChi_vec[lowborder]);
                (*weights).push_back(0.5*(wupborder - wlowborder)*(2 - (wupborder + wlowborder - 2 * wIntChi_vec[lowborder]) / (wIntChi_vec[upborder] - wIntChi_vec[lowborder])));

                wpr = wIntChi_vec[upborder];
                tw = 0.5*(wupborder - wlowborder)*(wupborder + wlowborder - 2 * wIntChi_vec[lowborder]) / (wIntChi_vec[upborder] - wIntChi_vec[lowborder]);
                (*freqs).push_back(wIntChi_vec[upborder]);
                (*weights).push_back(0.5*(wupborder - wlowborder)*(wupborder + wlowborder - 2 * wIntChi_vec[lowborder]) / (wIntChi_vec[upborder] - wIntChi_vec[lowborder]));
            }
            else {
                wpr = wIntChi_vec[upborder];
                tw = (wupborder - wlowborder);
                (*freqs).push_back(wIntChi_vec[upborder]);
                (*weights).push_back((wupborder - wlowborder));
            }

        }
        else if (lowborder + 2 == upborder) {
            if (lowborder != M * N - nw) {
                wpr = wIntChi_vec[lowborder + 1];
                tw = 0.5*((2 - (wpr - wlowborder) / (wpr - wIntChi_vec[lowborder]))*(wpr - wlowborder) + (2 - (wupborder - wpr) / (wIntChi_vec[upborder] - wpr))*(wupborder - wpr));
                (*freqs).push_back(wIntChi_vec[lowborder + 1]);
                (*weights).push_back(0.5*((2 - (wpr - wlowborder) / (wpr - wIntChi_vec[lowborder]))*(wpr - wlowborder) + (2 - (wupborder - wpr) / (wIntChi_vec[upborder] - wpr))*(wupborder - wpr)));
                wpr = wIntChi_vec[lowborder];
                tw = 0.5*(wIntChi_vec[lowborder + 1] - wlowborder)*(wIntChi_vec[lowborder + 1] - wlowborder) / (wIntChi_vec[lowborder + 1] - wpr);
                (*freqs).push_back(wIntChi_vec[lowborder]);
                (*weights).push_back(0.5*(wIntChi_vec[lowborder + 1] - wlowborder)*(wIntChi_vec[lowborder + 1] - wlowborder) / (wIntChi_vec[lowborder + 1] - wpr));
                wpr = wIntChi_vec[upborder];
                tw = 0.5*(wupborder - wIntChi_vec[lowborder + 1])*(wupborder - wIntChi_vec[lowborder + 1]) / (wpr - wIntChi_vec[lowborder + 1]);
                (*freqs).push_back(wIntChi_vec[upborder]);
                (*weights).push_back(0.5*(wupborder - wIntChi_vec[lowborder + 1])*(wupborder - wIntChi_vec[lowborder + 1]) / (wpr - wIntChi_vec[lowborder + 1]));
            }
            else {
                wpr = wIntChi_vec[lowborder + 1];
                tw = 0.5*(2 * (wpr - wlowborder) + (2 - (wupborder - wpr) / (wIntChi_vec[upborder] - wpr))*(wupborder - wpr));
                (*freqs).push_back(wIntChi_vec[lowborder + 1]);
                (*weights).push_back(0.5*(2 * (wpr - wlowborder) + (2 - (wupborder - wpr) / (wIntChi_vec[upborder] - wpr))*(wupborder - wpr)));
                wpr = wIntChi_vec[upborder];
                tw = 0.5*(wupborder - wIntChi_vec[lowborder + 1])*(wupborder - wIntChi_vec[lowborder + 1]) / (wpr - wIntChi_vec[lowborder + 1]);
                (*freqs).push_back(wIntChi_vec[upborder]);
                (*weights).push_back(0.5*(wupborder - wIntChi_vec[lowborder + 1])*(wupborder - wIntChi_vec[lowborder + 1]) / (wpr - wIntChi_vec[lowborder + 1]));
            }
        }
        else {
            for (int nK = lowborder + 2; nK < upborder - 1; ++nK) {
                wpr = wIntChi_vec[nK];
                tw = getTrapzWeight(wIntChi_vec, 2 * M*N, nK);
                (*freqs).push_back(wIntChi_vec[nK]);
                (*weights).push_back(getTrapzWeight(wIntChi_vec, 2 * M*N, nK));
            }

            //The first two integration frequencies have different weights
            if (lowborder != M * N - nw)
            {
                wpr = wIntChi_vec[lowborder + 1];
                tw = 0.5*(wIntChi_vec[lowborder + 2] - wpr + (2 - (wpr - wlowborder) / (wpr - wIntChi_vec[lowborder]))*(wpr - wlowborder));
                (*freqs).push_back(wIntChi_vec[lowborder + 1]);
                (*weights).push_back(0.5*(wIntChi_vec[lowborder + 2] - wpr + (2 - (wpr - wlowborder) / (wpr - wIntChi_vec[lowborder]))*(wpr - wlowborder)));
                wpr = wIntChi_vec[lowborder];
                tw = 0.5*(wIntChi_vec[lowborder + 1] - wlowborder)*(wIntChi_vec[lowborder + 1] - wlowborder) / (wIntChi_vec[lowborder + 1] - wpr);
                (*freqs).push_back(wIntChi_vec[lowborder]);
                (*weights).push_back(0.5*(wIntChi_vec[lowborder + 1] - wlowborder)*(wIntChi_vec[lowborder + 1] - wlowborder) / (wIntChi_vec[lowborder + 1] - wpr));
            }
            else {
                wpr = wIntChi_vec[lowborder + 1];
                tw = 0.5*(wIntChi_vec[lowborder + 2] + wIntChi_vec[lowborder + 1] - 2 * wlowborder);
                (*freqs).push_back(wIntChi_vec[lowborder + 1]);
                (*weights).push_back(0.5*(wIntChi_vec[lowborder + 2] + wIntChi_vec[lowborder + 1] - 2 * wlowborder));
            }

            //The last two integration frequencies have different weights
            wpr = wIntChi_vec[upborder - 1];
            tw = 0.5*(wpr - wIntChi_vec[upborder - 2] + (2 - (wupborder - wpr) / (wIntChi_vec[upborder] - wpr))*(wupborder - wpr));
            (*freqs).push_back(wIntChi_vec[upborder - 1]);
            (*weights).push_back(0.5*(wpr - wIntChi_vec[upborder - 2] + (2 - (wupborder - wpr) / (wIntChi_vec[upborder] - wpr))*(wupborder - wpr)));
            wpr = wIntChi_vec[upborder];
            tw = 0.5*(wupborder - wIntChi_vec[upborder - 1])*(wupborder - wIntChi_vec[upborder - 1]) / (wpr - wIntChi_vec[upborder - 1]);
            (*freqs).push_back(wIntChi_vec[upborder]);
            (*weights).push_back(0.5*(wupborder - wIntChi_vec[upborder - 1])*(wupborder - wIntChi_vec[upborder - 1]) / (wpr - wIntChi_vec[upborder - 1]));
        }

    }

}


//Compute the right-hand side of the two-particle vertex flow equation's Katanin terms
void getDG_Kat(double DG_vec[], double Lam, const double G_vec[]) {
    //Compute weights of the first frequency integration interval first
    int lowborder = -1;
    double wlowborder;
    double wpr;

    vector<double> weights;
    weights.reserve(N);
    vector<double> freqs;
    freqs.reserve(N);

    //Integral from +Lambda to infty
    //Compute frequencies and integration weights
    //Because this integration interval does not depend on s, t or u, it can already be treated here
    wlowborder = Lam;
    for (int i = N; i < 2 * N; i++) {
        if (wInt_vec[i] >= Lam)
        {
            lowborder = i - 1;
            break;
        }
    }
    if (lowborder == 2 * N - 2) {
        wpr = wInt_vec[lowborder + 1];
        freqs.push_back(wInt_vec[lowborder + 1]);
        weights.push_back(0.5*((2 - (wpr - wlowborder) / (wpr - wInt_vec[lowborder]))*(wpr - wlowborder)));

        freqs.push_back(wInt_vec[lowborder]);
        weights.push_back(0.5*(wInt_vec[lowborder + 1] - wlowborder)*(wInt_vec[lowborder + 1] - wlowborder) / (wInt_vec[lowborder + 1] - wInt_vec[lowborder]));
    }
    else {
        for (int nK = lowborder + 2; nK < 2 * N; ++nK) {
            freqs.push_back(wInt_vec[nK]);
            weights.push_back(getTrapzWeight(wInt_vec, 2 * N, nK));
        }
        //The first two integration frequencies have different weights
        wpr = wInt_vec[lowborder + 1];
        freqs.push_back(wInt_vec[lowborder + 1]);
        weights.push_back(0.5*(wInt_vec[lowborder + 2] - wpr + (2 - (wpr - wlowborder) / (wpr - wInt_vec[lowborder]))*(wpr - wlowborder)));

        freqs.push_back(wInt_vec[lowborder]);
        weights.push_back(0.5*(wInt_vec[lowborder + 1] - wlowborder)*(wInt_vec[lowborder + 1] - wlowborder) / (wInt_vec[lowborder + 1] - wInt_vec[lowborder]));
    }

    //Compute integration weights for the remaining integration intervals
    vector<double> rweights[N + 1];
    for (int i = 0; i <= N; i++) { rweights[i].reserve(N); }
    vector<double> rfreqs[N + 1];
    for (int i = 0; i <= N; i++) { rfreqs[i].reserve(N); }
#pragma omp parallel for
    for (int nr = 1; nr <= N; ++nr) {
        double r = wp_vec[nr];
        KatIntegration(&rfreqs[nr], &rweights[nr], Lam, r, nr);
    }


    //Compute Katanin propagator bubbles which will be required later
    //Factor 16 for the spin components
    //PrBubble_s1: For the highest integration interval
    //PrBubble_s2: Remaining s-dependent integration intervals
    const int cN = 2 * N + 1;
    const int cNt4 = Nsl2 * (2 * N + 1);
    const int Np1 = N + 1;
    const int Np1t4 = Nsl2 * (N + 1);
    vector<double> *PrBubble_s1 = new vector<double>[16 * Nsl2*Np1];
    vector<double> *PrBubble_s2 = new vector<double>[16 * Nsl2*Np1];
    vector<double> *PrBubble_t1 = new vector<double>[16 * Nsl2*Np1];
    vector<double> *PrBubble_t2 = new vector<double>[16 * Nsl2*Np1];
    vector<double> *PrBubble_u1 = new vector<double>[16 * Nsl2*cN];
    vector<double> *PrBubble_u2 = new vector<double>[16 * Nsl2*cN];
    for (int i = 0; i < 16 * Nsl2*Np1; i++) { PrBubble_s1[i].resize(N); }
    for (int i = 0; i < 16 * Nsl2*Np1; i++) { PrBubble_s2[i].resize(N); }
    for (int i = 0; i < 16 * Nsl2*Np1; i++) { PrBubble_t1[i].resize(N); }
    for (int i = 0; i < 16 * Nsl2*Np1; i++) { PrBubble_t2[i].resize(N); }
    for (int i = 0; i < 16 * Nsl2*cN; i++) { PrBubble_u1[i].resize(N); }
    for (int i = 0; i < 16 * Nsl2*cN; i++) { PrBubble_u2[i].resize(N); }

#pragma omp parallel for
    for (int nr = 1; nr <= N; ++nr) {
        double r = wp_vec[nr];
        for (int i = 0; i < freqs.size(); ++i) {
            double wpr2 = freqs[i];
            double tw2 = weights[i];
            for (int mu = 0; mu < 4; mu++) {
                for (int mu2 = 0; mu2 < 4; mu2++) {
                    for (int Ri = 0; Ri < Nsl; Ri++) {
                        for (int Rf = 0; Rf < Nsl; Rf++) {
                            double Pr1s = getPKat(mu2, mu, wpr2, wpr2 + r, Rf, Ri, G_vec, DG_vec);
                            double Pr2s = getPKat(mu, mu2, wpr2 + r, wpr2, Ri, Rf, G_vec, DG_vec);
                            double Pr1u = getPKat(mu2, mu, wpr2, wpr2 + r, Ri, Rf, G_vec, DG_vec);
                            double Pr2u = getPKat(mu, mu2, wpr2 + r, wpr2, Rf, Ri, G_vec, DG_vec);
                            if (mu2 == 0) {
                                PrBubble_s1[Np1t4*(4 * mu + mu2) + Nsl2 * nr + Nsl * Rf + Ri][i] = (-Pr1s - Pr2s)*tw2;
                            }
                            else {
                                PrBubble_s1[Np1t4*(4 * mu + mu2) + Nsl2 * nr + Nsl * Rf + Ri][i] = (Pr1s + Pr2s)*tw2;
                            }
                            PrBubble_t1[Np1t4*(4 * mu + mu2) + Nsl2 * nr + Nsl * Rf + Ri][i] = (Pr1s + Pr2s)*tw2;
                            if ((mu == 0 and mu2 != 0) || (mu != 0 and mu2 == 0)) {
                                PrBubble_u1[cNt4*(4 * mu + mu2) + Nsl2 * (nr + N) + Nsl * Rf + Ri][i] = -(Pr1u + Pr2u)*tw2;
                            }
                            else {
                                PrBubble_u1[cNt4*(4 * mu + mu2) + Nsl2 * (nr + N) + Nsl * Rf + Ri][i] = (Pr1u + Pr2u)*tw2;
                            }
                            PrBubble_u1[cNt4*(4 * mu + mu2) + Nsl2 * (-nr + N) + Nsl * Rf + Ri][i] = (Pr1u + Pr2u)*tw2;
                        }
                    }
                }
            }
        }
        for (int i = 0; i < rfreqs[nr].size(); ++i) {
            double wpr2 = rfreqs[nr][i];
            double tw2 = rweights[nr][i];
            for (int mu = 0; mu < 4; mu++) {
                for (int mu2 = 0; mu2 < 4; mu2++) {
                    for (int Ri = 0; Ri < Nsl; Ri++) {
                        for (int Rf = 0; Rf < Nsl; Rf++) {
                            double Pr1s = getPKat(mu2, mu, wpr2, wpr2 + r, Rf, Ri, G_vec, DG_vec);
                            double Pr2s = getPKat(mu, mu2, wpr2 + r, wpr2, Ri, Rf, G_vec, DG_vec);
                            double Pr1u = getPKat(mu2, mu, wpr2, wpr2 + r, Ri, Rf, G_vec, DG_vec);
                            double Pr2u = getPKat(mu, mu2, wpr2 + r, wpr2, Rf, Ri, G_vec, DG_vec);
                            if (mu2 == 0) {
                                PrBubble_s2[Np1t4*(4 * mu + mu2) + Nsl2 * nr + Nsl * Rf + Ri][i] = (-Pr1s - Pr2s)*tw2;
                            }
                            else {
                                PrBubble_s2[Np1t4*(4 * mu + mu2) + Nsl2 * nr + Nsl * Rf + Ri][i] = (Pr1s + Pr2s)*tw2;
                            }
                            PrBubble_t2[Np1t4*(4 * mu + mu2) + Nsl2 * nr + Nsl * Rf + Ri][i] = (Pr1s + Pr2s)*tw2;
                            if ((mu == 0 and mu2 != 0) || (mu != 0 and mu2 == 0)) {
                                PrBubble_u2[cNt4*(4 * mu + mu2) + Nsl2 * (nr + N) + Nsl * Rf + Ri][i] = -(Pr1u + Pr2u)*tw2;
                            }
                            else {
                                PrBubble_u2[cNt4*(4 * mu + mu2) + Nsl2 * (nr + N) + Nsl * Rf + Ri][i] = (Pr1u + Pr2u)*tw2;
                            }
                            PrBubble_u2[cNt4*(4 * mu + mu2) + Nsl2 * (-nr + N) + Nsl * Rf + Ri][i] = (Pr1u + Pr2u)*tw2;
                        }
                    }
                }
            }
        }
    }

    //Compute Katanin terms
#pragma omp parallel for collapse(2)
    for (int nt = 1; nt <= N; ++nt) {
        for (int nu = 1; nu <= N; ++nu) {
            double t = wp_vec[nt];
            for (int usign = -1; usign <= 1; usign = usign + 2) {
                double dusign = ((double)usign);
                double u = dusign * wp_vec[nu];
                for (int ns = 1; ns <= nu; ++ns) {
                    double s = wp_vec[ns];
                    Rvec R;
                    list<Rvec>::iterator it;

                    //Some propagator bubble arguments have a negative prefactor, because for the s-channel one propagator is complex conjugated. Note that in the u-channel both propagators are complex conjugated
                    //First integration interval
                    for (int nw = 0; nw < freqs.size(); ++nw)
                    {
                        double wpr2 = freqs[nw];
                        //Preload the vertices needed in the RPA channel, from the much larger array G_vec
                        double *RPAVertices = new double[RPAsize[0]];
                        SetRPAVertices(RPAVertices, s, t, u, wpr2, nt, G_vec);

                        for (it = Omaxreduced.begin(); it != Omaxreduced.end(); ++it) {
                            R = *it;
                            int Rf = getRfSublattice(R);

                            double Prbubble[16];
                            double Prbubble1[16];
                            double Prbubble2[16];
                            for (int mu = 0; mu < 16; mu++) { Prbubble[mu] = PrBubble_s1[Np1t4*mu + Nsl2 * ns + Nsl * Rf + R.i][nw]; }
                            sChannel(DG_vec, ns, nt, nu*usign, wpr2, Prbubble, R, G_vec);
                            for (int mu = 0; mu < 16; mu++) { Prbubble[mu] = PrBubble_t1[Np1t4*mu + Nsl2 * nt + Nsl * 0 + 0][nw]; }
                            for (int mu = 0; mu < 16; mu++) { Prbubble1[mu] = PrBubble_t1[Np1t4*mu + Nsl2 * nt + Nsl * 1 + 1][nw]; }
                            for (int mu = 0; mu < 16; mu++) { Prbubble2[mu] = PrBubble_t1[Np1t4*mu + Nsl2 * nt + Nsl * 2 + 2][nw]; }
                            tChannel(DG_vec, ns, nt, nu*usign, wpr2, Prbubble, Prbubble1, Prbubble2, R, RPAVertices, G_vec);
                            for (int mu = 0; mu < 16; mu++) { Prbubble[mu] = PrBubble_u1[cNt4*mu + Nsl2 * (usign*nu + N) + Nsl * Rf + R.i][nw]; }
                            uChannel(DG_vec, ns, nt, nu*usign, dusign*wpr2, Prbubble, R, G_vec);
                        }
                        delete[]RPAVertices;
                    }
                    //Second and third integration intervals for each channel
                    for (int nw = 0; nw < rfreqs[ns].size(); ++nw)
                    {
                        double wpr2 = rfreqs[ns][nw];

                        for (it = Omaxreduced.begin(); it != Omaxreduced.end(); ++it) {
                            R = *it;
                            int Rf = getRfSublattice(R);
                            double Prbubble[16];
                            for (int mu = 0; mu < 16; mu++) { Prbubble[mu] = PrBubble_s2[Np1t4*mu + Nsl2 * ns + Nsl * Rf + R.i][nw]; }

                            sChannel(DG_vec, ns, nt, nu*usign, wpr2, Prbubble, R, G_vec);
                        }
                    }
                    for (int nw = 0; nw < rfreqs[nt].size(); ++nw)
                    {
                        double wpr2 = rfreqs[nt][nw];

                        //Preload the vertices that are required in the RPA channel, from the much larger array G_vec
                        double *RPAVertices = new double[RPAsize[0]];
                        SetRPAVertices(RPAVertices, s, t, u, wpr2, nt, G_vec);

                        double Prbubble[16];
                        double Prbubble1[16];
                        double Prbubble2[16];
                        for (int mu = 0; mu < 16; mu++) { Prbubble[mu] = PrBubble_t2[Np1t4*mu + Nsl2 * nt + Nsl * 0 + 0][nw]; }
                        for (int mu = 0; mu < 16; mu++) { Prbubble1[mu] = PrBubble_t2[Np1t4*mu + Nsl2 * nt + Nsl * 1 + 1][nw]; }
                        for (int mu = 0; mu < 16; mu++) { Prbubble2[mu] = PrBubble_t2[Np1t4*mu + Nsl2 * nt + Nsl * 2 + 2][nw]; }
                        for (it = Omaxreduced.begin(); it != Omaxreduced.end(); ++it) {
                            R = *it;

                            tChannel(DG_vec, ns, nt, nu*usign, wpr2, Prbubble, Prbubble1, Prbubble2, R, RPAVertices, G_vec);
                        }
                        delete[]RPAVertices;
                    }
                    for (int nw = 0; nw < rfreqs[nu].size(); ++nw)
                    {
                        double wpr2 = rfreqs[nu][nw];

                        for (it = Omaxreduced.begin(); it != Omaxreduced.end(); ++it) {
                            R = *it;
                            int Rf = getRfSublattice(R);
                            double Prbubble[16];
                            for (int mu = 0; mu < 16; mu++) { Prbubble[mu] = PrBubble_u2[cNt4*mu + Nsl2 * (usign*nu + N) + Nsl * Rf + R.i][nw]; }

                            uChannel(DG_vec, ns, nt, nu*usign, dusign*wpr2, Prbubble, R, G_vec);
                        }
                    }

                }
            }
        }
    }

    delete[]PrBubble_s1;
    delete[]PrBubble_s2;
    delete[]PrBubble_t1;
    delete[]PrBubble_t2;
    delete[]PrBubble_u1;
    delete[]PrBubble_u2;
}


///// Computing observables (magnetization and spin correlations)

//Compute the mu=1,2,3(x,y,z) component of the magnetization.
double getM(double Lam, int mu, int sublattice, const double G_vec[])
{
    // The same Code for integration is used in the method getDGsd_Kat
    int lowborder = -1;
    double wlowborder;
    double wpr;

    vector<double> weights;
    weights.reserve(Ng);
    vector<double> freqs;
    freqs.reserve(Ng);

    //Integral from +Lambda to infty
    //Because this integration interval does not depend on s, t or u, it can be treated here
    wlowborder = Lam;
    for (int i = Ng; i < 2 * Ng; i++) {
        if (wgInt_vec[i] >= Lam)
        {
            lowborder = i - 1;
            break;
        }
    }
    if (lowborder == 2 * Ng - 2) {
        wpr = wgInt_vec[lowborder + 1];
        freqs.push_back(wgInt_vec[lowborder + 1]);
        weights.push_back(0.5*((2 - (wpr - wlowborder) / (wpr - wgInt_vec[lowborder]))*(wpr - wlowborder)));

        freqs.push_back(wgInt_vec[lowborder]);
        weights.push_back(0.5*(wgInt_vec[lowborder + 1] - wlowborder)*(wgInt_vec[lowborder + 1] - wlowborder) / (wgInt_vec[lowborder + 1] - wgInt_vec[lowborder]));


    }
    else {
        for (int nK = lowborder + 2; nK < 2 * Ng; ++nK) {
            freqs.push_back(wgInt_vec[nK]);
            weights.push_back(getTrapzWeight(wgInt_vec, 2 * Ng, nK));
        }
        //The first two integration frequencies have different weights
        wpr = wgInt_vec[lowborder + 1];
        freqs.push_back(wgInt_vec[lowborder + 1]);
        weights.push_back(0.5*(wgInt_vec[lowborder + 2] - wpr + (2 - (wpr - wlowborder) / (wpr - wgInt_vec[lowborder]))*(wpr - wlowborder)));

        freqs.push_back(wgInt_vec[lowborder]);
        weights.push_back(0.5*(wgInt_vec[lowborder + 1] - wlowborder)*(wgInt_vec[lowborder + 1] - wlowborder) / (wgInt_vec[lowborder + 1] - wgInt_vec[lowborder]));
    }

    double Mag = 0;

    for (int i = 0; i < freqs.size(); ++i)
    {
        double wpr2 = freqs[i];
        double tw2 = weights[i];
        Mag += getg(mu, wpr2, sublattice, G_vec)* tw2;
    }
    //Factor 2 in the numerator because we only integrated over positive omega and the integral is symmetric around omega=0
    return Mag * 2.0 / (2 * pi);
}

//Compute static zz spin correlations
void getChi_zz(double chi_A[], double Lam, int sublattice, const double G_vec[]) {

    // w-integration discretization
    int M = 20;
    const int MN2 = 2 * M*N;
    double *wIntChi_vec = new double[MN2];
    fill(wIntChi_vec, wIntChi_vec + MN2, 0.);

    for (int i = 0; i < M*N; ++i) wIntChi_vec[i + M * N] = +1 * pow(10., (amin - 0.05) + i * ((amax + 0.05) - (amin - 0.05)) / (M*N - 1));
    for (int i = 0; i < M*N; ++i) wIntChi_vec[i] = -1 * wIntChi_vec[2 * N*M - i - 1];

    vector<double> weights;
    vector<double> freqs;
    double wpr;
    //Integration boundaries
    double wlowborder = Lam;
    double wupborder = -Lam;
    int lowborder = 0, upborder = 0;
    for (int i = 0; i < 2 * M*N; i++) {
        if (wIntChi_vec[i] > wlowborder)
        {
            lowborder = i - 1;
            break;
        }
    }
    for (int i = 0; i < 2 * M*N; i++) {
        if (wIntChi_vec[i] > wupborder)
        {
            upborder = i;
            break;
        }
    }

    //Add all integration frequencies and their weights
    if (upborder != 0) {
        for (int nK = 0; nK < upborder + 1; ++nK) {
            wpr = wIntChi_vec[nK];

            freqs.push_back(wIntChi_vec[nK]);
            weights.push_back(getTrapzWeightKat1(wIntChi_vec, upborder, wupborder, nK));
        }
    }
    for (int nK = lowborder + 2; nK < 2 * M*N; ++nK) {
        wpr = wIntChi_vec[nK];

        freqs.push_back(wIntChi_vec[nK]);
        weights.push_back(getTrapzWeight(wIntChi_vec, 2 * N*M, nK));
    }
    //The first two integration frequencies have different weights
    wpr = wIntChi_vec[lowborder + 1];

    freqs.push_back(wIntChi_vec[lowborder + 1]);
    weights.push_back(0.5*(wIntChi_vec[lowborder + 2] - wpr + (2 - (wpr - wlowborder) / (wpr - wIntChi_vec[lowborder]))*(wpr - wlowborder)));

    wpr = wIntChi_vec[lowborder];

    freqs.push_back(wIntChi_vec[lowborder]);
    weights.push_back(0.5*(wIntChi_vec[lowborder + 1] - wlowborder)*(wIntChi_vec[lowborder + 1] - wlowborder) / (wIntChi_vec[lowborder + 1] - wIntChi_vec[lowborder]));


    Rvec* OArray;
    Rvec R0;
    if (sublattice == 0) {
        OArray = Oi0Array;
        R0 = { 0,0,0 };
    }
    else if (sublattice == 1) {
        OArray = Oi1Array;
        R0 = { 1,0,0 };
    }
    else {
        OArray = Oi2Array;
        R0 = { 2,0,0 };
    }

#pragma omp parallel for
    for (int O_pos = 0; O_pos < Oi0.size(); O_pos++) {
        Rvec R = OArray[O_pos];
        int Rf = getRfSublattice(R);
        chi_A[O_pos] = 0.;

        // Frequency Integration loop
        for (int n = 0; n < freqs.size(); ++n) {
            double w = freqs[n];
            double tw = weights[n];

            double ga0 = getg(0, w, R.i, G_vec);
            double ga1 = getg(1, w, R.i, G_vec);
            double ga2 = getg(2, w, R.i, G_vec);
            double ga3 = getg(3, w, R.i, G_vec);

            if (R.a1 == 0 and R.a2 == 0) {
                chi_A[O_pos] += tw / (4 * pi) * (+ga0 * ga0 + ga1 * ga1 + ga2 * ga2 - ga3 * ga3);
            }

            for (int n2 = 0; n2 < freqs.size(); ++n2) {
                double w2 = freqs[n2];
                double tw2 = weights[n2];

                double gb0 = getg(0, w2, Rf, G_vec);
                double gb1 = getg(1, w2, Rf, G_vec);
                double gb2 = getg(2, w2, Rf, G_vec);
                double gb3 = getg(3, w2, Rf, G_vec);

                //the \delta_{ij} part of the tree expansion
                pairWeight pw_wpw2 = findPw(w + w2);
                pairWeight pw_wmw2 = findPw(w - w2);
                if (R.a1 == 0 and R.a2 == 0) {
                    double G00 = getIntpolG(G_vec, 1, 0, 0, R0, pw_wpw2, pw_wmw2, 1);
                    double G01 = getIntpolG(G_vec, 1, 0, 1, R0, pw_wpw2, pw_wmw2, 1);
                    double G02 = getIntpolG(G_vec, 1, 0, 2, R0, pw_wpw2, pw_wmw2, 1);
                    double G03 = getIntpolG(G_vec, 1, 0, 3, R0, pw_wpw2, pw_wmw2, 1);
                    double G10 = getIntpolG(G_vec, 1, 1, 0, R0, pw_wpw2, pw_wmw2, 1);
                    double G11 = getIntpolG(G_vec, 1, 1, 1, R0, pw_wpw2, pw_wmw2, 1);
                    double G12 = getIntpolG(G_vec, 1, 1, 2, R0, pw_wpw2, pw_wmw2, 1);
                    double G13 = getIntpolG(G_vec, 1, 1, 3, R0, pw_wpw2, pw_wmw2, 1);
                    double G20 = getIntpolG(G_vec, 1, 2, 0, R0, pw_wpw2, pw_wmw2, 1);
                    double G21 = getIntpolG(G_vec, 1, 2, 1, R0, pw_wpw2, pw_wmw2, 1);
                    double G22 = getIntpolG(G_vec, 1, 2, 2, R0, pw_wpw2, pw_wmw2, 1);
                    double G23 = getIntpolG(G_vec, 1, 2, 3, R0, pw_wpw2, pw_wmw2, 1);
                    double G30 = getIntpolG(G_vec, 1, 3, 0, R0, pw_wpw2, pw_wmw2, 1);
                    double G31 = getIntpolG(G_vec, 1, 3, 1, R0, pw_wpw2, pw_wmw2, 1);
                    double G32 = getIntpolG(G_vec, 1, 3, 2, R0, pw_wpw2, pw_wmw2, 1);
                    double G33 = getIntpolG(G_vec, 1, 3, 3, R0, pw_wpw2, pw_wmw2, 1);

                    chi_A[O_pos] += -1 / (8 * pi*pi) *tw*tw2* (+ga0 * (+gb0 * (+ga0 * (+gb0 * (+G00 - G11 - G22 + G33) + gb1 * (-G01 + G10 - G23 - G32) + gb2 * (-G02 + G13 + G20 + G31) + gb3 * (-G03 - G12 + G21 - G30)) + ga1 * (+gb0 * (+G01 - G10 - G23 - G32) + gb1 * (+G00 - G11 + G22 - G33) + gb2 * (-G03 - G12 - G21 + G30) + gb3 * (+G02 - G13 + G20 + G31)) + ga2 * (+gb0 * (+G02 + G13 - G20 + G31) + gb1 * (+G03 - G12 - G21 - G30) + gb2 * (+G00 + G11 - G22 - G33) + gb3 * (-G01 - G10 - G23 + G32)) + ga3 * (+gb0 * (-G03 + G12 - G21 - G30) + gb1 * (+G02 + G13 + G20 - G31) + gb2 * (-G01 - G10 + G23 - G32) + gb3 * (-G00 - G11 - G22 - G33))) + gb1 * (+ga0 * (+gb0 * (+G01 - G10 + G23 + G32) + gb1 * (+G00 - G11 - G22 + G33) + gb2 * (-G03 - G12 + G21 - G30) + gb3 * (+G02 - G13 - G20 - G31)) + ga1 * (+gb0 * (-G00 + G11 - G22 + G33) + gb1 * (+G01 - G10 - G23 - G32) + gb2 * (+G02 - G13 + G20 + G31) + gb3 * (+G03 + G12 + G21 - G30)) + ga2 * (+gb0 * (-G03 + G12 + G21 + G30) + gb1 * (+G02 + G13 - G20 + G31) + gb2 * (-G01 - G10 - G23 + G32) + gb3 * (-G00 - G11 + G22 + G33)) + ga3 * (+gb0 * (-G02 - G13 - G20 + G31) + gb1 * (-G03 + G12 - G21 - G30) + gb2 * (-G00 - G11 - G22 - G33) + gb3 * (+G01 + G10 - G23 + G32))) + gb2 * (+ga0 * (+gb0 * (+G02 - G13 - G20 - G31) + gb1 * (+G03 + G12 - G21 + G30) + gb2 * (+G00 - G11 - G22 + G33) + gb3 * (-G01 + G10 - G23 - G32)) + ga1 * (+gb0 * (+G03 + G12 + G21 - G30) + gb1 * (-G02 + G13 - G20 - G31) + gb2 * (+G01 - G10 - G23 - G32) + gb3 * (+G00 - G11 + G22 - G33)) + ga2 * (+gb0 * (-G00 - G11 + G22 + G33) + gb1 * (+G01 + G10 + G23 - G32) + gb2 * (+G02 + G13 - G20 + G31) + gb3 * (+G03 - G12 - G21 - G30)) + ga3 * (+gb0 * (+G01 + G10 - G23 + G32) + gb1 * (+G00 + G11 + G22 + G33) + gb2 * (-G03 + G12 - G21 - G30) + gb3 * (+G02 + G13 + G20 - G31))) + gb3 * (+ga0 * (+gb0 * (-G03 - G12 + G21 - G30) + gb1 * (+G02 - G13 - G20 - G31) + gb2 * (-G01 + G10 - G23 - G32) + gb3 * (-G00 + G11 + G22 - G33)) + ga1 * (+gb0 * (+G02 - G13 + G20 + G31) + gb1 * (+G03 + G12 + G21 - G30) + gb2 * (+G00 - G11 + G22 - G33) + gb3 * (-G01 + G10 + G23 + G32)) + ga2 * (+gb0 * (-G01 - G10 - G23 + G32) + gb1 * (-G00 - G11 + G22 + G33) + gb2 * (+G03 - G12 - G21 - G30) + gb3 * (-G02 - G13 + G20 - G31)) + ga3 * (+gb0 * (-G00 - G11 - G22 - G33) + gb1 * (+G01 + G10 - G23 + G32) + gb2 * (+G02 + G13 + G20 - G31) + gb3 * (+G03 - G12 + G21 + G30)))) + ga1 * (+gb0 * (+ga0 * (+gb0 * (-G01 + G10 + G23 + G32) + gb1 * (-G00 + G11 - G22 + G33) + gb2 * (+G03 + G12 + G21 - G30) + gb3 * (-G02 + G13 - G20 - G31)) + ga1 * (+gb0 * (+G00 - G11 - G22 + G33) + gb1 * (-G01 + G10 - G23 - G32) + gb2 * (-G02 + G13 + G20 + G31) + gb3 * (-G03 - G12 + G21 - G30)) + ga2 * (+gb0 * (-G03 + G12 - G21 - G30) + gbgb2 * (-G01 - G10 + G23 - G32) + gb3 * (-G00 - G11 - G22 - G33)) + ga3 * (+gb0 * (-G02 - G13 + G20 - G31) + gb1 * (-G03 + G12 + G21 + G30) + gb2 * (-G00 - G11 + G22 + G33) + gb3 * (+G01 + G10 + G23 - G32))) + gb1 * (+ga0 * (+gb0 * (+G00 - G11 + G22 - G33) + gb1 * (-G01 + G10 + G23 + G32) + gb2 * (-G02 + G13 - G20 - G31) + gb3 * (-G03 - G12 - G21 + G30)) + ga1 * (+gb0 * (+G01 - G10 + G23 + G32) + gb1 * (+G00 - G11 - G22 + G33) + gb2 * (-G03 - G12 + G21 - G30) + gb3 * (+G02 - G13 - G20 - G31)) + ga2 * (+gb0 * (-G02 - G13 - G20 + G31) + gb1 * (-G03 + G12 - G21 - G30) + gb2 * (-G00 - G11 - G22 - G33) + gb3 * (+G01 + G10 - G23 + G32)) + ga3 * (+gb0 * (+G03 - G12 - G21 - G30) + gb1 * (-G02 - G13 + G20 - G31) + gb2 * (+G01 + G10 + G23 - G32) + gb3 * (+G00 + G11 - G22 - G33))) + gb2 * (+ga0 * (+gb0 * (-G03 - G12 - G21 + G30) + gb1 * (+G02 - G13 + G20 + G31) + gb2 * (-G01 + G10 + G23 + G32) + gb3 * (-G00 + G11 - G22 + G33)) + ga1 * (+gb0 * (+G02 - G13 - G20 - G31) + gb1 * (+G03 + G12 - G21 + G30) + gb2 * (+G00 - G11 - G22 + G33) + gb3 * (-G01 + G10 - G23 - G32)) + ga2 * (+gb0 * (+G01 + G10 - G23 + G32) + gb1 * (+G00 + G11 + G22 + G33) + gb2 * (-G03 + G12 - G21 - G30) + gb3 * (+G02 + G13 + G20 - G31)) + ga3 * (+gb0 * (+G00 + G11 - G22 - G33) + gb1 * (-G01 - G10 - G23 + G32) + gb2 * (-G02 - G13 + G20 - G31) + gb3 * (-G03 + G12 + G21 + G30))) + gb3 * (+ga0 * (+gb0 * (-G02 + G13 - G20 - G31) + gb1 * (-G03 - G12 - G21 + G30) + gb2 * (-G00 + G11 - G22 + G33) + gb3 * (+G01 - G10 - G23 - G32)) + ga1 * (+gb0 * (-G03 - G12 + G21 - G30) + gb1 * (+G02 - G13 - G20 - G31) + gb2 * (-G01 + G10 - G23 - G32) + gb3 * (-G00 + G11 + G22 - G33)) + ga2 * (+gb0 * (-G00 - G11 - G22 - G33) + gb1 * (+G01 + G10 - G23 + G32) + gb2 * (+G02 + G13 + G20 - G31) + gb3 * (+G03 - G12 + G21 + G30)) + ga3 * (+gb0 * (+G01 + G10 + G23 - G32) + gb1 * (+G00 + G11 - G22 - G33) + gb2 * (-G03 + G12 + G21 + G30) + gb3 * (+G02 + G13 - G20 + G31)))) + ga2 * (+gb0 * (+ga0 * (+gb0 * (-G02 - G13 + G20 - G31) + gb1 * (-G03 + G12 + G21 + G30) + gb2 * (-G00 - G11 + G22 + G33) + gb3 * (+G01 + G10 + G23 - G32)) + ga1 * (+gb0 * (+G03 - G12 + G21 + G30) + gb1 * (-G02 - G13 - G20 + G31) + gb2 * (+G01 + G10 - G23 + G32) + gb3 * (+G00 + G11 + G22 + G33)) + ga2 * (+gb0 * (+G00 - G11 - G22 + G33) + gb1 * (-G01 + G10 - G23 - G32) + gb2 * (-G02 + G13 + G20 + G31) + gb3 * (-G03 - G12 + G21 - G30)) + ga3 * (+gb0 * (+G01 - G10 - G23 - G32) + gb1 * (+G00 - G11 + G22 - G33) + gb2 * (-G03 - G12 - G21 + G30) + gb3 * (+G02 - G13 + G20 + G31))) + gb1 * (+ga0 * (+gb0 * (+G03 - G12 - G21 - G30) + gb1 * (-G02 - G13 + G20 - G31) + gb2 * (+G01 + G10 + G23 - G32) + gb3 * (+G00 + G11 - G22 - G33)) + ga1 * (+gb0 * (+G02 + G13 + G20 - G31) + gb1 * (+G03 - G12 + G21 + G30) + gb2 * (+G00 + G11 + G22 + G33) + gb3 * (-G01 - G10 + G23 - G32)) + ga2 * (+gb0 * (+G01 - G10 + G23 + G32) + gb1 * (+G00 - G11 - G22 + G33) + gb2 * (-G03 - G12 + G21 - G30) + gb3 * (+G02 - G13 - G20 - G31)) + ga3 * (+gb0 * (-G00 + G11 - G22 + G33) + gb1 * (+G01 - G10 - G23 - G32) + gb2 * (+G02 - G13 + G20 + G31) + gb3 * (+G03 + G12 + G21 - G30))) + gb2 * (+ga0 * (+gb0 * (+G00 + G11 - G22 - G33) + gb1 * (-G01 - G10 - G23 + G32) + gb2 * (-G02 - G13 + G20 - G31) + gb3 * (-G03 + G12 + G21 + G30)) + ga1 * (+gb0 * (-G01 - G10 + G23 - G32) + gb1 * (-G00 - G11 - G22 - G33) + gb2 * (+G03 - G12 + G21 + G30) + gb3 * (-G02 - G13 - G20 + G31)) + ga2 * (+gb0 * (+G02 - G13 - G20 - G31) + gb1 * (+G03 + G12 - G21 + G30) + gb2 * (+G00 - G11 - G22 + G33) + gb3 * (-G01 + G10 - G23 - G32)) + ga3 * (+gb0 * (+G03 + G12 + G21 - G30) + gb1 * (-G02 + G13 - G20 - G31) + gb2 * (+G01 - G10 - G23 - G32) + gb3 * (+G00 - G11 + G22 - G33))) + gb3 * (+ga0 * (+gb0 * (+G01 + G10 + G23 - G32) + gb1 * (+G00 + G11 - G22 - G33) + gb2 * (-G03 + G12 + G21 + G30) + gb3 * (+G02 + G13 - G20 + G31)) + ga1 * (+gb0 * (+G00 + G11 + G22 + G33)
gb1 * (-G01 - G10 + G23 - G32) + gb2 * (-G02 - G13 - G20 + G31) + gb3 * (-G03 + G12 - G21 - G30)) + ga2 * (+gb0 * (-G03 - G12 + G21 - G30) + gb1 * (+G02 - G13 - G20 - G31) + gb2 * (-G01 + G10 - G23 - G32) + gb3 * (-G00 + G11 + G22 - G33)) + ga3 * (+gb0 * (+G02 - G13 + G20 + G31) + gb1 * (+G03 + G12 + G21 - G30) + gb2 * (+G00 - G11 + G22 - G33) + gb3 * (-G01 + G10 + G23 + G32)))) + ga3 * (+gb0 * (+ga0 * (+gb0 * (-G03 + G12 - G21 - G30) + gb1 * (+G02 + G13 + G20 - G31) + gb2 * (-G01 - G10 + G23 - G32) + gb3 * (-G00 - G11 - G22 - G33)) + ga1 * (+gb0 * (-G02 - G13 + G20 - G31) + gb1 * (-G03 + G12 + G21 + G30) + gb2 * (-G00 - G11 + G22 + G33) + gb3 * (+G01 + G10 + G23 - G32)) + ga2 * (+gb0 * (+G01 - G10 - G23 - G32) + gb1 * (+G00 - G11 + G22 - G33) + gb2 * (-G03 - G12 - G21 + G30) + gb3 * (+G02 - G13 + G20 + G31)) + ga3 * (+gb0 * (-G00 + G11 + G22 - G33) + gb1 * (+G01 - G10 + G23 + G32) + gb2 * (+G02 - G13 - G20 - G31) + gb3 * (+G03 + G12 - G21 + G30))) + gb1 * (+ga0 * (+gb0 * (-G02 - G13 - G20 + G31) + gb1 * (-G03 + G12 - G21 - G30) + gb2 * (-G00 - G11 - G22 - G33) + gb3 * (+G01 + G10 - G23 + G32)) + ga1 * (+gb0 * (+G03 - G12 - G21 - G30) + gb1 * (-G02 - G13 + G20 - G31) + gb2 * (+G01 + G10 + G23 - G32) + gb3 * (+G00 + G11 - G22 - G33)) + ga2 * (+gb0 * (-G00 + G11 - G22 + G33) + gb1 * (+G01 - G10 - G23 - G32) + gb2 * (+G02 - G13 + G20 + G31) + gb3 * (+G03 + G12 + G21 - G30)) + ga3 * (+gb0 * (-G01 + G10 - G23 - G32) + gb1 * (-G00 + G11 + G22 - G33) + gb2 * (+G03 + G12 - G21 + G30) + gb3 * (-G02 + G13 + G20 + G31))) + gb2 * (+ga0 * (+gb0 * (+G01 + G10 - G23 + G32) + gb1 * (+G00 + G11 + G22 + G33) + gb2 * (-G03 + G12 - G21 - G30) + gb3 * (+G02 + G13 + G20 - G31)) + ga1 * (+gb0 * (+G00 + G11 - G22 - G33) + gb1 * (-G01 - G10 - G23 + G32) + gb2 * (-G02 - G13 + G20 - G31) + gb3 * (-G03 + G12 + G21 + G30)) + ga2 * (+gb0 * (+G03 + G12 + G21 - G30) + gb1 * (-G02 + G13 - G20 - G31) + gb2 * (+G01 - G10 - G23 - G32) + gb3 * (+G00 - G11 + G22 - G33)) + ga3 * (+gb0 * (-G02 + G13 + G20 + G31) + gb1 * (-G03 - G12 + G21 - G30) + gb2 * (-G00 + G11 + G22 - G33) + gb3 * (+G01 - G10 + G23 + G32))) + gb3 * (+ga0 * (+gb0 * (-G00 - G11 - G22 - G33) + gb1 * (+G01 + G10 - G23 + G32) + gb2 * (+G02 + G13 + G20 - G31) + gb3 * (+G03 - G12 + G21 + G30)) + ga1 * (+gb0 * (+G01 + G10 + G23 - G32) + gb1 * (+G00 + G11 - G22 - G33) + gb2 * (-G03 + G12 + G21 + G30) + gb3 * (+G02 + G13 - G20 + G31)) + ga2 * (+gb0 * (+G02 - G13 + G20 + G31) + gb1 * (+G03 + G12 + G21 - G30) + gb2 * (+G00 - G11 + G22 - G33) + gb3 * (-G01 + G10 + G23 + G32)) + ga3 * (+gb0 * (+G03 + G12 - G21 + G30) + gb1 * (-G02 + G13 + G20 + G31) + gb2 * (+G01 - G10 + G23 + G32) + gb3 * (+G00 - G11 - G22 + G33)))));
                }
                // the remaining part of the tree expansion
                double G00 = getIntpolG(G_vec, 1, 0, 0, R, pw_wpw2, 1, pw_wmw2);
                double G01 = getIntpolG(G_vec, 1, 0, 1, R, pw_wpw2, 1, pw_wmw2);
                double G02 = getIntpolG(G_vec, 1, 0, 2, R, pw_wpw2, 1, pw_wmw2);
                double G03 = getIntpolG(G_vec, 1, 0, 3, R, pw_wpw2, 1, pw_wmw2);
                double G10 = getIntpolG(G_vec, 1, 1, 0, R, pw_wpw2, 1, pw_wmw2);
                double G11 = getIntpolG(G_vec, 1, 1, 1, R, pw_wpw2, 1, pw_wmw2);
                double G12 = getIntpolG(G_vec, 1, 1, 2, R, pw_wpw2, 1, pw_wmw2);
                double G13 = getIntpolG(G_vec, 1, 1, 3, R, pw_wpw2, 1, pw_wmw2);
                double G20 = getIntpolG(G_vec, 1, 2, 0, R, pw_wpw2, 1, pw_wmw2);
                double G21 = getIntpolG(G_vec, 1, 2, 1, R, pw_wpw2, 1, pw_wmw2);
                double G22 = getIntpolG(G_vec, 1, 2, 2, R, pw_wpw2, 1, pw_wmw2);
                double G23 = getIntpolG(G_vec, 1, 2, 3, R, pw_wpw2, 1, pw_wmw2);
                double G30 = getIntpolG(G_vec, 1, 3, 0, R, pw_wpw2, 1, pw_wmw2);
                double G31 = getIntpolG(G_vec, 1, 3, 1, R, pw_wpw2, 1, pw_wmw2);
                double G32 = getIntpolG(G_vec, 1, 3, 2, R, pw_wpw2, 1, pw_wmw2);
                double G33 = getIntpolG(G_vec, 1, 3, 3, R, pw_wpw2, 1, pw_wmw2);

                chi_A[O_pos] += -1 / (4 * pi*pi) *tw*tw2* (+ga0 * (+gb0 * (+ga0 * (+gb0 * (+G33) + gb1 * (-G32) + gb2 * (+G31) + gb3 * (-G30)) + ga1 * (+gb0 * (-G23) + gb1 * (+G22) + gb2 * (-G21) + gb3 * (+G20)) + ga2 * (+gb0 * (+G13) + gb1 * (-G12) + gb2 * (+G11) + gb3 * (-G10)) + ga3 * (+gb0 * (-G03) + gb1 * (+G02) + gb2 * (-G01) + gb3 * (-G00))) + gb1 * (+ga0 * (+gb0 * (+G32) + gb1 * (+G33) + gb2 * (-G30) + gb3 * (-G31)) + ga1 * (+gb0 * (-G22) + gb1 * (-G23) + gb2 * (+G20) + gb3 * (+G21)) + ga2 * (+gb0 * (+G12) + gb1 * (+G13) + gb2 * (-G10) + gb3 * (-G11)) + ga3 * (+gb0 * (-G02) + gb1 * (-G03) + gb2 * (-G00) + gb3 * (+G01))) + gb2 * (+ga0 * (+gb0 * (-G31) + gb1 * (+G30) + gb2 * (+G33) + gb3 * (-G32)) + ga1 * (+gb0 * (+G21) + gb1 * (-G20) + gb2 * (-G23) + gb3 * (+G22)) + ga2 * (+gb0 * (-G11) + gb1 * (+G10) + gb2 * (+G13) + gb3 * (-G12)) + ga3 * (+gb0 * (+G01) + gb1 * (+G00) + gb2 * (-G03) + gb3 * (+G02))) + gb3 * (+ga0 * (+gb0 * (-G30) + gb1 * (-G31) + gb2 * (-G32) + gb3 * (-G33)) + ga1 * (+gb0 * (+G20) + gb1 * (+G21) + gb2 * (+G22) + gb3 * (+G23)) + ga2 * (+gb0 * (-G10) + gb1 * (-G11) + gb2 * (-G12) + gb3 * (-G13)) + ga3 * (+gb0 * (-G00) + gb1 * (+G01) + gb2 * (+G02) + gb3 * (+G03)))) + ga1 * (+gb0 * (+ga0 * (+gb0 * (+G23) + gb1 * (-G22) + gb2 * (+G21) + gb3 * (-G20)) + ga1 * (+gb0 * (+G33) + gb1 * (-G32) + gb2 * (+G31) + gb3 * (-G30)) + ga2 * (+gb0 * (-G03) + gb1 * (+G02) + gb2 * (-G01) + gb3 * (-G00)) + ga3 * (+gb0 * (-G13) + gb1 * (+G12) + gb2 * (-G11) + gb3 * (+G10))) + gb1 * (+ga0 * (+gb0 * (+G22) + gb1 * (+G23) + gb2 * (-G20) + gb3 * (-G21)) + ga1 * (+gb0 * (+G32) + gb1 * (+G33) + gb2 * (-G30) + gb3 * (-G31)) + ga2 * (+gb0 * (-G02) + gb1 * (-G03) + gb2 * (-G00) + gb3 * (+G01)) + ga3 * (+gb0 * (-G12) + gb1 * (-G13) + gb2 * (+G10) + gb3 * (+G11))) + gb2 * (+ga0 * (+gb0 * (-G21) + gb1 * (+G20) + gb2 * (+G23) + gb3 * (-G22)) + ga1 * (+gb0 * (-G31) + gb1 * (+G30) + gb2 * (+G33) + gb3 * (-G32)) + ga2 * (+gb0 * (+G01) + gb1 * (+G00) + gb2 * (-G03) + gb3 * (+G02)) + ga3 * (+gb0 * (+G11) + gb1 * (-G10) + gb2 * (-G13) + gb3 * (+G12))) + gb3 * (+ga0 * (+gb0 * (-G20) + gb1 * (-G21) + gb2 * (-G22) + gb3 * (-G23)) + ga1 * (+gb0 * (-G30) + gb1 * (-G31) + gb2 * (-G32) + gb3 * (-G33)) + ga2 * (+gb0 * (-G00) + gb1 * (+G01) + gb2 * (+G02) + gb3 * (+G03)) + ga3 * (+gb0 * (+G10) + gb1 * (+G11) + gb2 * (+G12) + gb3 * (+G13)))) + ga2 * (+gb0 * (+ga0 * (+gb0 * (-G13) + gb1 * (+G12) + gb2 * (-G11) + gb3 * (+G10)) + ga1 * (+gb0 * (+G03) + gb1 * (-G02) + gb2 * (+G01) + gb3 * (+G00)) + ga2 * (+gb0 * (+G33) + gb1 * (-G32) + gb2 * (+G31) + gb3 * (-G30)) + ga3 * (+gb0 * (-G23) + gb1 * (+G22) + gb2 * (-G21) + gb3 * (+G20))) + gb1 * (+ga0 * (+gb0 * (-G12) + gb1 * (-G13) + gb2 * (+G10) + gb3 * (+G11)) + ga1 * (+gb0 * (+G02) + gb1 * (+G03) + gb2 * (+G00) + gb3 * (-G01)) + ga2 * (+gb0 * (+G32) + gb1 * (+G33) + gb2 * (-G30) + gb3 * (-G31)) + ga3 * (+gb0 * (-G22) + gb1 * (-G23) + gb2 * (+G20) + gb3 * (+G21))) + gb2 * (+ga0 * (+gb0 * (+G11) + gb1 * (-G10) + gb2 * (-G13) + gb3 * (+G12)) + ga1 * (+gb0 * (-G01) + gb1 * (-G00) + gb2 * (+G03) + gb3 * (-G02)) + ga2 * (+gb0 * (-G31) + gb1 * (+G30) + gb2 * (+G33) + gb3 * (-G32)) + ga3 * (+gb0 * (+G21) + gb1 * (-G20) + gb2 * (-G23) + gb3 * (+G22))) + gb3 * (+ga0 * (+gb0 * (+G10) + gb1 * (+G11) + gb2 * (+G12) + gb3 * (+G13)) + ga1 * (+gb0 * (+G00) + gb1 * (-G01) + gb2 * (-G02) + gb3 * (-G03)) + ga2 * (+gb0 * (-G30) + gb1 * (-G31) + gb2 * (-G32) + gb3 * (-G33)) + ga3 * (+gb0 * (+G20) + gb1 * (+G21) + gb2 * (+G22) + gb3 * (+G23)))) + ga3 * (+gb0 * (+ga0 * (+gb0 * (-G03) + gb1 * (+G02) + gb2 * (-G01) + gb3 * (-G00)) + ga1 * (+gb0 * (-G13) + gb1 * (+G12) + gb2 * (-G11) + gb3 * (+G10)) + ga2 * (+gb0 * (-G23) + gb1 * (+G22) + gb2 * (-G21) + gb3 * (+G20)) + ga3 * (+gb0 * (-G33) + gb1 * (+G32) + gb2 * (-G31) + gb3 * (+G30))) + gb1 * (+ga0 * (+gb0 * (-G02) + gb1 * (-G03) + gb2 * (-G00) + gb3 * (+G01)) + ga1 * (+gb0 * (-G12) + gb1 * (-G13) + gb2 * (+G10) + gb3 * (+G11)) + ga2 * (+gb0 * (-G22) + gb1 * (-G23) + gb2 * (+G20) + gb3 * (+G21)) + ga3 * (+gb0 * (-G32) + gb1 * (-G33) + gb2 * (+G30) + gb3 * (+G31))) + gb2 * (+ga0 * (+gb0 * (+G01) + gb1 * (+G00) + gb2 * (-G03) + gb3 * (+G02)) + ga1 * (+gb0 * (+G11) + gb1 * (-G10) + gb2 * (-G13) + gb3 * (+G12)) + ga2 * (+gb0 * (+G21) + gb1 * (-G20) + gb2 * (-G23) + gb3 * (+G22)) + ga3 * (+gb0 * (+G31) + gb1 * (-G30) + gb2 * (-G33) + gb3 * (+G32))) + gb3 * (+ga0 * (+gb0 * (-G00) + gb1 * (+G01) + gb2 * (+G02) + gb3 * (+G03)) + ga1 * (+gb0 * (+G10) + gb1 * (+G11) + gb2 * (+G12) + gb3 * (+G13)) + ga2 * (+gb0 * (+G20) + gb1 * (+G21) + gb2 * (+G22) + gb3 * (+G23)) + ga3 * (+gb0 * (+G30) + gb1 * (+G31) + gb2 * (+G32) + gb3 * (+G33)))));
            }
        }
    }

    delete wIntChi_vec;
}

//Compute the right-hand side of the flow equations
int getDG(double Lam, const double G_vec[], double DG_vec[], void *params) {
    cout << "------------------------- \n";
    cout << "Lam: " << Lam << "\n";

#pragma omp parallel for
    for (int i = 0; i < totaldim; i++) {
        DG_vec[i] = 0;
    }

    getDgamma(DG_vec, Lam, G_vec);
    getDG(DG_vec, Lam, G_vec);
    getDG_Kat(DG_vec, Lam, G_vec);

    setInSymmetries(DG_vec);

    return GSL_SUCCESS;
}

////////////////////////////////////////////////////////////////////////
int main(int argc, char *argv[]) {
    //Measure the duration the code is running and give it out just before the program is finished
    using std::chrono::high_resolution_clock;
    using std::chrono::duration_cast;
    using std::chrono::duration;
    using std::chrono::milliseconds;
    auto t_init = high_resolution_clock::now();

    string fileName = datafilename + "_" + "_N" + to_string(N) + "_L" + to_string(L);
    ofstream out_file;

    cout << "Number of entries of G_vec: " << accDims[0] << endl;

    //Initialize frequency grids
    wp_vec[0] = 0.;
    for (int i = 1; i <= N; ++i) wp_vec[i] = pow(10., amin + (i - 1)*(amax - amin) / (N - 1));
    wg_vec[0] = 0.;
    for (int i = 1; i <= Ng; ++i) wg_vec[i] = pow(10., amin + (i - 1)*(amax - amin) / (Ng - 1));

    for (int i = 0; i < N; ++i) wInt_vec[i + N] = +wp_vec[i + 1];
    for (int i = 0; i < N; ++i) wInt_vec[i] = -1 * wInt_vec[2 * N - i - 1];
    for (int i = 0; i < Ng; ++i) wgInt_vec[i + Ng] = +wg_vec[i + 1];
    for (int i = 0; i < Ng; ++i) wgInt_vec[i] = -1 * wgInt_vec[2 * Ng - i - 1];

    for (int i = 0; i < M*N; ++i) {
        wIntChi_vec[i + M * N] = +1 * pow(10., (amin - 0.05) + i * ((amax + 0.05) - (amin - 0.05)) / (M*N - 1));
        wIntChi_vecP[i] = +1 * pow(10., (amin - 0.05) + i * ((amax + 0.05) - (amin - 0.05)) / (M*N - 1));
    }
    for (int i = 0; i < M*N; ++i) wIntChi_vec[i] = -1 * wIntChi_vec[2 * N*M - i - 1];

    /*if(Lam_vec[Mlam] >= wp_vec[N-1]){
                cout << "The maximum Lambda value has to be smaller than the second largest frequency. If this is not the case, you first have to include this case in the Katanin integration"
                         << endl << "(The current calculation of the integration weights becomes incorrect, if Lambda >= wp_vec[N-1])";
                return 0;
        }*/

    //Check whether G_vec entries of self-energy and two-particle vertex overlap
    if (accDims[1] <= Nsl * 4 * Ng && N > 10) {
        cout << "Ng is too large. Exit program." << endl;
        delete[]G_vec;
        exit(1);
    }


    // print frequency arrays
    cout << "wp_vec:" << "\n";
    printDoubleArray(wp_vec, N + 1);
    cout << "wInt_vec:" << "\n";
    printDoubleArray(wInt_vec, 2 * N);

    //Magnetization is given to the program as argument
    double numerator = atoi(argv[1]);
    const double B = numerator*0.1;

    cout << "Model parameters: " << endl;
    cout << "J^{zz}=" << J1 << ", J^{xx}=J^{yy}=" << aniso*J1 << ", delta=" << delta << ", h=" << B << endl;

    // Set initial values for the two-particle vertex
    fill(G_vec, G_vec + totaldim, 0.);
#pragma omp parallel for
    for (int ns = 1; ns <= N; ++ns) {
        for (int nt = 1; nt <= N; ++nt) {
            for (int nu = -N; nu <= N; ++nu) {
                for (int i = 0; i <= 2; i++) {
                    //for (int mu=1; mu<=3; ++mu){
                    setG(aniso*J1 / 4, G_vec, 1, 1, 1, { i,0,1 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 1, 1, { i,0,-1 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 1, 1, { i,1,0 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 1, 1, { i,-1,0 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 1, 1, { i,1,-1 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 1, 1, { i,-1,1 }, ns, nt, nu);

                    setG(aniso*J1 / 4, G_vec, 1, 2, 2, { i,0,1 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 2, 2, { i,0,-1 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 2, 2, { i,1,0 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 2, 2, { i,-1,0 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 2, 2, { i,1,-1 }, ns, nt, nu);
                    setG(aniso*J1 / 4, G_vec, 1, 2, 2, { i,-1,1 }, ns, nt, nu);

                    setG(J1 / 4, G_vec, 1, 3, 3, { i,0,1 }, ns, nt, nu);
                    setG(J1 / 4, G_vec, 1, 3, 3, { i,0,-1 }, ns, nt, nu);
                    setG(J1 / 4, G_vec, 1, 3, 3, { i,1,0 }, ns, nt, nu);
                    setG(J1 / 4, G_vec, 1, 3, 3, { i,-1,0 }, ns, nt, nu);
                    setG(J1 / 4, G_vec, 1, 3, 3, { i,1,-1 }, ns, nt, nu);
                    setG(J1 / 4, G_vec, 1, 3, 3, { i,-1,1 }, ns, nt, nu);
                    //}
                }
            }
        }
    }

    // Set initial values for the self-energy
    for (int n = 1; n <= Ng; ++n) {
        addSE(+delta*sqrt(2) / 2, G_vec, 1, n, 0);
        addSE(+delta*sqrt(2) / 2, G_vec, 2, n, 1);
        addSE(-delta*sqrt(2) / 2, G_vec, 3, n, 0);
        addSE(+delta*sqrt(2) / 2, G_vec, 3, n, 1);

        addSE(-B / 2, G_vec, 3, n, 0);
        addSE(-B / 2, G_vec, 3, n, 1);
        addSE(-B / 2, G_vec, 3, n, 2);
    }

    //Optionally, load a vertex in case data is present
    try {
        readVerticesFromFile();
    }
    catch (const exception& e) {}



    // Fill lists of lattice vectors
    int Lmax = 0;
    for (int i = 0; i <= 2; i++) {
        for (int a1 = -10*L; a1 <= 10 * L; ++a1) {
            for (int a2 = -10 * L; a2 <= 10 * L; ++a2) {
                Rvec R = { i,a1,a2 };
                if (inO(R))
                {
                    if (abs(R.a1) > abs(Lmax)) {
                        Lmax = abs(R.a1);
                    }
                    if (abs(R.a2) > abs(Lmax)) {
                        Lmax = abs(R.a2);
                    }
                    if (i == 0) { Oi0.push_back(R); }
                    else if (i == 1) { Oi1.push_back(R); }
                    else { Oi2.push_back(R); }
                    O.push_back(R);
                    if (whichSector(R) == 0)
                    {
                        Oreduced.push_back(R);
                        if (inCorrectSubSector(R))
                        {
                            Omaxreduced.push_back(R);
                            if (i == 0) { Omaxreducedi0.push_back(R); }
                        }
                    }
                }
            }
        }
    }
    cout << "maximum L: " << Lmax << endl;

    if (Lmax > L) {
        cerr << "Lattice vectors exceed lattice size L" << endl;
        exit(1);
    }

    Oi0Array = new Rvec[Oi0.size()];
    Oi1Array = new Rvec[Oi1.size()];
    Oi2Array = new Rvec[Oi2.size()];

    list<Rvec>::iterator it;
    Rvec R;
    int O_pos = 0;
    for (it = Oi0.begin(); it != Oi0.end(); ++it) {
        R = *it;
        Oi0Array[O_pos] = R;
        O_pos++;
    }
    O_pos = 0;
    for (it = Oi1.begin(); it != Oi1.end(); ++it) {
        R = *it;
        Oi1Array[O_pos] = R;
        O_pos++;
    }
    O_pos = 0;
    for (it = Oi2.begin(); it != Oi2.end(); ++it) {
        R = *it;
        Oi2Array[O_pos] = R;
        O_pos++;
    }

    // Prepare chi_vec
    double *chi_A = new double[Oi0.size()];
    double *chi_B = new double[Oi0.size()];
    double *chi_C = new double[Oi0.size()];
    for (int i = 0; i < Oi0.size(); i++) {
        chi_A[i] = 0;
        chi_B[i] = 0;
        chi_C[i] = 0;
    }

    //Print out all lattice vectors
    if (false) {
        cout << "Lattice size: " << O.size() << endl;
        list<Rvec>::iterator it;
        int c = 0; Rvec R;
        for (it = O.begin(); it != O.end(); ++it) {
            R = *it;
            printR(R);
            c = c + 1;
        }
        cout << c << "\n";
        exit(EXIT_FAILURE);
    }


    //Get positions in "O" of three vectors related by symmetry.
    list<Rvec>::iterator it2;
    Rvec R2;
    int nx = 0; int ny = 0; int nz = 0; int i = 0;
    for (it2 = O.begin(); it2 != O.end(); ++it2) {
        R2 = *it2;
        if (R2.a1 == 0 && R2.a2 == 1) {
            nz = i;
        }
        if (R2.a1 == 1 && R2.a2 == -1) {
            nx = i;
        }
        if (R2.a1 == -1 && R2.a2 == 0) {
            ny = i;
        }
        i++;
    }

    //Read the Lambda at which a previous run stopped
    try {
        ifstream infile("tempLam.txt");
        string LamString;
        getline(infile, LamString);
        Lam = stod(LamString);
        cout << "Starting at Lambda = " << LamString << endl;
    }
    catch (const exception& e) {}

    bool programFinished = true;
    bool restartProgram = false;


    //Solve ODE
    double stepSize = Lam * (LamResolution - 1.0);
    try {
        ifstream infile("tempStepsize.txt");
        string StepsizeString;
        getline(infile, StepsizeString);
        stepSize = stod(StepsizeString);
    }
    catch (const exception& e) {}
    double stepSizeOld;
    double LamOld = Lam;
    gsl_odeiv2_system sys = { getDG, NULL, totaldim, };
    //gsl_odeiv2_driver *d = gsl_odeiv2_driver_alloc_y_new(&sys, gsl_odeiv2_step_rk2,Lam0*(LamResolution-1.0), precisionAbs, precisionRel);	//finer: gsl_odeiv2_step_rkf45

    const gsl_odeiv2_step_type * T
            = gsl_odeiv2_step_rk2;

    gsl_odeiv2_step * s
            = gsl_odeiv2_step_alloc(T, totaldim);
    gsl_odeiv2_control * c
            = gsl_odeiv2_control_y_new(precisionAbs, precisionRel);
    gsl_odeiv2_evolve * e
            = gsl_odeiv2_evolve_alloc(totaldim);
    int loopcounter = 0;

    while (Lam > minLam) {
        //gsl_odeiv2_driver_apply(d, &Lam, Lam_vec[nLam], G_vec);
        cout << "Counter: " << loopcounter << endl;
        loopcounter++;

        cout << "...down to Lam=" << Lam << "\n";
        cout << "0, x, y, and z-component of the self-energy for zero frequency: " << getSE(G_vec, 0, 1, 0) << ", " << getSE(G_vec, 1, 1, 0) << ", " << getSE(G_vec, 2, 1, 0) << ", " << getSE(G_vec, 3, 1, 0) << endl;
        //cout << "z-component of propagator for zero frequency: " << getgz(3,0)<<endl;
        cout << "Coefficient matrix of the two-particle vertex: " << endl;
        cout << getG(G_vec, 1, 0, 0, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 0, 1, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 0, 2, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 0, 3, { 0,0,1 }, 1, 3, 2) << "\t" << endl
             << getG(G_vec, 1, 1, 0, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 1, 1, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 1, 2, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 1, 3, { 0,0,1 }, 1, 3, 2) << "\t" << endl
             << getG(G_vec, 1, 2, 0, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 2, 1, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 2, 2, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 2, 3, { 0,0,1 }, 1, 3, 2) << "\t" << endl
             << getG(G_vec, 1, 3, 0, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 3, 1, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 3, 2, { 0,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 3, 3, { 0,0,1 }, 1, 3, 2) << "\t" << endl << endl;

        cout << getG(G_vec, 1, 0, 0, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 0, 1, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 0, 2, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 0, 3, { 1,0,1 }, 1, 3, 2) << "\t" << endl
             << getG(G_vec, 1, 1, 0, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 1, 1, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 1, 2, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 1, 3, { 1,0,1 }, 1, 3, 2) << "\t" << endl
             << getG(G_vec, 1, 2, 0, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 2, 1, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 2, 2, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 2, 3, { 1,0,1 }, 1, 3, 2) << "\t" << endl
             << getG(G_vec, 1, 3, 0, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 3, 1, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 3, 2, { 1,0,1 }, 1, 3, 2) << "\t" << getG(G_vec, 1, 3, 3, { 1,0,1 }, 1, 3, 2) << "\t" << endl << endl;


        cout << "Check susceptibility for symmetry-related nearest-neighbor bonds: " << chi_A[nx] << ", " << chi_A[ny] << ", " << chi_A[nz] << endl;

        //Apply Runge-Kutta
        stepSizeOld = stepSize;
        LamOld = Lam;
        int status = gsl_odeiv2_evolve_apply(e, c, s,
                                             &sys,
                                             &Lam, minLam,
                                             &stepSize, G_vec);

        if (status != GSL_SUCCESS) {
            cout << "Runge-Kutta step failed" << endl;
            break;
        }

        //Set maximum step size
        if (abs(stepSize) > Lam*maxStepGrowth) {
            stepSize = -Lam * maxStepGrowth;
        }
        //Limit growth of step sizes
        double stepSizeOldRescaled = stepSizeOld * Lam / LamOld;
        if (stepSize / stepSizeOldRescaled > (1.0 + maxStepGrowth)) {
            stepSize = stepSizeOldRescaled * (1.0 + maxStepGrowth);
        }
        if (stepSize / stepSizeOldRescaled < (1.0 - maxStepGrowth)) {
            stepSize = stepSizeOldRescaled * (1.0 - maxStepGrowth);
        }
        cout << "Relative Lambda step size: " << abs(stepSize / Lam) << endl;
        if (abs(stepSize / Lam) < 1e-6) {
            cout << "End program due to small step width" << endl;
            break;
        }

        //Save Lam_vec
        out_file.open(fileName + "_Lams.txt", std::ofstream::out | std::ofstream::app);
        out_file << std::fixed << std::setprecision(8) << Lam << "\n";
        out_file.close();

        //Save Magnetization
        out_file.open(fileName + "_MagnetizationFlow.txt", std::ofstream::out | std::ofstream::app);
        out_file << std::fixed << std::setprecision(8) << getM(Lam, 1, 0, G_vec) << "\t" << getM(Lam, 2, 0, G_vec) << "\t" << getM(Lam, 3, 0, G_vec)
                 << "\t" << getM(Lam, 1, 1, G_vec) << "\t" << getM(Lam, 2, 1, G_vec) << "\t" << getM(Lam, 3, 1, G_vec) << "\t"
                 << getM(Lam, 1, 2, G_vec) << "\t" << getM(Lam, 2, 2, G_vec) << "\t" << getM(Lam, 3, 2, G_vec) << "\n";
        out_file.close();

        //Save self-energy
        out_file.open(fileName + "_SE0.txt", std::ofstream::out | std::ofstream::app);
        for (int i = 0; i <= Ng; ++i) {
            out_file << std::fixed << std::setprecision(8) << getSE(G_vec, 0, i + 1, 0) << "\t";
        }
        out_file << "\n";
        out_file.close();
        out_file.open(fileName + "_SEz.txt", std::ofstream::out | std::ofstream::app);
        out_file << "\n";
        for (int i = 0; i <= Ng; ++i) {
            out_file << std::fixed << getSE(G_vec, 3, i + 1, 0) << "\t";
        }
        out_file.close();

        /*out_file.open(fileName+"_SEz_B.txt", std::ofstream::out | std::ofstream::app);
                out_file << "\n";
                for (int i=0; i<=Ng; ++i){
                        out_file << std::fixed << getSE(G_vec,3,i+1,1) << "\t";
                }
                out_file.close();

                out_file.open(fileName+"_SEz_C.txt", std::ofstream::out | std::ofstream::app);
                out_file << "\n";
                for (int i=0; i<=Ng; ++i){
                        out_file << std::fixed << getSE(G_vec,3,i+1,2) << "\t";
                }
                out_file.close();*/

        //Compute static spin correlations and save them
        getChi_zz(chi_A, Lam, 0, G_vec);
        getChi_zz(chi_B, Lam, 1, G_vec);
        getChi_zz(chi_B, Lam, 2, G_vec);
        cout << "chi_zz " << chi_A[0] << "\n";

        out_file.open(fileName + "_zz.txt", std::ofstream::out | std::ofstream::app);
        list<Rvec>::iterator it;
        int O_pos = -1;
        for (it = Oi0.begin(); it != Oi0.end(); ++it) {
            O_pos += 1;
            out_file << std::fixed << std::setprecision(8) << chi_A[O_pos] << " ";
        }
        out_file << std::fixed << "\n";
        out_file.close();

        out_file.open(fileName + "B_zz.txt", std::ofstream::out | std::ofstream::app);
        O_pos = -1;
        for (it = Oi1.begin(); it != Oi1.end(); ++it) {
            O_pos += 1;
            out_file << std::fixed << std::setprecision(8) << chi_B[O_pos] << " ";
        }
        out_file << std::fixed << "\n";
        out_file.close();

        out_file.open(fileName + "C_zz.txt", std::ofstream::out | std::ofstream::app);
        O_pos = -1;
        for (it = Oi2.begin(); it != Oi2.end(); ++it) {
            O_pos += 1;
            out_file << std::fixed << std::setprecision(8) << chi_C[O_pos] << " ";
        }
        out_file << std::fixed << "\n";
        out_file.close();


        //End program if the flow diverges (in this case, the "if" statement detects nan output)
        if (getG(G_vec, 1, 0, 0, { 0,0,1 }, 1, 3, 2) != getG(G_vec, 1, 0, 0, { 0,0,1 }, 1, 3, 2) && N > 10)
        {
            cout << "Vertex diverged. End program." << endl;
            break;
        }

        //Save full vertices in a file if the program still isn't finished after some set time (comment out if you want the program to execute longer than one day)
        auto t_final = high_resolution_clock::now();
        duration<double, std::ratio<3600>> runtimehours = t_final - t_init;
        if (runtimehours.count() > 20) {
            programFinished = false;
            restartProgram = true;
            try { remove("tempLam.txt"); }
            catch (const exception& e) {}
            try { remove("tempStepsize.txt"); }
            catch (const exception& e) {}
            try { remove("vertices.data"); }
            catch (const exception& e) {}
            writeVerticesInFile();

            out_file.open("tempLam.txt", std::ofstream::out | std::ofstream::app);
            out_file << std::fixed << std::setprecision(8) << Lam;
            out_file.close();

            out_file.open("tempStepsize.txt", std::ofstream::out | std::ofstream::app);
            out_file << std::fixed << std::setprecision(8) << stepSize;
            out_file.close();

            out_file.open("RuntimeCounter.txt", std::ofstream::out | std::ofstream::app);
            out_file << "+20h" << "    " << Lam << endl;
            out_file.close();

            break;
        }
    }

    gsl_odeiv2_evolve_free(e);
    gsl_odeiv2_control_free(c);
    gsl_odeiv2_step_free(s);
    delete[]G_vec;
    delete[]PropagatorBubble;
    delete[]chi_A;
    delete[]chi_B;
    delete[]chi_C;
    //delete[]DG_TwoLoop_S;
    //delete[]DG_TwoLoop_T;
    //delete[]DG_TwoLoop_U;
    //gsl_odeiv2_driver_free(d);

    auto t_final = high_resolution_clock::now();
    duration<double, std::ratio<3600>> runtimehours = t_final - t_init;
    std::cout << "Execution time of the program: " << runtimehours.count() << "h" << endl;

    if (programFinished) {
        try { remove("tempLam.txt"); }
        catch (const exception& e) {}
        try { remove("tempStepsize.txt"); }
        catch (const exception& e) {}
        try { remove("vertices.data"); }
        catch (const exception& e) {}
    }

    if (restartProgram)
    {
        //Begin a new job
        system("sbatch jobscript.sh");
    }

    return 0;
}
